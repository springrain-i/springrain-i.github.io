{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6625\u96e8\u7684\u7b14\u8bb0\u672c","text":"<p>Note</p> <p>\u975e\u5e38\u9ad8\u5174\u4f60\u7684\u5230\u6765\ud83d\ude0b\uff01</p>"},{"location":"else/","title":"\u6742\u9879","text":""},{"location":"else/#_1","title":"\u5176\u4ed6","text":"<ul> <li>\u89c6\u9891\u63d2\u4ef6</li> </ul>"},{"location":"mkdocs/","title":"mkdocs\u4f7f\u7528\u8bb0\u5f55","text":""},{"location":"mkdocs/#mkdocsgithub","title":"\u4f7f\u7528mkdocs\u642d\u5efa\u4e2a\u4eba\u4e3b\u9875\u5e76\u5173\u8054\u5230github\u4e0a","text":"<p>2024/02/05</p> <ol> <li>git\u70b9\u51fb\u8be5\u7f51\u7ad9\uff0c\u6309\u7167\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e8c\u6b65\u521b\u5efa\u81ea\u5df1\u7684repository</li> <li><code>pip install mkdocs</code>(\u5982\u679c\u4e0d\u6210\u529f\u53ef\u4ee5\u7528<code>sudo pip install mkdocs</code>)</li> <li>\u5b89\u88c5\u4e3b\u9898\u63d2\u4ef6<code>pip install mkdocs-material</code></li> <li>\u5728repository\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b<code>mkdocs new test</code>\u521b\u5efa\u6587\u4ef6\u5939</li> <li><code>mkdocs serve</code>\u5b9e\u65f6\u6e32\u67d3 <code>mkdocs build</code>\u751f\u6210\u9759\u6001\u7f51\u9875\u4ee3\u7801 <code>mkdocs gh-deploy</code>\u81ea\u52a8\u90e8\u7f72\u5230GitHub\u4e0a</li> </ol> <p>Reference:</p> <ul> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> <li>\u5173\u4e8eMkdocs Material\u7684\u5177\u4f53\u4f7f\u7528</li> <li>material for mkdcos\u6587\u6863</li> <li>mkdocs\u5b98\u65b9\u6587\u6863</li> </ul>"},{"location":"mkdocs/#mkdocs-material","title":"\u8c03\u6574mkdocs-material\u5b57\u4f53","text":"<p>2024/03/01</p> <p>\u53c2\u8003\u8d44\u6599:</p> <ul> <li>\u8be6\u7ec6\u64cd\u4f5c</li> <li>\u4e2d\u6587\u5b57\u4f53Github\u4ed3\u5e93</li> <li>\u4e2d\u6587\u5b57\u4f53CSDN</li> </ul>"},{"location":"wsl/","title":"WSL\u4f7f\u7528\u8bb0\u5f55","text":""},{"location":"wsl/#wslpython","title":"WSL\u5185\u88c5python","text":"<p>2024/02/04</p> <ul> <li>WSL\u5185\u7f6epython\uff0c\u518d\u88c5\u4e00\u4e2apip\u5373\u53ef<code>python apt install python3-pip</code></li> <li>\u5982\u679c\u62a5\u9519\uff0c\u5219\u5148<code>sudo apt-get upgrade</code>\uff0c\u7136\u540e\u518d\u91cd\u590d\u4e0a\u8fb9\u64cd\u4f5c\u5373\u53ef</li> </ul>"},{"location":"wsl/#wslvpn","title":"\u5728WSL\u91cc\u4f7f\u7528VPN","text":"<p>2024/02/05</p> <ol> <li>\u5728Clash for Windows\u91cc\u6253\u5f00<code>Allow Wlan</code>\u5f00\u5173\uff0c\u5141\u8bb8\u5c40\u57df\u7f51\u8bbe\u5907\u8bbf\u95ee\u4ee3\u7406</li> <li>\u5728WSL\u5185\u7684.bashrc\u6587\u4ef6\u91cc\u5c06\u4e0b\u8fb9\u5185\u5bb9\u590d\u5236\u8fdb\u53bb <pre><code>proxy () {\n    export hostip=$(cat /etc/resolv.conf |grep -oP '(?&lt;=nameserver\\ ).*')\n    export https_proxy=\"http://${hostip}:7890\"\n    export http_proxy=\"http://${hostip}:7890\"\n    export all_proxy=\"sock5://${hostip}:7891\"\n    echo \"HTTP Proxy on: ${hostip}\"\n}\nnoproxy () {\n    unset http_proxy\n    unset https_proxy\n    unset all_proxy\n    echo \"HTTP Proxy off\"\n}\n</code></pre></li> <li><code>source .bashrc</code> \u91cd\u8f7d\u8be5\u6587\u4ef6</li> <li>\u6bcf\u6b21\u5728\u9700\u8981\u5f00\u542f\u4ee3\u7406\u7684\u7ec8\u7aef\u8f93\u5165proxy\u5373\u53ef\u5f00\u542f\u4ee3\u7406,\u8f93\u5165noproxy\u53ef\u4ee5\u5173\u95ed\u4ee3\u7406</li> <li><code>wegt www.google.com</code>\u68c0\u6d4b\u662f\u5426\u6210\u529f \u53c2\u8003\u7f51\u7ad9</li> </ol>"},{"location":"Diary/","title":"\u4f9d\u65e7\u662f\u90a3\u4e2a\u6625\u96e8~","text":"<p>Abstrace</p> <p>\u8fd9\u662f\u5206\u4eab\u751f\u6d3b\uff0c\u611f\u60f3\uff0c\u65e5\u8bb0\u7684\u5730\u65b9(\u2579\u06a1\u2579 )</p>"},{"location":"Diary/2024/","title":"\u4eba\u6a21\u4eba\u6837","text":"<p>Abstract</p> <p>\u62d6\u4e86\u8bb8\u4e45\uff0c\u7ec8\u4e8e\u5f00\u59cb\u5199\u81ea\u5df1\u7684\u5e74\u7ec8\u603b\u7ed3\u4e86\u3002</p> <p>\u8bb8\u591a\u4e8b\uff0c\u5c31\u662f\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u5199\u4e0b\u53cd\u601d\u5373\u53ef\u3002\u56e0\u4e3a\u77e5\u9053\u81ea\u5df1\u672a\u6765\u56de\u987e\u65f6\uff0c\u4e5f\u4e0d\u4f1a\u6709\u8010\u5fc3\u770b\u5927\u7bc7\u5e45\u7684\u65e7\u4e8b\u3002</p> <p>19\uff1a37,\u53c8\u662f\u4e00\u5e74\u9664\u5915\u591c\uff0c\u5750\u5728\u5367\u5ba4\u7684\u7535\u8111\u524d\uff0c\u7ec8\u4e8e\u8981\u5f00\u59cb\u5199\u5e74\u7ec8\u603b\u7ed3\u4e86\u3002</p> <p>\u90fd\u5fd8\u4e86\u4ece\u4f55\u65f6\u8d77\uff0c\u6ca1\u518d\u770b\u8fc7\u6625\u665a\uff0c\u603b\u662f\u5750\u5728\u7535\u8111\u9762\u524d\u5ea6\u8fc7\u7684\u65b0\u5e74\u3002</p>"},{"location":"Diary/2024/#_2","title":"\u9ad8\u8003\u524d\uff1a","text":"<p>Note</p> <p>\u8bb0\u5f97\u9ad8\u8003\u524d\uff0c\u6211\u7684\u4e00\u53e5\u4e2a\u6027\u7b7e\u540d\uff1a\u81ea\u5f8b\u81ea\u5f3a\uff0c\u6e29\u67d4\u5584\u826f\u3002</p> <p>\u56de\u60f3\u9ad8\u4e2d\u4e09\u5e74\uff0c\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u786e\u5b9e\u662f\u505a\u5230\u4e86\u3002</p> <p>\u9ad8\u8003\u7684\u90a3\u6bb5\u7ecf\u5386\uff0c\u6211\u7684\u7eb8\u8d28\u65e5\u8bb0\u672c\u8bb0\u5f55\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u5728\u6b64\u5c31\u7701\u7565\u4e86\u3002</p> <p>\u603b\u7ed3\u4e0b\u6765\u5c31\u662f\uff1a\u5f88\u5e78\u8fd0\u80fd\u5728\u5b9e\u9a8c\u9ad8\u4e2d\uff0c\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u5e78\u798f\u7684\u9ad8\u4e2d\u751f\u6d3b\u3002</p>"},{"location":"Diary/2024/#_3","title":"\u9ad8\u8003\u540e\u7684\u6691\u5047","text":"<p>Note</p> <p>\u9ad8\u8003\u540e\u7279\u522b\u559c\u6b22\u7684\u4e00\u53e5\u8bdd\uff1a\u7231\u81ea\u5df1\u662f\u7ec8\u751f\u6d6a\u6f2b\u7684\u5f00\u59cb\u3002</p> <p>\u6691\u5047\u7b2c\u4e00\u6b21\u56e0\u4e3a\u4e00\u4e9b\u5bc4\u4e88\u539a\u671b\u800c\u6700\u7ec8\u88ab\u653e\u9e3d\u5b50\u7684\u4e8b\u60c5\u800c\u7834\u9632\uff0c\u751f\u6c14\uff0c\u4e5f\u6df1\u6df1\u8ba4\u8bc6\u5230\u4e86\uff1a\u6295\u5165\u2260\u4ea7\u51fa\u3002</p> <p>\u6211\u4eec\u5f88\u96be\u8981\u6c42\u522b\u4eba\u53bb\u600e\u6837\u600e\u6837\uff0c\u6700\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u8fd8\u662f\u5148\u505a\u597d\u81ea\u5df1\u3002\u4e0d\u8fc7\uff0c\u6211\u7684\u54e5\u54e5\u4e5f\u544a\u8bc9\u4e86\u6211\uff1a\u4e0e\u5176\u8f9b\u82e6\u81ea\u5df1\uff0c\u4e0d\u5982\u9ebb\u70e6\u522b\u4eba\u3002\u4e0e\u5176\u81ea\u6211\u53cd\u601d\uff0c\u4e0d\u5982\u6307\u8d23\u4ed6\u4eba\u3002</p> <p>\u786e\u5b9e\u5427\uff0c\u540e\u8005\u6709\u65f6\u8fd8\u662f\u6709\u7528\u7684\uff0c\u5728\u8fd9\u4e00\u9636\u6bb5\uff0c\u6211\u5bf9\u6240\u6709\u4eba\u7684\u671f\u671b\u503c\u4e5f\u90fd\u964d\u4f4e\u4e86\uff0c\u4e0d\u518d\u53bb\u60f3\u7740\u522b\u4eba\u4f1a\u600e\u6837\u600e\u6837\u3002</p> <p>\u5177\u4f53\u5230\u6691\u5047\u505a\u7684\u5b9e\u4e8b\uff0c\u4e5f\u5c31\u662f\u5bb6\u6559\u548c\u5728\u5bb6\u91cc\u9762\u62cd\u62cd\u7bee\u7403\u4e86\u3002</p>"},{"location":"Diary/2024/#_4","title":"\u5927\u5b66","text":"<p>\u521a\u8fdb\u6821\u56ed\u65f6\uff0c\u786e\u5b9e\u50cf\u5218\u59e5\u59e5\u8fdb\u5927\u89c2\u56ed\uff0c\u611f\u6982\u7740\u5b66\u6821\u7684\u6062\u5b8f\u5927\u6c14\uff0c\u5bbf\u820d\u7684\u6574\u6d01\u7f8e\u4e3d\uff0c\u786e\u5b9e\u5e78\u798f\u611f\u6ee1\u6ee1\u3002\u4e0a\u5b66\u671f\u7684\u6821\u56ed\u65f6\u5149\u8fc7\u7684\u597d\u5feb\uff0c\u611f\u89c9\u6bcf\u4e00\u5929\u90fd\u975e\u5e38\u5145\u5b9e\uff0c\u4e0b\u8fb9\u5c31\u8bb0\u5f55\u4e00\u4e9b\u91cd\u8981\u4e8b\u4ef6\u5427~</p>"},{"location":"Diary/2024/#_5","title":"\u65b0\u751f\u4ee3\u8868","text":"<p>\u8fd9\u7edd\u5bf9\u7b97\u662f\u4eca\u5e74\u6700\u5149\u8363\u7684\u4e00\u4ef6\u4e8b\u4e86\uff01</p> <p>\u8fd8\u8bb0\u5f97\u5f53\u65f6\u548c\u54e5\u54e5\u5728\u901b\u897f\u6e56\u65f6\uff0c\u6211\u8fd8\u5728\u90a3\u91cc\u60f3\u7740\u7a3f\u5b50\u600e\u4e48\u5199\uff0c\u6ca1\u6709\u597d\u597d\u7684\u901b\uff08\u4e5f\u662f\u59d4\u5c48\u54e5\u54e5\u4e86\uff0c\u6765\u4e86\u676d\u5dde\u5374\u6ca1\u597d\u597d\u901b\u6210\uff09\uff0c\u81f3\u4eca\u4e5f\u6ca1\u597d\u597d\u6b23\u8d4f\u897f\u6e56\u7f8e\u666f\uff0c\u8fd9\u6b21\u53bb\u4e00\u5b9a\u8981\u53bb\u5750\u5750\u8239\u3002</p> <p>\u8bb0\u5f97\u5728\u4e0a\u53f0\u524d\u7684\u6392\u7ec3\u65f6\uff0c\u8fd8\u56e0\u4e3a\u80a2\u4f53\u7684\u8fc7\u5ea6\u50f5\u786c\u80cc\u95ee\u5230\u5bb6\u91cc\u662f\u4e0d\u662f\u6709\u5f53\u5175\u7684\u4eba\u3002/(\u3112o\u3112)/~~</p> <p>\u5728\u6700\u540e\u6b63\u5f0f\u5f00\u59cb\u65f6\uff0c\u5929\u4e0a\u4e0b\u7740\u5927\u96e8\uff0c\u5173\u4e8e\u5230\u5e95\u8981\u4e0d\u8981\u7a7f\u96e8\u8863\u4e0a\u53f0\u4e00\u4e8b\uff0c\u786e\u5b9a\u4e86\u597d\u51e0\u6b21\u3002\u5728\u53f0\u4e0a\u65f6\uff0c\u96e8\u5176\u5b9e\u5f88\u5927\uff0c\u7a3f\u4e0a\u597d\u591a\u5b57\u5176\u5b9e\u90fd\u770b\u4e0d\u592a\u6e05\u695a\u4e86\uff0c\u4e0d\u8fc7\u5e78\u597d\u8bfb\u5f97\u591a\uff0c\u4e5f\u90fd\u5dee\u4e0d\u591a\u4f1a\u80cc\u4e86\uff0c\u6240\u4ee5\u9664\u4e86\u6700\u540e\u7684\u7834\u97f3\u5916\uff0c\u81ea\u6211\u611f\u89c9\u8fd8\u7b97\u826f\u597d\u3002</p> <p>\u4eba\u751f\u96be\u5fd8\u7684\u4e00\u6b21\u7ecf\u5386\uff01</p> <p>\u6700\u540e\u4e5f\u975e\u5e38\u611f\u8c22\u90a3\u4f4d\u4ee3\u8868\u5b66\u59d0\uff0c\u7ed9\u6211\u62cd\u51fa\u4e86\u81f3\u4eca\u4eba\u751f\u4e2d\u6700\u5e05\u7684\u4e00\u5f20\u7167\u7247\u3002 </p> <p>\u53cd\u601d</p> <p>\u5728\u6bcf\u4e00\u6b21\u673a\u4f1a\u5230\u6765\u65f6\uff0c\u8003\u91cf\u81ea\u5df1\u7684\u80fd\u529b\u4e0e\u7cbe\u529b\uff0c\u4e0d\u8981\u81ea\u5351\uff0c\u8981\u5927\u80c6\u5c1d\u8bd5\uff0c\u4e5f\u8981\u53bb\u7528\u5fc3\uff0c\u4e0d\u9519\u5931\u53ef\u8d35\u7684\u673a\u4f1a\uff0c\u4e5f\u4e0d\u8f9c\u8d1f\u4ed6\u4eba\u7684\u539a\u671b\u3002</p>"},{"location":"Diary/2024/#_6","title":"\u7ed3\u8bc6\u597d\u53cb","text":"<p>\u975e\u5e38\u5e78\u8fd0\uff0c\u80fd\u5728\u8fd9\u4e2a\u5b66\u671f\uff0c\u4ea4\u5230\u4e09\u4f4d\u597d\u54e5\u4eec\uff0c\u5e26\u7740\u6211\u53bb\u89c1\u4e16\u9762\uff0c\u5403\u5927\u9910\u3002</p> <p>\u611f\u89c9\u8fd9\u4e00\u5b66\u671f\uff0c\u5f88\u591a\u7684\u5feb\u4e50\uff0c\u90fd\u662f\u6765\u6e90\u4e8e\u4ed6\u4eec\u3002</p> <p>\u611f\u8c22lq\u5bf9\u6211\u8ba1\u7b97\u673a\u77e5\u8bc6\u7684\u6307\u5bfc\uff0c\u611f\u8c22zjr\u5bf9\u6211\u6570\u5b66\u7684\u6307\u5bfc\uff0c\u611f\u8c22wp\u5927\u7239\u5e26\u6211\u535a\u5f08\u8bba\uff01</p> <p>\u4e5f\u4e0e\u5bb6\u4e61\u7684\u8001\u53cb\u7684\u60c5\u611f\u66f4\u52a0\u6df1\u539a\uff0c\u6843\u56ed\u4e09\u7ed3\u4e49\u6b63\u5f0f\u6210\u7acb\uff0c\u5e38\u5e38\u4e00\u8d77\u89c6\u9891\u804a\u5929\uff0c\u8c08\u8bba\u7740\u6700\u8fd1\u7684\u4e8b\u60c5\uff0c\u4e0d\u8fc7\u67d0\u4eba\u5728\u5b66\u6821\u843d\u843d\u5927\u65b9\uff0c\u56de\u5bb6\u4e86\u5374\u626d\u626d\u634f\u634f\uff0c\u5bfc\u81f4\u5230\u73b0\u5728\u90fd\u8fd8\u6ca1\u51fa\u6765\u805a\u8fc7\uff0c\u4e00\u5927\u8d25\u7b14......</p> <p>\u5e0c\u671b\u4e0b\u4e00\u5b66\u671f\uff0c\u8fd8\u90fd\u4e00\u8d77\u5f53\u597d\u54e5\u4eec\uff01</p>"},{"location":"Diary/2024/#_7","title":"\u5b66\u4e60\ud83d\ude0b","text":"<p>\u5728\u521a\u5f00\u5b66\uff0c\u5c31\u60a3\u4e0a\u4e86\u7535\u5b50\u9633\u75ff\u3002\u5c06\u8fd1\u4e00\u4e2a\u5b66\u671f\u662f\u6ca1\u6709\u73a9\u8fc7\u6e38\u620f\u7684\uff0c\u9664\u4e86\u5feb\u671f\u672b\u65f6\uff0c\u90a3\u8fc7\u4e8e\u597d\u73a9\u7684\u6218\u5730\u2164!\u65b0\u5e74\u65b0\u6c14\u8c61\uff0c\u9664\u5915\u73a9\u4e86\u4e00\u6574\u5929\uff0c\u8be5\u53d8\u56de\u53bb\u4e86\uff0c\u5e0c\u671b\u4e0b\u4e00\u5e74\u91cc\uff0c\u7ee7\u7eed\u7535\u5b50ed~\ud83d\ude00</p> <p>\u521a\u5f00\u5b66\u65f6\u5b66\u7740\u5c5e\u5b9e\u96be\u53d7\uff0c\u5bfc\u81f4\u62c9\u4e86\u4e00\u8282\u3002\u56fd\u5e86\u65f6\u72e0\u72e0\u8865\uff0c\u7136\u540e\u5c31\u5dee\u4e0d\u591a\u80fd\u8ddf\u4e0a\u4e86\u3002\u539f\u672c\u7279\u522b\u81ea\u4fe1\u5728\u5bbf\u820d\u4e5f\u80fd\u9ad8\u6548\u5b66\u4e60\uff0c\u5230\u90fd\u6765\u53ea\u662f\u6b3a\u9a97\u4e86\u81ea\u5df1\uff0c\u5377\u5230\u4e86\u5ba4\u53cb......\u4e0b\u5b66\u671f\uff0c\u5c31\u4e0d\u5728\u5bbf\u820d\u5b66\u4e60\u4e86\uff0c\u5bbf\u820d\u5c31\u662f\u4f11\u606f\u5a31\u4e50\u7684\u5730\u65b9\ud83d\ude0b</p> <p>\u5f53\u7136\u4e86\uff0c\u4e5f\u8981\u5408\u7406\u89c4\u5212\u8def\u7a0b\u4e86\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u901a\u52e4\u65f6\u95f4\uff01\u4e0b\u5b66\u671f\uff0c\u7ee7\u7eed\u52aa\u529b\uff01</p>"},{"location":"Diary/2024/#_8","title":"\u601d\u60f3\u8f6c\u53d8","text":"<p>!!! note:     \u73b0\u5728\uff1a\u7c97\u7cd9\u7684\u5229\u4ed6\u4e3b\u4e49\u8005 \u521a\u6765\u6d59\u5927\uff0c\u89c1\u4e86\u8bb8\u8bb8\u591a\u591a\u7684\u4e8b\uff0c\u4e5f\u521d\u6b65\u9886\u7565\u7684\u4ee5\u5f80\u5e38\u5e38\u5728\u4f5c\u6587\u4e2d\u6240\u6279\u5224\u7684\u201c\u706f\u7ea2\u9152\u7eff\u201d\u3002\u5728\u8fd9\u8fb9\u9047\u5230\u4e86\u8bb8\u591a\u4eba\uff0c\u4e5f\u7ecf\u5386\u4e86\u8bb8\u591a\u4e8b\u3002\u4e00\u5f00\u59cb\u6765\u7684\u65f6\u5019\uff0c\u4e09\u89c2\u786e\u5b9e\u7ecf\u5386\u4e86\u591a\u6b21\u7684\u7834\u788e\u548c\u91cd\u6784......</p> <p>\u5bf9\u6bd4\u4ee5\u524d\u60f3\u60f3\uff0c\u611f\u89c9\u73b0\u5728\u7684\u81ea\u5df1\u786e\u5b9e\u662f\u591a\u4e86\u8bb8\u591a\u5229\u76ca\u8003\u91cf\uff0c\u4e5f\u66f4\u65e0\u60c5\u4e86\u4e00\u70b9\ud83e\udd14\uff1f\u7b97\u662f\u53d8\u574f\u4e86\u5427\uff0c\u4e5f\u7b97\u662f\u6210\u719f\u4e86\u3002</p> <p>\u539f\u672c\u8fd8\u60f3\u8bb0\u5f55\u4e0b\u6211\u751f\u6d3b\u7684\u4e00\u4e9b\u201c\u539f\u5219\u201d\uff0c\u4e8b\u5b9e\u4e0a\u5728\u6765\u6d59\u5927\u540e\u8fd9\u91cc\u9762\u7684\u597d\u51e0\u4e2a\u90fd\u53d1\u751f\u4e86\u4e0d\u5c11\u7684\u53d8\u5316\uff0c\u5f88\u591a\u90fd\u662f\u52a0\u4e0a\u4e86\u201c\u7279\u6b8a\u60c5\u51b5\u201d\u4e0b\u7684\u201c\u7279\u6b8a\u5904\u7406\u201d\uff0c\u8b6c\u5982\uff1a</p> <ul> <li>\u5df1\u6240\u4e0d\u6b32\u52ff\u65bd\u4e8e\u4eba\uff0c\u5df1\u6240\u6b32\u65bd\u4e8e\u4eba\u3002</li> <li>\u4e0d\u5bf9\u522b\u4eba\u6709\u592a\u9ad8\u671f\u671b\uff0c\u4f46\u662f\u8981\u5584\u5f85\u4ed6\u4eba\u3002</li> <li>\u62d2\u7edd\u8d1f\u548c\u535a\u5f08\uff0c\u907f\u514d\u96f6\u548c\u535a\u5f08\uff0c\u5c3d\u91cf\u6b63\u548c\u535a\u5f08\u3002</li> <li>\u968f\u4f60\u8a00\u8bed\u8fb1\u9a82\uff0c\u9020\u8c23\u662f\u975e\uff0c\u53ea\u8981\u4e0d\u662f\u76f4\u63a5\u5f71\u54cd\u4e86\u6211\u7684\u8eab\u8fb9\u751f\u6d3b\uff0c\u5c31\u65e0\u6240\u8c13\u3002</li> <li>\u559c\u6b22\u8010\u5fc3\uff0c\u957f\u4e45\u7684\u76f8\u5904\uff0c\u559c\u6b22\u53ef\u4ee5\u4e0d\u5b9a\u65f6\u7684\u7545\u6240\u6b32\u8a00\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u8a00\u8bed\u4f24\u5bb3\u5f7c\u6b64\u3002</li> <li>\u5bf9\u597d\u4eba\u597d\uff0c\u5bf9\u574f\u4eba\u574f\u3002</li> <li>\u4f60\u7684\u4e0b\u9650\u51b3\u5b9a\u6211\u7684\u4e0b\u9650\u3002\ud83d\ude42</li> </ul> <p>\u4e0d\u8fc7\u786e\u5b9e\u662f\u61d2\uff0c\u4e0d\u60f3\u53bb\u8be6\u7ec6\u5206\u6790\u4e86\u3002\u800c\u4e14\u56e0\u4e3a\u6700\u540e\u4e00\u6761\u7684\u539f\u56e0\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u5f88\u591a\u51b3\u7b56\uff0c\u4e5f\u662f\u4e0d\u4e00\u5b9a\u4f1a\u7528\u4e0a\u8fb9\u51e0\u70b9\u7684\u3002\u66f4\u4f55\u51b5\uff0c\u5c06\u8fd9\u4e9b\u4e1c\u897f\u54d7\u5566\u5566\u7684\u8bb2\u597d\u591a\uff0c\u7136\u540e\u53c8\u516c\u5e03\u4e8e\u4eba\uff0c\u611f\u89c9\u4e0d\u592a\u597d\ud83e\udd14\u3002\u6240\u4ee5\u5c31\u7b80\u5355\u5217\u5728\u8fd9\u91cc\uff0c\u4f9b\u4eca\u5e74\u540e\u66f4\u52a0\u6210\u719f\u7684\u6211\u56de\u6765\u770b\uff0c\u7136\u540e\u770b\ud83e\udd21\u3002</p> <p>\u563b\u563b\ud83e\udd2d\u3002</p>"},{"location":"Diary/2024/#_9","title":"\u5b66\u4e60\u65b9\u5411","text":"<p>\u4e0a\u7684\u4e00\u95e8\u901a\u6838\uff0c\u63a5\u89e6\u4e86\u5c4e\u5c71\u4ee3\u7801\uff0c\u5728\u770b\u7684\u65f6\u5019\u65e0\u6bd4\u6298\u78e8\uff0c\u4e0d\u8fc7\u548c\u961f\u53cb\u6a21\u4eff\u7740\u5199\u51fa\u6765\u540e\u4e5f\u662f\u633a\u6709\u6210\u5c31\u611f\u7684\u3002\u6700\u540e\u5b8c\u6210\u529f\u80fd\u770b\u7740\u8fd8\u662f\u633a\u70ab\u9177\u7684\uff0c\u4e0d\u8fc7\u56fe\u7247\u592a\u5927\uff0c\u653e\u4e0d\u4e0a\u6765\uff0c\u5c31\u7b97\u4e86\uff0c\u8bb0\u5f55\u4e0b\u53cd\u601d\u3002</p> <p>\u53cd\u601d</p> <p>\u5b66\u957f\u66fe\u8bf4\u8fc7\uff1a\u6570\u5b66\u51b3\u5b9a\u4e86\u4f60\u7684\u4e0a\u9650\u3002\u89e3\u51b3\u4e00\u4e2a\u5b9e\u9645\u95ee\u9898\u65f6\uff0c\u6700\u53ef\u8d35\u7684\u662f\u5b9e\u73b0\u7684\u601d\u8def\u4e0e\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u80af\u5b9a\u4f1a\u6709\u5404\u79cd\u7ec6\u8282\u95ee\u9898\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u89e3\u51b3\u7684\u3002</p> <p>\u4e00\u76f4\u90fd\u5f88\u5728\u610f\u4e0d\u53ef\u66ff\u4ee3\u6027\uff0c\u5e0c\u671b\u672a\u6765\uff0c\u6211\u7684\u5de5\u4f5c\u662f\u521b\u9020\uff0c\u800c\u4e0d\u662f\u642c\u7816\uff0c\u751a\u81f3\u662f\u642c\u90a3\u4e9b\u968f\u4fbf\u4e00\u4e9b\u4eba\u90fd\u53ef\u4ee5\u642c\u52a8\u7684\u7816\u3002</p>"},{"location":"Diary/2024/#_10","title":"\u5a31\u4e50\u4e0e\u6210\u957f","text":"<p>\u54ce\u5440\u5440\u5440\uff01\uff01\uff01\u6bcf\u6b21\u90fd\u60f3\u5199\u7684\u6df1\u5165\u70b9\uff0c\u7ed3\u679c\u5199\u7740\u5199\u7740\u5c31\u5f00\u59cb\u6cdb\u6cdb\u800c\u8c08\uff0c\u70e6\ud83d\ude2d!</p> <p>\u4e0a\u5b66\u671f\u4f11\u606f\u65f6\u7231\u770b\u7684\uff1a\u65f6\u653f\u7c7b(\u5f00\u5b66\u521d)-&gt;\u7ea2\u8b66(\u4e00\u6574\u4e2a\u5b66\u671f)-&gt;powersoul\u548cThe One\u6f14\u5531\u4f1a</p> <p>\u5e0c\u671b\u4e0b\u5b66\u671f\u4e0d\u8981\u518d\u770b\u6e38\u620f\u89c6\u9891\u8fa3\uff01\uff01\uff01\u591a\u770b\u70b9\u6f14\u5531\u4f1a\uff0c\u97f3\u4e50\uff0c\u62bd\u8c61\u7684\uff0cor\u597d\u770b\u7684\u667a\u4e91\u8bfe\u5802\u4e5f\u597d\u5440\uff01\uff01\uff01 \u4e5f\u5f00\u59cb\u6709\u4e86\u5065\u8eab\u7684\u4e60\u60ef\uff0c\u5e0c\u671b\u4e0b\u5b66\u671f\u80fd\u591f\u5f62\u6210\u4f53\u7cfb\u3002</p> <p>\u4e5f\u5e0c\u671b\u4e00\u4e2a\u6708\u80fd\u8bfb\u5b8c\u4e00\u672c\u4e66......</p> <p>\u4e5f\u5e0c\u671b\u80fd\u591f\u5728\u4e0b\u5b66\u671f\u7ec3\u7ec3\u5409\u4ed6\u548c\u5531\u6b4c......</p> <p>\u8fd9\u4e48\u591a\u7684......\uff0c\u4f60\u4e5f\u61c2\u5f97....\ud83d\ude2d\u81ea\u8ba4\u4e3a\u5230\u65f6\u5019\u4e5f\u4f1a\u9e3d\u9e3d\u9e3d</p> <p>\u6709\u4eba\u53ef\u4ee5\u76d1\u7763\u6211\u561b\ud83d\ude41</p>"},{"location":"Diary/2024/#_11","title":"\u603b\u7ed3","text":"<p>\u73b0\u5728\u4e5f\u662f\u771f\u6b63\u7684\u6210\u5e74\u4eba\u4e86</p> <p>\u9762\u4e34\u9009\u62e9\u4e5f\u8d8a\u6765\u8d8a\u591a\u6837\uff0c\u4e5f\u8981\u4e3a\u81ea\u5df1\u505a\u7684\u6bcf\u4ef6\u4e8b\u90fd\u8d1f\u8d23</p> <p>\u5a31\u4e50\u5f53\u4e0b\uff0c\u6295\u8d44\u672a\u6765</p> <p>\u52a0\u6cb9\u5427~</p> <p>\u4e5f\u795d\u6bcf\u4f4d\u8010\u5fc3\u770b\u5b8c\u7684\u4f19\u4f34\u9f99\u5e74\u5927\u5409\uff0c\u4e07\u4e8b\u5982\u610f~</p>"},{"location":"Diary/Poetry/","title":"\u8bd7\u6b4c","text":"<p>Abstract</p> <p>\u7528\u6765\u8bb0\u5f55\u5206\u4eab\u559c\u6b22\u7684\u8bd7\u6b4c</p> <p>\u300a\u8d8a\u4eba\u6b4c\u300b</p> <p>\u4eca\u5915\u4f55\u5915\u516e\uff0c\u6434\u821f\u4e2d\u6d41\u3002</p> <p>\u4eca\u65e5\u4f55\u65e5\u516e\uff0c\u5f97\u4e0e\u738b\u5b50\u540c\u821f\u3002</p> <p>\u8499\u7f9e\u88ab\u597d\u516e\uff0c\u4e0d\u8a93\u57a2\u803b\u3002</p> <p>\u5fc3\u51e0\u70e6\u800c\u4e0d\u7edd\u516e\uff0c\u5f97\u77e5\u738b\u5b50\u3002</p> <p>\u5c71\u6709\u6728\u516e\u6728\u6709\u679d\uff0c\u5fc3\u60a6\u541b\u516e\u541b\u4e0d\u77e5\u3002</p>"},{"location":"Diary/record/","title":"\u65e5\u8bb0","text":"<p>Abstract</p> <p>\u6bcf\u5929\u8bb0\u5f55\u81ea\u5df1\u5e72\u4e86\u70b9\u4ec0\u4e48\uff0c\u6765\u6fc0\u52b1\uff0c\u76d1\u7763\u81ea\u5df1\uff01</p> <p>\u6bcf\u65e5\u5fc5\u505a\uff1a\u5b66\u4e60\uff0c\u5065\u8eab\uff0cand\u53ef\u80fd\u4f1a\u6709\u5409\u4ed6\uff1f</p> <p>^(*\uffe3(oo)\uffe3)^</p> <p>2024/03/01</p> <p>\u8017\u65f61h30min\u7ec8\u4e8e\u8c03\u6574\u597d\u6211\u7684\u7f51\u7ad9\uff0c\u5fc3\u7d2f...</p> <p>\u6b21\u65e5\u56de\u987e :</p> <ul> <li> <p> \u5feb\u6377\u952e</p> </li> <li> <p>Vscode:</p> </li> <li>vscode\u521b\u5efa\u65b0\u7a97\u53e3 ctrl + shift + n</li> <li>F11 \u5168\u5c4f\uff0c\u786e\u4fdd\u4e13\u6ce8</li> <li>Ctrl + K Z \u5723\u7985\u6a21\u5f0f</li> <li>Ctrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</li> <li>Alt + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt + 9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>\u5feb\u901f\u56de\u5230\u9876\u90e8 \uff1a ctrl + home,\u5feb\u901f\u56de\u5230\u5e95\u90e8 : ctrl + end</li> <li>Ctrl + \u53f3\u7bad\u5934,\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 </li> <li>Ctrl + M ,\u6570\u5b66\u516c\u5f0f</li> <li>Window:</li> <li>window+H \u7b14\u8bb0\u672c\u7684\u8bed\u97f3\u8f93\u5165</li> <li>window+V \u526a\u8d34\u677f</li> <li>window + 1,2,3 \u5207\u6362\u5230\u5bf9\u5e94\u7684\u5e94\u7528\u754c\u9762</li> <li>Edge:</li> <li>Ctrl + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt+9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>Ctrl + Tab \u5207\u6362\u5230\u4e0b\u4e00\u6807\u7b7e\u9875</li> <li> <p>Ctrl + T \u521b\u5efa\u65b0\u6807\u7b7e\u9875\uff0cCtrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</p> </li> <li> <p> CSAPP\u9700\u8981\u8865\u5751~</p> </li> </ul> <p>2024/02/25</p> <p>\u4eca\u65e5\u76ee\u6807: 1. \u7269\u7406\u5b66PPT\u9884\u4e60 2. \u7ebf\u4ee3\u9884\u4e60 3. \u6570\u5206cjhppt\u9884\u4e60  4. \u65c5\u6e38\u65e5\u8bb0\u8865\u5199</p> <p>2024/02/21</p> <p>\u4eca\u65e5\u6bd4\u8f83\u81ea\u5f8b\uff0c\u5728\u56fe\u4e66\u9986\u5b66\u4e86\u5f88\u4e45\u3002 \u6253\u7b97\u6309\u7167\u56fe\u7075\u5b66\u4e60\u6307\u5357\u628a\u6b20\u7684\u7ebf\u4ee3\u518d\u91cd\u65b0\u590d\u4e60\u4e0b\uff0c\u8ddf\u7740\u5218\u5eb7\u751f\u8001\u5e08\u8d70\uff0c\u8fd8\u662f\u5bb3\u6015\u5b66\u4e0d\u597d\u5bfc\u81f4\u4f4e\u5b66\u5206\u7684\u3002\u4e5f\u770b\u4e86\u4e00\u8282\u79bb\u6563\u7684PPT</p> <p>\u665a\u4e0a\u6210\u529f\u5b8c\u6210\u953b\u70bc\u4efb\u52a1\uff0c\u5206\u4eab\u4e00\u4e2a\u89c6\u9891,\u611f\u89c9\u633a\u597d\u770b\u7684\u3002</p> <p>\u4e00\u4e2a\u7b97\u662f\u5173\u4e8e\u7684\u7a7f\u642d\u7684\u5427</p> <p>\u5047\u671f\u5728\u5bb6\u7ed9\u522b\u4eba\u8f85\u5bfc\uff0c\u53d1\u73b0\u81ea\u5df1\u5728\u5927\u5b66\u4e2d\u4e5f\u72af\u7740\u540c\u6837\u7684\u95ee\u9898\u3002</p> <p>\u5728\u8fc7\u5f80\u7684\u6559\u80b2\u4e2d\u7f3a\u4e4f\u80fd\u529b\u7684\u57f9\u517b\u5bfc\u81f4\u4e0a\u5b66\u671f\u662f\u9ad8\u6295\u5165\u4f4e\u56de\u62a5\u3002\u4e0b\u5b66\u671f\u5c31\u52e4\u5feb\u4e00\u70b9\uff0c\u591a\u6295\u5165\u4e00\u70b9\u65f6\u95f4\u53bb\u601d\u8003\u603b\u7ed3\uff0c\u5e0c\u671b\u80fd\u4e0d\u65ad\u5c06\u81ea\u5df1\u7684\u5b66\u4e60\u80fd\u529b\u63d0\u5347\u5230\u50cf\u5144\u5f1f\u4eec\u90a3\u6837\u7684\u6c34\u5e73\u3002 \u4e0b\u5b66\u671f\u5c31\u8981\u597d\u597d\u5b66\u4e86\uff0c\u5e0c\u671b\u80fd\u5f04\u4e2a\u4fdd\u7814\u5427\u3002</p> <p>\u7ec8\u4e8e\u5927\u6982\u628a\u6bcd\u6821\u91cc\u5b66\u5f1f\u5b66\u59b9\u7684\u95ee\u9898\u56de\u7b54\u5b8c\u4e86\u3002\u4e5f\u66f4\u89c9\u5f97\u63d0\u95ee\u7684\u667a\u6167\u6709\u591a\u91cd\u8981\u3002</p> <p>\u5bf9\u4e8e\u4e2a\u4eba\u800c\u8a00\uff0c\u4f60\u63d0\u4e00\u4e2a\u95ee\u9898\u4f3c\u4e4e\u4e0d\u6d6a\u8d39\u5bf9\u65b9\u592a\u591a\u65f6\u95f4\uff0c\u4f46\u662f\u5bf9\u4e8e\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u4ed6\u662f\u8981\u56de\u590d200\u591a\u4e2a\u4eba\u7684\uff0c\u5e76\u4e14\u672c\u6765\u5c31\u662f\u65e0\u4e49\u52a1\u7684\uff0c\u53ea\u662f\u5e0c\u671b\u6bcd\u6821\u7684\u6210\u7ee9\u53ef\u4ee5\u66f4\u597d\u800c\u5df2\u3002</p> <p>\u5e0c\u671b\u5927\u5bb6\u4ee5\u540e\u5171\u52c9\uff1a</p> <ol> <li>\u63d0\u95ee\u95ee\u9898\u65f6\u5c3d\u53ef\u80fd\u8be6\u7ec6\uff0c\u8bf4\u6e05\u95ee\u9898\u80cc\u666f\uff08\u5e74\u7ea7or\u5fc3\u6001or\u60f3\u6cd5\uff09\uff0c\u8bf4\u6e05\u95ee\u9898\u5173\u952e\uff0c\u5982\u679c\u80fd\u60f3\u660e\u767d\u81ea\u5df1\u60f3\u8981\u5f97\u5230\u7684\u56de\u590d\uff0c\u90a3\u4e5f\u8bf7\u8868\u8fbe\u51fa\u6765\u3002</li> <li>\u8bf7\u5728\u8be2\u95ee\u65f6\u66f4\u6709\u793c\u8c8c\u4e00\u4e9b</li> <li>\u8bf7\u8ba4\u771f\u542c\u5f53\u65f6\u6f14\u8bb2\u65f6\u8bf4\u7684\u5440\uff0c\u597d\u591a\u95ee\u9898\u90fd\u662f\u95ee\u7684PPT\u4e0a\u6709\u7684\uff0c\u6211\u662f\u771f\u7684\u4e0d\u60f3\u56de\u590d\uff01</li> </ol> <p>\u5728\u8fd9\u91cc\u653e\u4e00\u4e2a\u53cd\u4f8b\uff01  \u52a0\u6cb9\u5427\uff01</p> <p>2024/02/20</p> <p>\u6700\u8d77\u7801\u4e0b\u5348\u662f\u5728\u56fe\u4e66\u9986\u5b66\u4e86\u4f1a\u513f\u79bb\u6563\uff0c\u667a\u4e91\u8bfe\u5802\u62bd\u98ce\u4e86\uff0c\u73b0\u5728\u770b\u4e0d\u4e86\u4e86\uff0c\u545c\u545c\u545c\u3002(15\uff1a29)</p> <p>\u770b\u4e86\u4e24\u8282\u8bfe\u7684\u79bb\u6563\u6570\u5b66\uff0c\u52a0\u6cb9\u5427\u3002</p> <p>\u665a\u4e0a\u53bb\u5403\u4e86\u81ea\u52a9\u5c0f\u706b\u9505\uff0c\u4e5f\u7b97\u662f\u5403\u723d\u5566~</p> <p>2024/02/19</p> <p>\u4eca\u5929\u8fc7\u7684\u6bd4\u8f83\u6109\u60a6\uff0c\u867d\u7136\u8eab\u4f53\u8fd8\u662f\u5f88\u7d2f</p> <p>\u770b\u4e86\u98de\u9a70\u4eba\u751f2\uff0c\u4e5f\u5403\u4e86\u4e0a\u6d77\u5973\u6559\u5e08\u51fa\u8f68\u7684\u74dc</p> <p>\u6709\u4e9b\u542f\u53d1\u5427</p> <p>\u9996\u5148\u662f\u63d0\u9ad8\u900f\u660e\u5ea6\uff0c\u624d\u80fd\u4fdd\u8bc1\u6700\u5927\u9650\u5ea6\u5730\u516c\u5e73\uff0c\u672a\u6765\u6211\u4e5f\u4f1a\u9010\u6b65\u63d0\u9ad8\u5bf9\u6211\u81ea\u8eab\u7684\u900f\u660e\u5ea6\uff0c\u6765\u4e0d\u65ad\u7ea6\u675f\u81ea\u5df1\u7684\u4e0d\u6d01\u884c\u4e3a\u3002</p> <p>\u800c\u662f\u5173\u4e8e\u5b89\u5206\u4e0e\u523a\u6fc0\u7684\u4e00\u4e9b\u601d\u8003\ud83e\udd14\uff0c\u4f3c\u4e4e\u5f53\u505a\u4e00\u4e9b\u4e8b\u4f1a\u6709\u80cc\u5fb7\u611f\u65f6\uff0c\u4f1a\u66f4\u8ba9\u4eba\u60f3\u53bb\u505a\uff0c\u201c\u627e\u523a\u6fc0\u201d\u8ba9\u4eba\u6b32\u7f62\u4e0d\u80fd\uff0c\u672c\u4eba\u6709\u65f6\u4e5f\u4f1a\u6709\u8fc7\u8fd9\u79cd\u60f3\u6cd5\u548c\u884c\u4e3a\uff0c\u4e0d\u77e5\u5bf9\u4e8e\u8fd9\u79cd\u5947\u602a\u7684\u601d\u60f3\u4e0e\u60c5\u7eea\uff0c\u6709\u4eba\u6709\u597d\u7684\u5e94\u5bf9\u7b56\u7565\u5417\uff1f</p> <p>2024/02/18</p> <p>\u975e\u5e38\u7d2f\u7684\u4e00\u5929\uff0c\u7531\u4e8e\u6628\u665a\u71ac\u591c\u800c\u8170\u9178\u80cc\u75db</p> <p>\u5954\u6ce2\u4e86\u534a\u5929\uff0c\u665a\u4e0a\u786e\u5b9e\u662f\u5341\u5206\u75b2\u60eb</p> <p>\u611f\u89c9\u53e4\u4eba\u6c34\u571f\u4e0d\u670d\u4e0d\u662f\u56e0\u4e3a\u4e0d\u9002\u5e94\u65b0\u73af\u5883\uff0c\u800c\u662f\u5728\u5954\u53bb\u65b0\u73af\u5883\u7684\u8def\u9014\u4e2d\u56e0\u4e3a\u52b3\u7d2f\u8fc7\u5ea6\u800c\u5bfc\u81f4\u8eab\u4f53\u4e0d\u8212\u670d\u3002 \uff08\u5176\u5b9e\u8fd9\u662f20\u53f7\u7684\u56de\u5fc6...\uff09</p> <p>2024/02/17</p> <p>\u6628\u65e5\u505a\u4e86\u5927\u4e8b\uff0c\u770b\u5b8c\u4e86\u4e0a\u5b66\u671f\u7684\u8bfe\u672c\uff0c\u5173\u4e8e\u535a\u5f08\u8bba\u7684\uff0c\u5bf9\u6211\u6709\u5f88\u5927\u7684\u9898\u578b</p> <p>\u6211\u53d1\u73b0\u73b0\u5728\u7684\u6211\u5df2\u7ecf\u4e0d\u559c\u6b22\u770b\u5c0f\u8bf4\uff0c\u800c\u662f\u559c\u6b22\u770b\u8fd9\u4e9b\u4e1c\u897f\u3002\u53ef\u80fd\u66f4\u52a0\u529f\u5229\u4e86\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u6d45\u663e\u7684\u8ba4\u77e5\u91cc\u4f3c\u4e4e\u53ea\u6709\u201c\u529f\u5229\u201d\u4e0e\u201c\u975e\u529f\u5229\u201d</p> <p>\u5e76\u4e14\u53d7\u8fd9\u672c\u4e66\u542f\u53d1\uff0c\u5f7b\u5e95\u89e3\u51b3\u4e86\u4e00\u4e9b\u957f\u4e45\u7684\uff0c\u68d8\u624b\u7684\u95ee\u9898\u3002</p> <p>\u4e5f\u7b97\u662f\u4e00\u79cd\u5f7b\u5934\u5f7b\u5c3e\u7684\u6539\u53d8\uff0c\u662f\u4e00\u79cd\u9636\u6bb5\u6027\u7684\u6210\u719f\u3002</p> <p>\u5e0c\u671b\u6bcf\u4e00\u6bb5\u5173\u7cfb\u90fd\u662f\u6b63\u548c\u535a\u5f08\uff0c\u6211\u7684\u5b58\u5728\u53ef\u4ee5\u7ed9\u5927\u90e8\u5206\u4eba\u5e26\u6765\u6109\u60a6</p> <p>\u6bcf\u6bcf\u60f3\u8ba4\u771f\u5199\uff0c\u5206\u6790\u81ea\u5df1\uff0c\u4fbf\u53c8\u6ca1\u6709\u4ec0\u4e48\u60f3\u6cd5\u4e86\uff0c\u54ce\uff0c\u65e0\u8bed\u3002</p> <p>\u4eca\u5929\u4e0a\u5348\u5bb6\u6559\u5b8c\uff0c\u4e5f\u6536\u83b7\u4e86\u4e00\u4e2a\u5927\u60ca\u559c\uff0c\u5b69\u5b50\u5bb6\u957f\u7ed9\u4e86\u6211\u4e00\u5957\u8863\u670d\uff0c\u786e\u5b9e\u662f\u5341\u5206\u7684\u6109\u60a6\u3002</p> <p>\u4e0b\u5348\u5728\u8d76\u5236\u56de\u5b66\u6821\u5ba3\u8bb2\u7684ppt\uff0c\u975e\u5e38\u7684\u5fd9\uff0c\u665a\u4e0a\u5ba3\u8bb2\uff0c\u73b0\u5728\u5fc3\u91cc\u5df2\u7ecf\u5b8c\u5168\u4e0d\u7d27\u5f20\u4e86\uff0c\ud83e\udd2d~</p> <p>\u660e\u5929\u5c31\u8981\u53bb\u5b66\u6821\u5566\uff0c\u5f00\u5fc3~</p> <p>2024/02/16</p> <p>\u4eca\u665a\u6709\u6025\u4e8b\uff0c\u9700\u8d76\u5236\u56de\u6821\u5ba3\u8bb2\u7684PPT</p> <p>\u660e\u665a\u518d\u5199\u4e2a\u957f\u65e5\u8bb0\u5566~</p> <p>2024/02/14</p> <p>\u4eca\u65e5\u7565\u6709\u8fdb\u6b65</p> <p>\u4e0a\u5348\u4f9d\u65e7\u5bb6\u6559</p> <p>\u4e0b\u5348\u770b\u4e8640\u9875\u535a\u5f08\u8bba\uff0c\u665a\u4e0a\u53c8\u7ec3\u4e86\u597d\u4e45\u597d\u4e45\u7684\u5409\u4ed6\u3002</p> <p>\u4e0d\u597d\u610f\u601d\u653e\u51fa\u6765\u5f55\u7684\u97f3\u9891\u548c\u89c6\u9891\uff0c\u5c31\u653e\u4e2a\u968f\u4fbf\u62cd\u7684\u81ea\u62cd\u5427~</p> <p>\u5409\u4ed6\u7ec3\u5b8c\u5927\u7ea6\u662f22\uff1a00\uff0c\u5fc3\u60c5\u5f88\u6109\u60a6\uff0c\u9042\u6253\u5f00\u4e86LOL\uff0c\u64ad\u653e\u4e86\u5468\u8463\u7684\u97f3\u4e50</p> <p>\u8fd9\u4e00\u6b21\u73a9\u6e38\u620f\u662f\u771f\u7684\u5f88\u5f00\u5fc3\uff0c\u5239\u90a3\u95f4\u4f3c\u4e4e\u627e\u5230\u4e86\u7ae5\u5e74\u7684\u611f\u89c9</p> <p>\u539f\u6765\u7535\u5b50ed\u662f\u56e0\u4e3a\u6ca1\u6709\u8fb9\u6253\u6e38\u620f\u8fb9\u542c\u6b4c\ud83d\ude0b</p> <p>\u552f\u4e00\u9057\u61be\u7684\u5c31\u662f\u5fd8\u8bb0\u953b\u70bc\u4e86\uff0c\u4f46\u603b\u5f52\u6765\u8bf4\u8fd8\u662f\u5341\u5206\u5f00\u5fc3\u7684</p> <p>\u9664\u4e86\u6700\u540e\u665a\u4e0a\u4e0a\u5e8a\u540e\u804a\u5929\uff0c\u770b\u89c6\u9891\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5230\u4e86\u51cc\u6668\u4e00\u70b9\uff0c\u500d\u611f\u4f24\u5fc3\ud83d\ude2d</p> <p></p> <p>2024/02/12</p> <p>\u8fd1\u4e24\u65e5\u75af\u72c2\u73a9\u800d</p> <p>\u73a9\u723d\u4e86\ud83d\ude2d</p> <p>\u660e\u5929\u5f00\u59cb\u7ee7\u7eed\u52aa\u529b\u4e86\uff01</p> <p>2024/02/10</p> <p>\u5199\u5b8c\u4e86\u5e74\u7ec8\u603b\u7ed3~</p> <p>\u770b\u4e86\u534a\u8282\u8bfe\u7684CS61A</p> <p>\u54ce\u5440\ud83d\ude2d\uff0c\u6211\u7684CS61A\u597d\u50cf\u5b66\u4e0d\u5b8c\u4e86\uff0c\u660e\u5929\u560e\u560e\u5b66\uff01</p> <p>2024/02/07</p> <p>\u4e0a\u5348\u8fd8\u662f\u8001\u6837\u5b50\uff0c\u4e0b\u5348\u5e26\u7740\u7237\u7237\u51fa\u53bb\u529e\u4e86\u4e9b\u8bb8\u6742\u4e8b\uff0c5\u70b9\u624d\u56de\u6765\u3002</p> <p>\u56de\u6765\u8def\u4e0a\u4e70\u4e86\u4e00\u888b\u5f88\u597d\u5403\u7684\u4e1c\u897f\uff0c\u5e94\u8be5\u53eb\u9ebb\u7cd6\uff1f\uff08\u6dd8\u5b9d\u4e0a\u641c\u5230\u4e86\u662f\uff1a\u8001\u5e08\u835e\u9ea6\u9165\u7279\u4ea7\u4e09\u89d2\u9165\u7ae5\u5e74\u7684\u5473\u9053\u7279\u4ea7\u85d5\u7c89\u9165\uff09</p> <p>\u665a\u4e0a\u561b\uff0c\u4eca\u5929play\u4e86\u7ea61h30min\uff0c\u803d\u6401\u4e86\u770b\u56de\u653e\u548c\u7ec3\u5409\u4ed6</p> <p>\u55ef\uff0c\u4ee5\u5f80\u662f\u628a\u6e38\u620f\u5378\u8f7d\u6765\u9694\u7edd\u8bf1\u60d1\uff0c\u73b0\u5728\u6311\u6218\u6311\u6218\u81ea\u5df1\uff0c\u770b\u770b\u6e38\u620f\u5c31\u5728\u7535\u8111\u4e0a\uff0c\u6211\u80fd\u4e0d\u80fd\u7981\u5f97\u4f4f\uff01\ud83e\udd14</p> <p>2024/02/06</p> <p>\u4eca\u65e5\u5f88\u81ea\u5f8b\uff1a</p> <p>\u4e0a\u5348\u5bb6\u65593h</p> <p>\u4e2d\u5348\u53bb\u5403\u4e86\u5bb6\u4e61\u7f8e\u98df\uff1a\u9978\u9979(\u2579\u06a1\u2579 )</p> <p>\u665a\u4e0a\u5b8c\u6210\u4e86CS61A\u7684lab08\uff0c\u5e76\u4e14\u5f39\u5409\u4ed6\u5531\u6b4c\u5a31\u4e50\u4e86\u7ea61h</p> <p>\u54e5\u54e5\u5531\u6b4c\u786e\u5b9e\u5f88\u597d\u542c\uff0c\u4ee5\u540e\u8981\u51cf\u5c11\u7ea2\u8b66\u7b49\u89c6\u9891\u65f6\u95f4\uff0c\u591a\u770b\u770b\u6b4c\u5531\u827a\u672f\u7684\u56de\u653e</p> <p>\u5e78\u798f\u6ee1\u8db3\u7684\u4e00\u5929\u5427</p> <p>\u660e\u5929\u63d0\u9ad8\u6548\u7387\uff01</p>"},{"location":"Diary/video/","title":"\u6211\u770b\u7684\u5f71\u5267","text":"<p>Abstract</p> <p>\u5176\u5b9e\u6211\u770b\u7684\u5f88\u5c11\uff0c\u56e0\u4e3a\u5c11\uff0c\u6240\u4ee5\u65b9\u4fbf\u8bb0\u5f55\uff0c(\u25cf\u02c7\u2200\u02c7\u25cf)</p> <p>2023/12/2 </p> <p>\u4e0d\u77e5\u4e0d\u89c9\uff0c\u770b\u300a\u6597\u7f57\u5927\u9646\u300b\u5df2\u6709\u516d\u5e74\u4e4b\u4f59\uff0c\u8fd8\u8bb0\u5f97\u7ed3\u5c40\u6070\u597d\u8fd8\u662f\u5728\u9ad8\u8003\u524d\u51e0\u65e5\uff0c\u5f53\u65f6\u7684\u6211\u8fd8\u5728\u4e3a\u662f\u5426\u5728\u8003\u524d\u770b\u5b83\u800c\u5206\u5fc3\u3002\u5f39\u6307\u4e00\u6325\u95f4\uff0c\u4eca\u65e5\u518d\u76f8\u9022\uff0c\u6211\u5df2\u5165\u5927\u5b66\u3002</p> <p>\u4e16\u754c\u7eb7\u7eb7\u6270\u6270\uff0c\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u8fc7\u53bb\u6fc0\u52b1\u6211\u4eec\uff0c\u611f\u52a8\u6211\u4eec\u7684\uff0c\u4e5f\u4f1a\u968f\u4e4b\u6de1\u53bb\u3002\u6211\u4e0d\u5e0c\u671b\u5fd8\u6389\u5b83\u4eec\uff0c\u4e22\u5931\u4e86\u90a3\u4e9b\u6211\u5728\u8fd9\u4e9b\u7ecf\u5386\u4e2d\u83b7\u5f97\u7684\u7f8e\u597d\u76ee\u6807\uff0c\u7f8e\u597d\u52a8\u529b\uff0c\u7f8e\u597d\u54c1\u5fb7\u3002\u6545\u7279\u5199\u6b64\u7bc7\uff0c\u56de\u5fc6\u66fe\u7ed9\u6211\u5e26\u6765\u65e0\u6570\u6b22\u6b23\u4e0e\u559c\u60a6\u7684\u4e8b\u7269\u3002 \u6628\u5929\u662f\u4eca\u5929\u7684\u5f71\u5b50\uff0c\u4eca\u5929\u662f\u660e\u5929\u7684\u7ef3\u5b50--57x</p>"},{"location":"Diary/video/#_1","title":"\u300a\u6597\u7f57\u5927\u9646\u300b","text":"<p>\u8ba9\u4eba\u4e0d\u7981\u656c\u4f69\u7684\u662f\uff0c\u660e\u660e\u5df2\u7ecf\u7ed3\u5c40\u7684\u52a8\u6f2b\uff0c\u5c45\u7136\u8fd8\u4f1a\u91cd\u65b0\u526a\u8f91\u589e\u6dfb\u3002\u5728\u65b0\u7248\u4e2d\uff0c\u5267\u60c5\u66f4\u52a0\u4e30\u6ee1\uff0c\u914d\u4e50\u4e5f\u52a1\u5fc5\u5951\u5408\u3002\u867d\u7136\u5df2\u7ecf\u770b\u8fc7\u4e00\u904d\u539f\u7ed3\u5c40\uff0c\u518d\u770b\uff0c\u4f9d\u7136\u4f1a\u6c89\u6d78\u5176\u4e2d\uff0c\u88ab\u8c03\u52a8\u7740\u60c5\u7eea\uff0c\u7275\u5f15\u7740\u6211\u7684\u601d\u7eea\u3002 \u8bb0\u5f97\u8fd9\u90e8\u52a8\u6f2b\u5f00\u5c40\u65f6\u633a\u5e7c\u7a1a\u7684\uff0c\u4e24\u4e2a\u5a03\u5a03\u8bf4\u7740\u5929\u771f\u5e7c\u7a1a\u7684\u8bdd\uff0c\u90a3\u79cd\u5982\u679c\u662f\u4ece\u73b0\u5b9e\u4e2d\u8bf4\u51fa\u6765\u4f1a\u663e\u5f97\u975e\u5e38\u6cb9\u817b\u7684\u8bdd\u3002\u5f53\u65f6\u6211\u600e\u4e48\u5fcd\u7740\u770b\u5b8c\u7684\uff0c\u6211\u5f88\u96be\u60f3\u8c61\u4e86\u3002\u8bf4\u7740\u6700\u5947\u602a\u7684\u8bdd\uff0c\u4e0d\u5207\u5b9e\u9645\u7684\u8bdd\uff0c\u5374\u53c8\u5728\u6545\u4e8b\u4e4b\u4e2d\uff0c\u4ece\u5934\u5230\u5c3e\uff0c\u4e00\u6b21\u6b21\u5151\u73b0\uff0c\u4ece\u672a\u5fd8\u8bb0\uff0c\u8fd9\u662f\u73cd\u8d35\u7684\uff0c\u96be\u5f97\u7684\uff0c\u9b54\u5e7b\u7684\u3002 \u8fd8\u8bb0\u5f97\u770b\u5230\u9752\u5e74\u65f6\u671f\u7684\u5510\u4e09\u56e0\u529b\u91cf\u6709\u9650\u800c\u5bfc\u81f4\u5c0f\u821e\u732e\u796d\u7684\u7247\u6bb5\u65f6\uff0c\u6211\u5c45\u7136\u4e5f\u54ed\u4e86\u3002\u5510\u4e09\u4fdd\u62a4\u81ea\u5df1\u6240\u7231\u4e4b\u4eba\u4e0d\u53d7\u4f24\u5bb3\u800c\u4e00\u79cd\u62fc\u547d\u52aa\u529b\u7684\u6837\u5b50\uff0c\u4e5f\u6df1\u6df1\u5f71\u54cd\u7740\u6211\uff0c\u5370\u8c61\u6df1\u523b\uff0c\u6211\u5f53\u65f6\u5c45\u7136\u4e5f\u5728\u5fc3\u4e2d\u6697\u4e0b\u51b3\u5fc3\uff0c\u5c31\u50cf\u5510\u4e09\u4e00\u6837\u3002 \u8fd9\u662f\u4e00\u4e2a\u7eb5\u6b32\u7684\u65f6\u4ee3\u3002\u73b0\u5728\uff0c\u73b0\u5728\u7684\u6211\uff0c\u88f9\u631f\u4e8e\u6f6e\u6d41\u4e4b\u4e2d\uff0c\u4e5f\u63a8\u52a8\u7740\u5b83\u3002 \u5510\u4e09\u7ec8\u5176\u4e00\u751f\u7231\u7740\u5c0f\u821e\uff0c\u5e76\u4e3a\u4e4b\u62fc\u640f\uff0c\u800c\u5c0f\u821e\u4e5f\u4e0d\u79bb\u4e0d\u5f03\u3002\u4ed6\u4eec\u662f\u771f\u6b63\u7684\u878d\u4e3a\u4e86\u4e00\u4f53\u3002\u7eaf\u7231\u6218\u58eb\u75db\u54ed\u6d41\u6d95\u3002 \u5f53\u6211\u4eec\u5728\u5229\u76ca\u8003\u91cf\u65f6\uff0c\u5728\u6f5c\u5fc3\u7406\u4e2d\u5df2\u9ed8\u8ba4\u4f60\u5373\u662f\u6211\uff0c\u5728\u6211\u7684\u89c2\u5ff5\u4e2d\uff0c\u8fd9\u4fbf\u662f\u6211\u4e2d\u6709\u4f60\uff0c\u4f60\u4e2d\u6709\u6211\u5427\u3002 \u300a\u6597\u7f57\u5927\u9646\u300b\u786e\u5b9e\u662f\u4e00\u90e8\u597d\u7247\u4e86\uff0c\u6709\u5934\u6709\u5c3e\uff0c\u751a\u81f3\u6539\u5584\u539f\u672c\u7684\u7ed3\u5c40\uff0c\u8fd9\u5728\u6574\u4e2a\u56fd\u6f2b\u4e2d\u90fd\u662f\u53ef\u8d35\u7684\u3002\u66f4\u4f55\u51b5\uff0c\u5176\u4e2d\u7684\u51e0\u96c6\u4e5f\u5c5e\u5b9e\u662f\u6781\u54c1\u3002 \u5f3a\u70c8\u63a8\u8350\u8fd9\u4e2a\u52a8\u6f2b\u5427\uff0c\u8010\u7740\u5fc3\u770b\u5b8c\uff0c\u624d\u80fd\u4f53\u4f1a\u5230\u5b83\u7684\u9b45\u529b\u3002  \u5f53\u7136\u4e86\uff0c\u4e0d\u5bb9\u7f6e\u5599\uff0c\u94f6\u53d1\u5510\u4e09\u771f\u7684\u5e05\uff01\uff01\uff01 \u597d\u4e86\uff0c6\u5e74\u4e86\uff0c\u771f\u7684\u8981\u7ed3\u675f\u4e86\uff0c\u6211\u4e5f\u8981\u518d\u5ea6\u51fa\u53d1\u4e86~  </p>"},{"location":"Diary/video/#_2","title":"\u6d77\u6d3e\u751c\u5fc3","text":"<p>\u4eba\u751f\u7684\u7b2c\u4e00\u6b65\u5076\u50cf\u5267\uff0c\u4e5f\u662f\u552f\u4e00\u4e00\u90e8\uff01 \u66fe\u8ba4\u4e3a\uff0c\u60f3\u61c2\u6211\u7684\u4eba\u5e94\u5fc5\u987b\u770b\u7684\u5267\uff01 \u7231\u60c5\u89c2\u5efa\u7acb\u7684\u6839\u57fa\uff01 \u53ef\u6076\uff0c\u6240\u4ee5\u5230\u5e95\u6709\u6ca1\u6709\u54ea\u4f4d\u670b\u53cb\u770b\u8fc7\u54ce \u6211\u7231\u5b9d\u73e0\u59d0\uff01\u6211\u7231\u6797\u8fbe\u6d6a\uff01\u6211\u7231\u4e11\u4e0d\u62c9\u51e0\u9999\u83c7\u5934\uff01\u6211\u7231\u7c89\u7ea2\u987d\u76ae\u8c79\uff01 \u54d2\u6d6a<sub>\u54d2\u6d6a</sub>\u54d2\u6d6a~ \u8fd8\u6709\u54e6\uff0c\u5267\u60c5\u7684\u8bbe\u5b9a\u573a\u666f\u4e3a\u6d59\u6c5f\u5927\u5b66\uff08\u867d\u7136\u4e0d\u662f\u5728\u6d59\u6c5f\u5927\u5b66\u62cd\u7684\uff09\u547d\u8fd0\u5f04\u4eba\uff0c\u7f18\u5206\u8fd9\u4e1c\u897f\uff0c\u771f\u7684\u662f\u96be\u6599\u3002</p> <p>\u8d44\u6e90: \u5bc6\u7801\uff1a2p9p</p> <p>\u5f85\u65bd\u5de5\uff01</p>"},{"location":"cs/","title":"Index","text":"<p>Abstract</p> <p>\u8fd9\u662f\u5206\u4eab\u7b14\u8bb0\u7684\u5730\u65b9(\u2579\u06a1\u2579 )</p>"},{"location":"cs/Pynote/","title":"python\u7b14\u8bb0","text":""},{"location":"cs/Pynote/#object-oriented-programming","title":"Object-Oriented Programming","text":"<ul> <li>Instance attribute are found before class attributes <pre><code>class Account:\n    interest = 0.02 # class attribute\n    def __init__(self,account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self,amount):\n        self.balance += amount\n        return self.balance\n    def __add__(self,other): #\u81ea\u5b9a\u4e49\u52a0\u51cf\u6cd5\n        ...\n\n    __radd__ = __add__  # \u5b9e\u73b0\u4ea4\u6362\u5f8b\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#accessing-attributes","title":"Accessing Attributes:","text":"<ul> <li><code>getattr(tom_account,'balance')</code></li> <li><code>hsaattr(tom_account,'deposit')</code> \u6709\u5219True\uff0c\u65e0\u5219False</li> </ul>"},{"location":"cs/Pynote/#inheritance","title":"Inheritance:","text":"<pre><code>class &lt;name&gt;(&lt;base class&gt;):\n    &lt;suite&gt;\n</code></pre>"},{"location":"cs/Pynote/#property","title":"@property","text":"<pre><code>class Link:\n    empty = ()\n    def __init__(self,first,rest=empty):\n        self.first = first\n        self.rest = rest\n    @property\n    def second(self):\n        return self.rest.first\n\n    @second.setter\n    def second(self,value):\n        self.rest.first = value\ns = Link(3,Link(4,Link(5)))\n#\u5982\u679c\u65e0@property\ns.second()\n# 4\n#\u5982\u679c\u6709@property\ns.second\n# 4\ns.second = 6\ns.second\n# 6\n</code></pre>"},{"location":"cs/Pynote/#else","title":"Else:","text":""},{"location":"cs/Pynote/#memoization","title":"Memoization:","text":"<pre><code>def memo(f):\n    cache = {}\n    def memoized(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return memoized\n</code></pre>"},{"location":"cs/Pynote/#count","title":"Count:","text":"<pre><code>def count(f):\n    def counted(n):\n        counted.call_count += 1\n        return f(n)\n    counter.call_count = 0\n    return counted\n</code></pre>"},{"location":"cs/Pynote/#_1","title":"\u5185\u7f6e\u51fd\u6570\uff1a","text":""},{"location":"cs/Pynote/#iternext","title":"iter&amp;next","text":"<ul> <li>The order of items in a dictionary is the oreder in which they were added</li> <li>for \u4e5f\u5b9e\u9645\u4e0a\u7528\u7684iter\u4e0enext</li> <li>\u5728iter\u4e00\u4e2alist\u65f6\uff0c\u5982\u679c\u540c\u65f6\u6539\u53d8\u4e86list\u5185\u7684\u5143\u7d20\uff0c\u53ef\u80fd\u4e0d\u80fd\u6210\u529f\u904d\u5386list\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ef\u4ee5\u901a\u8fc7copy\u4e00\u4e2a\u65b0list\u6765\u89e3\u51b3\u3002 <pre><code>#List\ns = [3,4,5]\nt = iter(s)\nnext(t)\n# 3\nnext(t)\n# 4\n#Dic\nd = {'one':1,'two':2,'three':3}\nd['zero'] = 0\nk = iter(d.keys()) # or iter(d)\nnext(k)\nv = iter(d.valuse())\ni = iter(d.items())\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#mapfilter","title":"map&amp;filter:","text":"<ul> <li><code>map(func,iterable)</code>:Only when we ask for the next element is the function applied and the result computed <pre><code>bcd = ['b','c','d']\nm = map(lambda x : x.upper(),bcd)\nnext(m)\n# 'B'\nnext(m)\n# 'C'\n</code></pre></li> <li><code>filter(func,iterable)</code>: goon until True <pre><code>def double(x):\n    print( x '-&gt;' 2*x)\n    return 2*x\nm = map(double,range(3,7))\nf = lambda y : y &gt;= 10\nt = filter(f,m)\nnext(t)\n#3 -&gt; 6\n#4 -&gt; 8\n#5 -&gt; 10\n10\nnext(t)\n#6 -&gt;12\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#enumrate","title":"enumrate","text":"<ul> <li><code>enumrate(sequnce,[strat=0])</code> # start\u662f\u4e0b\u6807\u8d77\u59cb\u4f4d\u7f6e <pre><code>seasons = ['Spring','Summer']\nlist(enumrate(seasons))\n# [(0,'Spring'),[1,'Summer']]\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#format","title":"format","text":"<pre><code>\"{} {}\".format(\"hello\",\"world\") # \u6309\u9ed8\u8ba4\u987a\u5e8f\n# 'hello world'\n\"{1} {0} {1}\".format(\"hello\",\"world\")\n# 'world hello world'\n</code></pre>"},{"location":"cs/Pynote/#zip","title":"zip:","text":"<ul> <li>zip()\u51fd\u6570\u5c06\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u5bf9\u8c61\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u6253\u5305\u6210\u4e00\u4e2a\u4e2a\u5143\u7ec4\uff0c\u7136\u540e\u8fd4\u56de\u7531\u8fd9\u4e9b\u5143\u7ec4\u7ec4\u6210\u7684\u5217\u8868 <pre><code>a = [1,2,3]\nb = [4,5,6]\nc = [4,5,6,7,8]\nzipped = zip(a,b)\nlis(zipped)\n[(1,4),(2,5),(3,6)]\nlist(zip(a,c))\n[(1,4),(2,5),(3,6)]\nzip(*zipped) # \u4e0ezipi\u76f8\u53cd,*zipped or \u53ef\u7406\u89e3\u4e3a\u89e3\u538b \u5373zip(*)\n[(1,2,3),(4,5,6)]\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#reduce","title":"reduce:","text":"<ul> <li><code>reduce(f,s,initial)</code></li> <li>f is a two-argument function</li> <li>s is a sequence of values that can be the second argument  <pre><code>reduce(mul,[2,4,8],1)\n# is equivalent to mul(mul(mul(1,2),4),8)\n</code></pre></li> <li>\u5b9e\u73b0reduce\u7684\u4ee3\u7801: <pre><code># iteration\ndef reduce(f,s,initial):\n    res = initial\n    for i in s:\n        res = f(i,res)\n    return res\n# recursion\ndef reduce(f,s,initial)\n    if not s:\n        return initial\n    else:\n        first,rest = s[0],s[1:]\n        return reduce(f,rest,f(initial,first))\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#summaxallany","title":"sum&amp;max&amp;all&amp;any:","text":"<ul> <li>sum: <pre><code>sum([2,3,4])\n# 9\nsum([2,3,4],5) # 5 is the start value,which is default 0\n# 14\nsum([[2,3],[4]],[])\n# [2,3,4]\n</code></pre></li> <li>max: <pre><code>max(range(10),key = lambda x : (x-4)*(x-2))\n# 9 ,9 is the x make the func max\n</code></pre></li> <li>all:<code>all(iterable)</code>Return True if bool(x) is True for all values x in the iterable.If the iterable is empty,return True.</li> <li>any:<code>nay(iterable)</code>Return True if bool(x) is True for any values x in the iterable.If the itarable is empty,return False.</li> </ul>"},{"location":"cs/Pynote/#assignment-name","title":"Assignment Name","text":"<ol> <li>python\u5141\u8bb8\uff1a<code>area,circ = pi*radius**2,2*pi*radius</code></li> <li>\u51fd\u6570\u5b9a\u4e49\uff1a     <pre><code>def square(x):\n    return x*x\n</code></pre> <pre><code>def divide_exact(n,d=10):\n    \"\"\"\u5f53d\u65e0\u8d4b\u503c\u65f6\uff0c\u9ed8\u8ba4\u4e3a10\"\"\"\n    return n//d,n%d\nquotient , remainder = divide_exact(2013,10)\n</code></pre></li> <li>\u8d4b\u503c\u987a\u5e8f\uff1a    <pre><code>a = 1\nb = 2\nb,a = a+b,b\n\"\"\"result is a = 2,b = 3\"\"\"\n</code></pre>    Execution rule for assignment statements:</li> <li>Evaluate all expressions to the right of = from left to right</li> <li> <p>Bind all names to the left of = to the resulting values in the current frame</p> </li> <li> <p>Logical Operators    * python\u4e2d\u4efb\u4f55\u975e0\uff0c\u975e\u7a7a\u7684\u503c\u5747\u4e3atrue</p> </li> <li> and :<ol> <li>Evaluate the subexpression  <li>If the result is a false value v,then the expression evaluates to v</li> <li>Otherwise,the expression evaluates to the value of the subexpression  So <code>2 and 3</code> would evaluate to 3 <li> or  <li>Evaluate the subexpression  <li>If the result is true valuea v,then the expression evaluates to v</li> <li>Otherwise,the expression evaluates to the value of the subexpression  <li>not :<ul> <li>x\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u53cd\u4e4b\u6613\u5f97</li> </ul>"},{"location":"cs/Pynote/#function","title":"Function","text":""},{"location":"cs/Pynote/#lambda-expressions","title":"Lambda Expressions:","text":"<ul> <li>evaluate to functions    <pre><code>s = lambda x : x * x\ns(12)\n# 144\n\ndef compose(f,g):\n     return lambda x : f(g(x))\n # : \u53ef\u89c6\u4e3areturn\n # \u4e0e\u4e0b\u8fb9\u5199\u6cd5\u7b49\u4ef7\uff1a\n # \u51fd\u6570\u8fd4\u56de\u51fd\u6570:\n\ndef compose(f,g):\n     def h(x):\n         return f(g(x))\n     return h\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#function-currying","title":"Function Currying","text":"<ul> <li>Transforming a multi-argument function into a single-argument,higher- order function    <pre><code> curry2 = lambda f : lambda x : lambda y : f(x,y)\n curry2(add)(2)(5)\n # 7\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#self-reference","title":"Self Reference","text":"<pre><code>def print_sums(x):\n    print(x)\n    def sums(y):\n        return print_sums(x+y)\n    return sums\nprint_sums(1)(3)(5)\n</code></pre>"},{"location":"cs/Pynote/#function-decorators","title":"Function Decorators:","text":"<pre><code>def trace(fn):\n    def wrapped(x):\n        print(\"yes\")\n        return fn(x)\n    return wrapped\n@trace\ndef triple(x):\n    return x*3\n#\u7b49\u4ef7\u4e8e\u2193\ndef triple(x):\n    return x*3\ntriple = trace(triple)\n</code></pre> <ul> <li>\u51fd\u6570\u65b9\u7a0b\uff1a <pre><code>def search(f):\n    x = 0\n    while True:\n        if f(x):\n            return x\n        x += 1\ndef suqare(x):\n    return x * x\ndef inverse(f):\n    \"\"\"Return g(y) such that g(f(x)) -&gt; x\"\"\"\n    return lambda y:search(lambda x: f(x) == y)\n</code></pre></li> </ul> <ul> <li>*args <pre><code>def printed(f):\ndef print_and_return(*args):\n    result = f(*args)\n    print('Result:',result)\n    return result\nreturn print_and_return\n\nprinted_pow = printed(pow)\nprinted_pow(2,8)\n# Result:256\n# 256\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#recurison","title":"Recurison:","text":"<ul> <li>Inverse Cascade: <pre><code>\"\"\"want:\n1\n12\n123\n1234\n123\n12\n1\n\"\"\"\ndef inverse_cascade(n):\n    grow(n)\n    print(n)\n    shrink(n)\ndef f_then_g(f,g,n):\n    if n:\n        f(n)\n        g(n)\ngrow = lambda n : f_then_g(grow,print,n//10)\nshrink = lambda n : f_then_g(print,shrink,n//10)\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#exception","title":"Exception:","text":""},{"location":"cs/Pynote/#assert","title":"assert(\u65ad\u8a00)","text":"<ul> <li>assert statements raise an exception of type AssertionError</li> </ul> <pre><code># assert &lt;expression&gt;,&lt;string&gt;\nassert 3 &gt; 2,'is true' # nothing happen\nassert 2 &gt; 3,'is false' # \u62a5\u9519\uff0c''\u5185\u4e3a\u62a5\u9519\u663e\u793a\u7684\u4fe1\u606f\n# \u5e94\u7528\uff1a\ndef area_square(r):\n    assert r &gt; 0,'A length much be positive'\n    return r*r\n</code></pre>"},{"location":"cs/Pynote/#raise","title":"raise:","text":"<pre><code># raise &lt;expression&gt;\n# &lt;expression&gt; must evaluate to subclass of BaseException or an instance of one\nraise TypeError('Bad argument')\nraise NameError('lalala')\n</code></pre>"},{"location":"cs/Pynote/#try-statement","title":"Try Statement:","text":"<ul> <li>Try statement handle exceptions</li> </ul> <pre><code>try:\n    x = 1/0\nexcept ZeroDivisionError as e:\n    print('handing a',type(e))\n    x = 0\n</code></pre> <pre><code>def invert(x):\n    y = 1/x\n    print('Never if x is 0')\n    return y\ndef invert_safe(x):\n    try:\n        return invert(x)\n    except ZeroDivisionError as e:\n        print('Handled',e)\n        return 0\ninvert_safe(1/0)\n# \u5148operand,\u62a5\u9519,\u6240\u4ee5func\u8fd8\u6ca1\u6709\u6765\u5f97\u53cacalled\ninverttttttt_safe(1/0)\n# \u6b64\u65f6\u62a5\u9519\u662fNameError,\u5e94\u8be5\u662f\u5148\u786e\u8ba4\u51fd\u6570\u5b58\u5728\uff0c\u518d\u6267\u884coperand\uff0c\u6700\u540e\u518d\u6267\u884coperator\n</code></pre>"},{"location":"cs/Pynote/#container-type","title":"Container type:","text":""},{"location":"cs/Pynote/#list","title":"List:","text":"<ul> <li><code>s[:-1]</code> \u4ece\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u53d6\uff0c\u53d6\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\u5b57\u7b26\u524d\u4e3a\u6b62</li> <li><code>s[::-1]</code> \u76f8\u5f53\u4e8ereverse</li> <li>append &amp; extend : append\u5c06\u53c2\u6570\u5f53\u4f5c\u4e00\u4e2a\u5143\u7d20\u589e\u52a0\u5230\u672b\u5c3e\uff0cextend\u5c06\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5217\u8868\u6269\u5c55\u672b\u5c3e</li> </ul> <pre><code>s = [2,3]\nt = [5,6]\ns.append(t)\n# s-&gt;[2,3,[5,6]] \n</code></pre> <ul> <li>slice assignment</li> <li>can remove elements from a list by assigning [] to a slice</li> </ul> <pre><code>s = [2,3]\nt = [5,6]\ns[0:0] = t\n# s-&gt; 5,6,2,3\ns[3:] = t\n# s-&gt;5,6,2,5,6\ns = [2,3]\nt = [5,6]\ns[:1] = []\n# s -&gt; [3]\nt[0:2] = []\n# t -&gt;[]\n</code></pre> <ul> <li> <p>pop:remove &amp; return the last element <pre><code>s = [2,3]\nt = [5,6]\nt = s.pop()\n#s -&gt; [2]\n#t -&gt; 3\n</code></pre></p> </li> <li> <p>remove:remove the first element equal to the argument <pre><code>t.remove(5)\n#t -&gt; [6]\n</code></pre></p> </li> <li> <p>addition &amp; slicing create a new lists containing existing elements</p> </li> </ul> <pre><code>a = s + [t]\nb = a[1:]\na[1] = 9\n#a -&gt; 2,9,[5,6]\nb[1][1] = 0\n#b -&gt; 3,[5,0]\n#t -&gt; [5,0]\n#a -&gt; [2,9,[5,0]]\n</code></pre> <pre><code>pairs = [[1,2],[2,2],[3,2],[4,4]]\nsame_count = 0\nfor x,y in pairs:\n    if x == y:\n        same_count += 1\n\nodds = [1,3,5,7,9]\n[x+1 for x in odds]\n#[2,4,6,8,10]\n[x for x in odds if 25 % x == 0]\n#[1,5]\n# \u627e\u7ea6\u6570\uff1a\ndef divisors(n):\n    return [1] + [x for x in range(2,x) if n%x == 0]\n</code></pre>"},{"location":"cs/Pynote/#dictionaries","title":"Dictionaries:","text":"<ul> <li>\u901a\u8fc7\u5173\u952e\u5b57\u786e\u8ba4\u503c</li> <li>lists and dictionaries can't be keys</li> <li>unordered <pre><code>num = {'I':1,'V':5,'X':10}\nnum['X']\n# 10\nnum.keys() # \u663e\u793a\u6240\u6709\u5173\u952e\u5b57keys\nnum.values() # \u663e\u793a\u6240\u6709\u503c\nnum.items() # \u663e\u793a\u5173\u952e\u5b57\u548c\u503c\nnum.get('X',0) # 0 is default\n# 10\nnum.get('X-ray',0)\n# 0\n'X' in num\n# True\nnum['O'] = 20 # \u6dfb\u52a0\n{x:x*x for x in range(10)}\n# {0:0,1:1,2:4..........}\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#tuples","title":"Tuples(\u5143\u7ec4):","text":"<ul> <li>\u5143\u7ec4\u548c\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539</li> <li>\u53ef\u4ee5\u7528\u4f5c\u5b57\u5178\u4e2d\u7684\u5173\u952e\u5b57 <pre><code>tup1 = () # \u7a7a\u5143\u7ec4\ntup2 = (50,) #\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\u9700\u8981\u5728\u5143\u7d20\u540e\u6dfb\u52a0\u9017\u53f7\ntuple([3,4,5])\n# (3,4,5)\n</code></pre></li> <li>An immutable sequence may still change if it contains a mutable value as an element <pre><code>s = ([1,2],3)\ns[0][0] = 3\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#sets","title":"sets:","text":"<ul> <li>Duplicate elements are removed on construction</li> <li><pre><code>s = {'one','two','three','four','four'}\ns\n# {'one','two','three','four'}\ns.union({'one','five'}) #\u589e\u6dfb\u5143\u7d20\ns.intersection({'six','five','four','three'}) #\u4ea4\u96c6\n# {'three','four'}\ns\n# {'one','two','three','four'}\n# \u5e76\u4e0d\u6539\u53d8s\u81ea\u8eab\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#string","title":"String","text":"<ul> <li>Singe_quoted and double_quoted strings are equivalent</li> <li>triple_quoted string can span multiple lines <pre><code>'I am string!'\n\"I've got an apostrophe\"\n\"\"\"ha\nha\nha\"\"\"\ns = 'Hello'\ns.upper()\ns.lower()\ns.swapcase()\n# 'hELLO'\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#generators","title":"Generators:","text":"<ul> <li>When a generator function is called,it returns a generator that iterate over its yields <pre><code>def plus_minus(x):\n    yield x\n    yield -x\nt = plus_minus(3)\nnext(t)\n# 3\nnext(t)\n# -3\n</code></pre></li> <li><code>yield from</code> <pre><code>def a_then_b(a,b):\n    yield from a\n    yield from b\nlist(a_then_b([3,4],[5,6]))\n# [3,4,5,6]\ndef countdown(k):\n    if k &gt; 0:\n        yield k\n        yield from countdown(k-1)\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#environment-diagrams","title":"Environment Diagrams:","text":"<ul> <li>Every expression is evaluated in the contxt of an environment</li> <li>A name evaluates to the value bound to that name in the earliest frame of the current environment in which that name is found</li> <li>The parent of a func is the frame in which it was defined</li> <li>The parent of a frame is the parent of the function called</li> </ul>"},{"location":"cs/Pynote/#debug","title":"Debug","text":""},{"location":"cs/Pynote/#unboundlocalerror","title":"UnboundLocalError:","text":"<p>https://www.runoob.com/w3cnote/python-unboundlocalerror.html * \u5728\u5185\u90e8\u51fd\u6570\u4fee\u6539\u540c\u540d\u5168\u5c40\u53d8\u91cf\u4e4b\u524d\u8c03\u7528\u53d8\u91cf\u540d\u79f0\uff0c\u5219\u5f15\u53d1\u9519\u8bef * \u5185\u90e8\u51fd\u6570\uff0c\u4e0d\u4fee\u6539\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf * \u5185\u90e8\u51fd\u6570\uff0c\u4fee\u6539\u540c\u540d\u5168\u5c40\u53d8\u91cf\uff0c\u5219python\u4f1a\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf</p>"},{"location":"cs/c/Cstandard/","title":"varible function","text":""},{"location":"cs/c/Cstandard/#stdioh","title":"stdio.h","text":""},{"location":"cs/c/Cstandard/#printf-dflagswidthprechiltype","title":"<code>printf  %d[flags][width][.prec][hil]type</code>","text":"<p>\u8fd4\u56de\u503c\uff1a\u8f93\u51fa\u7684\u5b57\u7b26\u6570</p> <p>flag:</p> <ul> <li>- \u5de6\u5bf9\u9f50</li> <li>+ \u5728\u524d\u8fb9\u653e+ \u6216 -</li> <li>(space) \u6b63\u6570\u7559\u7a7a</li> <li>0 0\u586b\u5145</li> </ul> <p>wdith or prec:</p> <ul> <li>number \u6700\u5c0f\u5b57\u7b26\u6570</li> <li>* \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u6570 <code>printf(\"%*d\",6,123);</code> \u5373 <code>printf(\"%6d\",123);</code></li> <li>.number \u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570</li> <li>.* \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570 </li> </ul> <p>type:</p> <ul> <li><code>printf(\"%dty%n\",12345,&amp;num);</code> <code>printf(\"%d\",num);</code>   \u6b64\u65f6\u7b2c\u4e8c\u4e2aprintf\u4e2dnum\u5927\u5c0f\uff0c\u5373\u4e3a\u7b2c\u4e00\u4e2aprintf\u8f93\u51fa\u5b57\u7b26\u7684\u4e2a\u6570(7)</li> </ul>"},{"location":"cs/c/Cstandard/#scanf-flagtype","title":"<code>scanf: %[flag]type</code>","text":"<p>\u8fd4\u56de\u503c\uff1a\u8bfb\u5165\u7684\u9879\u76ee\u6570</p> <p>flag:</p> <ul> <li>* \u8df3\u8fc7<ul> <li><code>scanf(\"%*d%d\",&amp;num);</code> \u5148\u8df3\u8fc7\u4e00\u4e2a\uff0c\u518d\u8bfb\u4e00\u4e2a\uff0c\u5982\u679c\u8f93\u5165123  345 \u90a3\u4e48\u8bfb\u5165345</li> </ul> </li> <li>\u6570\u5b57 \u6700\u5927\u5b57\u7b26\u6570</li> <li>[...] \u6240\u5141\u8bb8\u7684\u5b57\u7b26<ul> <li>\\(GPRMC,004319.00\uff0c   <code>scanf(\"%*[^,],%[^,]\",sTime)</code>\u90a3\u4e48\\)GPRMC\u662f\u9017\u53f7\u524d\u7684\uff0c\u90fd\u8df3\u8fc7\uff0c\u2018\uff0c\u2019\u4e5f\u8df3\u8fc7\uff0c\u53ea\u8bfb\u5230\u4e86004319.00</li> </ul> </li> </ul>"},{"location":"cs/c/Cstandard/#mathh","title":"math.h","text":"<pre><code>double acos(double x);\ndouble asin(double x);\ndouble atan(double x);\ndouble cos(double x);\ndouble sin(double x);\ndouble tan(double x);\ndouble exp(double x);\ndouble log(double x);\ndouble log10(double x);\ndouble pow(double x, double y);   //x\u4e3a\u5e95\u6570\uff0cy\u4e3a\u6307\u6570\ndouble sqrt(double x);\ndouble ceil(double x); \u8fd4\u56de\u5927\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5c0f\u7684\u6574\u6570\u503c\ndouble fabs(double x); \ndouble floor(double x); \u8fd4\u56de\u5c0f\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5927\u7684\u6574\u6570\u503c\n</code></pre>"},{"location":"cs/c/Cstandard/#stringh","title":"string.h","text":"<p><code>strlen(const char *s);</code> \u8fd4\u56des\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u4e0d\u5305\u542b\u7ed3\u5c3e\u76840\uff09</p> <ul> <li> <p>\u6bd4\u8f83\u51fd\u6570</p> <pre><code>int memcmp(const void *s1, const void *s2, size_t n);\nint strcmp(const char *s1, const char *s2);\nint strncmp(const char *s1, const char *s2, size_t n);\n//0: s1==s2\n// 1: s1&gt;s2\n//-1: s1&lt;s2\n</code></pre> </li> <li> <p>\u590d\u5236\u51fd\u6570     <pre><code>void *memcpy(void *dest, const void *src, size_t n);\nvoid *memmove(void *dest, const void *src, size_t n);\nchar *strcpy(char *dest, const char *src); \nchar *strncpy(char *dest, const char *src, size_t n);\n</code></pre></p> <pre><code>char *dst = (char*)malloc(strlen(src)+1);\nstrcpy(dst,src);\n</code></pre> </li> <li> <p>\u8fde\u63a5\u51fd\u6570     <pre><code>char *strcat(char *dest, const char *src);\nchar *strncat(char *dest, const char *src, size_t n);\n</code></pre></p> </li> <li> <p>\u67e5\u627e\u51fd\u6570     <pre><code>void *memchr(const void *s, int c, size_t n);\nchar *strchr(const char *s, int c);\nchar *strrchr(const char *s,int c); //\u4ece\u53f3\u8fb9search\nchar *strstr(const char *s1, const char *s2);\nchar *strcasestr(const char *s1,const char * s2); //\u5ffd\u7565\u5927\u5c0f\u5199\n//\u8fd4\u56deNULL\u8868\u793a\u6ca1\u6709\u627e\n</code></pre></p> </li> <li> <p>\u5bfb\u627e\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u64cd\u4f5c:</p> <pre><code>char s[] = \"Hello\";\nchar *p = strchr(s,'l');\np = strchr(p+1,'l');\n</code></pre> </li> <li> <p>\u590d\u5236\u67d0\u4e2a\u5b57\u7b26\u524d\u7684\u5185\u5bb9</p> <pre><code>char s[] = \"Hello\";\nchar *p = strchr(s,'l');\nchar c = *p;\n*p = '\\0';\nchar *t = (char*)malloc(strlen(s)+1);\nstrcpy(t,s);\nprintf(\"%s\",t);\nfree(t);\n*p = c;\n</code></pre> </li> </ul>"},{"location":"cs/c/Cstandard/#stdlibh","title":"stdlib.h","text":"<p>\u968f\u673a\u6570</p> <p><pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;time.h&gt;\n\nint main()\n{\n    srand(time(0));\n    int a = rand();\n\n    //a\u4e3a\u968f\u673a\u6570\n}\n</code></pre> * \u6574\u6570\u7b97\u672f\u51fd\u6570     <pre><code>int abs(int n); //\u7edd\u5bf9\u503c\ndiv_t div(int numer, int denom); //\u8ba1\u7b97\u5546\u548c\u4f59\uff0c\u7ed3\u679c\u4f5c\u4e3a`div_t`\u7684\u7ed3\u6784\u8fd4\u56de\uff0c\u8fd9\u4e2a\u7ed3\u6784\u5305\u542b\u6210\u5458`quot`\u548c`rem`\nlong labs(long n); //\u7c7b\u4f3c\u4e8eabs\uff0c\u4f46\u7528\u4e8e\u957f\u6574\u6570\nldiv_t ldiv(long numer, long denom); //\u7528\u4e8e\u957f\u6574\u6570\n</code></pre> * \u67e5\u627e\u548c\u6392\u5e8f\u51fd\u6570     <pre><code>void *bsearch(const void *key, const void *base, size_t n, size_t size, int (*compar)(const void *, const void *));\n\nvoid qsort(void *base, size_t n, size_t size, int (*compar)(const void *, const void *));\n</code></pre></p> <p>qsort\u8be6\u89e3</p> <ul> <li> <p><code>base</code>\u6570\u7ec4\u540d\uff0c\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u7ec4\u5143\u7d20\u6240\u5360\u5b57\u8282\uff08int\uff0cdouble\uff09\uff0c\u6392\u5e8f\u539f\u5219\uff08\u9012\u589e\uff0c\u9012\u51cf\uff0c\u5947\u5076\u4ea4\u53c9\uff09\uff0c\u5728\u4f7f\u7528qsort\u524d\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff1a</p> <p><pre><code>#include&lt;stdlib.h&gt;\nint cmp(const void *a,const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n//\u6b64\u65f6\u8868\u793a\u9012\u589e\uff0c\u82e5\u60f3\u9012\u51cf\u53ea\u9700\u5c06a\uff0cb\u6362\u4f4d\nqsort(num,n,sizeof(int),cmp)\n</code></pre> <pre><code>//\u6d6e\u70b9\u6570\uff08double\uff09 \n\n//\u9700\u8981\u6ce8\u610f\u6d6e\u70b9\u6570\u4f1a\u5b58\u5728\u7cbe\u5ea6\u635f\u5931\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6bd4\u8f83\uff0c\u6765\u8fd4\u56de1\u6216-1\uff0c\u4ee5\u786e\u5b9a\u662f\u589e\u5e8f\u8fd8\u662f\u964d\u5e8f\u3002\nint cmp(const void *a,const void *b) {\n    return *(double*)a&gt;*(double*)b?1:-1;\n}\n</code></pre></p> <pre><code>//\u5b57\u7b26\nint cmp(const void *a,const void *b) {\n    return *(char*)a-*(char*)b;\n}\n</code></pre> <pre><code>//\u7ed3\u6784\u4f53\nstruct node{\n    int i;\n    double j;\n    char k;\n};\nint cmp(const void *a,const void *b) {\n    return (*(node*)a).i-(*(node*)b).i;\n}\n</code></pre> </li> </ul> <p>bsearch\u8be6\u89e3</p> <ul> <li> <p><code>key</code>\u6307\u5411\u8981\u67e5\u627e\u7684\u5143\u7d20\u7684\u6307\u9488\uff0c<code>base</code>\u6570\u7ec4\u540d,\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u7ec4\u5143\u7d20\u6240\u5360\u5b57\u8282(int,double),\u6bd4\u8f83\u539f\u5219\uff0c\u5982\u679c\u67e5\u627e\u6210\u529f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u4e2d\u5339\u914d\u5143\u7d20\u7684\u6307\u9488\uff0c\u5426\u5219\u8fd4\u56de\u7a7a\u6307\u9488</p> <pre><code>//\u6bd4\u8f83\u539f\u5219\uff1a\nint cmpfunc(const void * a, const void * b)\n{\nreturn ( *(int*)a - *(int*)b );\n}\n</code></pre> </li> <li> <p>\u6587\u672c\u8f6c\u6362</p> <pre><code>double atof(const char *str); //\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cc\u8fdb\u5ea6\u6d6e\u70b9\u6570\nint atoi(const char *str); //\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6574\u6570,\u5b57\u7b26\u4e32\u4e2d\u5fc5\u987b\u8981\u6709\u7ec8\u6b62\u7b26\nlong atol(const char *str); //\u8f6c\u5316\u4e3a\u957f\u6574\u6570\ndouble strtod(const char *str, char **endptr); \nlong strtol(const char *str, char **endptr, int base); //base \u57fa\u6570\uff0c\u5fc5\u987b\u4ecb\u4e8e 2 \u548c 36\uff08\u5305\u542b\uff09\u4e4b\u95f4\uff0c\u6216\u8005\u662f\u7279\u6b8a\u503c 0\u3002\u5982\u679c base \u4e3a 0\uff0c\u5219\u4f1a\u6839\u636e\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u6765\u5224\u65ad\u8fdb\u5236\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u4ee5 '0x' \u6216 '0X' \u5f00\u5934\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u5341\u516d\u8fdb\u5236\uff1b\u5982\u679c\u5b57\u7b26\u4e32\u4ee5 '0' \u5f00\u5934\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u516b\u8fdb\u5236\uff1b\u5426\u5219\u5c06\u5176\u89c6\u4e3a\u5341\u8fdb\u5236\u3002base \u4e3a10\u65f6\uff0c\u5373\u4e3a\u5341\u8fdb\u5236\nunsigned long strtoul(const char *str, char **endptr, int base);\n</code></pre> <p>strtod\u7684\u5b9e\u4f8b\uff1a <pre><code>int main()\n{\nchar str[30] = \"20.30300 This is test\";\nchar *ptr;\ndouble ret;\n\nret = strtod(str, &amp;ptr);\nprintf(\"\u6570\u5b57\uff08double\uff09\u662f %lf\\n\", ret);\nprintf(\"\u5b57\u7b26\u4e32\u90e8\u5206\u662f |%s|\", ptr);\n\nreturn(0);\n}\n</code></pre></p> <pre><code>\u6570\u5b57\uff08double\uff09\u662f 20.303000\n\u5b57\u7b26\u4e32\u90e8\u5206\u662f | This is test|\n</code></pre> </li> <li> <p>\u5185\u5b58\u7ba1\u7406     <pre><code>void *calloc(size_t nobj, size_t size);\nvoid free(void *ptr);\nvoid *malloc(size_t size);\nvoid *realloc(void *ptr, size_t size);\n</code></pre></p> <ul> <li> <p>malloc\uff08\u52a8\u6001\u5185\u5b58\uff09free()</p> <ul> <li>\u8fd4\u56de\u7684\u7ed3\u679c\u662fvoid* ,\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u4e3a\u6240\u9700\u7684</li> <li>(int)malloc(nsizeof(int))</li> <li>\u6700\u540e\u9700\u8981free</li> <li>\u7533\u8bf7\u5931\u8d25\u5219\u8fd4\u56de0\uff0c\u6216\u8005\u53eb\u505aNULL</li> <li>free()\u5c06\u7533\u8bf7\u7684\u6765\u7684\u7a7a\u95f4\u8fd8\u7ed9\u7cfb\u7edf</li> </ul> <pre><code>void *p;\nint i;\np = malloc(3);\nfree(p); //right\np = &amp;i;\nfree(p); //wrong\n</code></pre> </li> <li> <p>calloc\u4e0emalloc\u7684\u533a\u522b\u662f\uff0ccalloc\u4f1a\u5c06\u5206\u914d\u7684\u5185\u5b58\u521d\u59cb\u5316\u4e3a0     <pre><code>int i, n;\nint *a;\nscanf(\"%d\",&amp;n);\na = (int*)calloc(n, sizeof(int));\nfor( i=0 ; i &lt; n ; i++ ) \n{\n    scanf(\"%d\",&amp;a[i]);\n}\n</code></pre></p> </li> <li> <p>realloc\u5c1d\u8bd5\u8c03\u6574\u4e4b\u524d\u7528malloc\u6216calloc\u6240\u5206\u914d\u7684ptr\u6240\u6307\u5411\u7684\u5185\u5b58\u5927\u5c0f\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs/c/Cstandard/#ctypeh","title":"ctype.h","text":"<p>\u5b57\u7b26\u5224\u65ad\u51fd\u6570</p> <pre><code>int isalnum(int c) //\u68c0\u67e5\u6240\u4f20\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\u548c\u6570\u5b57,\u5426\u5219\u8fd4\u56de0\nint isalpha(int c) //\u5b57\u6bcd\nint isdigit(int c) //\u6570\u5b57\nint islower(int c)  //\u5c0f\u5199\nint isupper(int c) //\u5927\u5199\nint isspace(int c) //\u7a7a\u767d\u5b57\u7b26\uff0c\u5224\u65ad\u7a7a\u683c\uff0c\u6c34\u5e73\u5236\u8868\u7b26\\t,\u6362\u884c\u7b26\\n,\u56de\u8f66\u7b26\\r,\u6362\u9875\u7b26\\f,\u5782\u76f4\u5236\u8868\u7b26\\v\nint isblank(int c) //\u7a7a\u683c\u5b57\u7b26\uff0c\u4ec5\u5224\u65ad\u7a7a\u683c\uff0c\u6c34\u5e73\u5236\u8868\u7b26\\t\n</code></pre> <p>\u5b57\u7b26\u8f6c\u6362\u51fd\u6570</p> <ul> <li><code>int tolower(int c)</code></li> <li><code>int toupper(int c)</code></li> </ul>"},{"location":"cs/system/CSAPP/","title":"CSAPP","text":"<p>Abstract</p> <p>\u672c\u7b14\u8bb0\u53c2\u8003\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b \u7ae0\u8282\u53c2\u8003\u539f\u4e66\u8868\u793a</p>"},{"location":"cs/system/CSAPP/#1","title":"1.\u4fe1\u606f\u7684\u8868\u793a\u548c\u5904\u7406","text":"<ul> <li>\u4e09\u79cd\u6570\u5b57\u8868\u793a:</li> <li>\u65e0\u7b26\u53f7</li> <li>\u8865\u7801\uff08\u8868\u793a\u6709\u7b26\u53f7\u7684\u6570\u5b57\uff09</li> <li>\u6d6e\u70b9\u6570</li> <li>\u6ea2\u51fa(overflow): </li> <li>\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b\u662f\u53ef\u884c\u7684:\\(200*300*400*500 = -884907888\\)</li> <li>\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u53ef\u7ed3\u5408\u7684:eg:\\((3.14+1e20)-1e20 = 0.0\\)\u800c\\(3.14+(1e20-1e20) = 3.14\\)</li> </ul>"},{"location":"cs/system/CSAPP/#2","title":"2.\u4fe1\u606f\u7684\u8868\u793a\u548c\u5904\u7406","text":""},{"location":"cs/system/CSAPP/#21","title":"2.1 \u4fe1\u606f\u50a8\u5b58","text":"<ul> <li>\u865a\u62df\u5185\u5b58(virtual memotry): \u673a\u5668\u7ea7\u7a0b\u5e8f\u5c06\u5185\u5b58\u89c6\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u5b57\u8282\u6570\u7ec4\uff0c\u79f0\u4e3a\u865a\u62df\u5185\u5b58</li> <li>\u5730\u5740(address)\uff1a \u5185\u5b58\u7684\u6bcf\u4e2a\u5b57\u8282\u90fd\u7531\u4e00\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u6765\u6807\u8bc6\uff0c\u6210\u4e3a\u4ed6\u7684\u5730\u5740</li> <li>\u865a\u62df\u5730\u5740\u7a7a\u95f4(virtual address space)\uff1a\u6240\u6709\u53ef\u80fd\u5730\u5740\u7684\u96c6\u5408\u5c31\u6210\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4</li> </ul>"},{"location":"cs/system/CSAPP/#211","title":"2.1.1 \u5341\u516d\u8fdb\u5236\u8868\u793a\u6cd5","text":"<ul> <li>\u4e00\u4e2a\u5b57\u8282\u67098\u4f4d\uff0c\u503c\u57df\\(0_{10} - 255_{10}\\)</li> <li>\\(x = 2^n\\)\u65f6,\\(n = i+4j\\),\u6240\u4ee5\u5f00\u5934\u7684\u5341\u516d\u8fdb\u5236\u6570\u5b57\u4e3a\\(1(i=0),2(i=1),4(i=2),8(i=3)\\),\u540e\u9762\u8ddf\u968f\u7740j\u4e2a\u5341\u516d\u8fdb\u5236\u76840</li> </ul>"},{"location":"cs/system/CSAPP/#213","title":"2.1.3 \u5bfb\u5740\u548c\u5b57\u8282\u987a\u5e8f","text":"<ul> <li>\u5bf9\u8c61\u7684\u5730\u5740\u4e3a\u6240\u4f7f\u7528\u5b57\u8282\u4e2d\u6700\u5c0f\u7684\u5730\u5740</li> <li>\u5c0f\u7aef\u6cd5(little endian): \u6700\u4f4e\u6709\u6548\u5b57\u8282\u5728\u6700\u524d\u8fb9\u7684\u65b9\u5f0f</li> <li>\u5927\u7aef\u6cd5(big endian): \u6700\u9ad8\u6709\u6548\u5b57\u8282\u5728\u6700\u524d\u8fb9\u7684\u65b9\u5f0f(\u4f8b\u5b50pg:29)</li> <li>ASCII\u7801:\"0\" -&gt; 32 \"A\" -&gt; 65 \"a\" -&gt; 97</li> </ul>"},{"location":"cs/system/CSAPP/#214","title":"2.1.4 \u5e03\u5c14\u4ee3\u6570\u7b80\u4ecb","text":"<ul> <li>\u975e: ~ , \u4e0e: &amp; , \u6216: | , \u5f02\u6216: ^</li> <li>\u4f4d\u7ea7\u8fd0\u7b97\u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u6cd5\u662f\u5b9e\u73b0\u63a9\u7801\u8fd0\u7b97,\u63a9\u7801\\(0xFF\\)\u8868\u793a\u4e00\u4e2a\u5b57\u7684\u4f4e\u4f4d\u5b57\u8282,\u800c\u5176\u4ed6\u7684\u5b57\u8282\u5c31\u88ab\u7f6e\u4e3a0\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\\(x = 0x89ABCDEF\\),\\(x\\&amp;0xFF = 0x000000EF\\)</li> </ul>"},{"location":"cs/system/CSAPP/#22","title":"2.2 \u6574\u6570\u8868\u793a","text":""},{"location":"cs/system/CSAPP/#223","title":"2.2.3 \u8865\u7801\u7f16\u7801(\u767e\u5ea6\u8865)","text":"<ul> <li> \u8865\u5426\uff1f</li> </ul>"},{"location":"cs/system/CSAPP/#226","title":"2.2.6 \u6269\u5c55\u4e00\u4e2a\u6570\u5b57\u7684\u4f4d\u8868\u793a","text":"<ul> <li>\u65e0\u7b26\u53f7\u6570*:\uff0c\u5728\u8868\u5934\u6dfb\u52a00\uff0c\u79f0\u4e3a\u96f6\u6269\u5c55**</li> <li>\u8865\u7801\u6570:\u5728\u8868\u793a\u4e2d\u6dfb\u52a0\u6700\u9ad8\u6709\u6548\u4f4d\u7684\u503c\uff0c\u79f0\u4e3a\u7b26\u53f7\u6269\u5c55\uff0ceg: 101-&gt;1101-&gt;11101 \u90fd\u8868\u793a-3</li> </ul>"},{"location":"cs/system/CSAPP/#227","title":"2.2.7 \u622a\u65ad\u4ee3\u7801","text":"<ul> <li> \u8865\u5426?</li> <li>\u622a\u65ad\u65e0\u7b26\u53f7\u6570:</li> <li>have a try 123 try!!!</li> </ul>"},{"location":"cs/system/CSAPP/#23","title":"2.3 \u6574\u6570\u8fd0\u7b97","text":""},{"location":"cs/system/system1/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfI","text":"<p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edfI\u7684\u7c97\u7565\u7b14\u8bb0 \u53c2\u8003\u8bfe\u5802\u5185\u5bb9\u4e0e\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b</p>"},{"location":"cs/system/system1/#_1","title":"\u8bfe\u5802","text":""},{"location":"cs/system/system1/#information-representation","title":"Information Representation","text":"<ul> <li>\u503c\u7684\u8868\u793a:   *\\((100101.01)_2 = 1*2^5+1*2^2+1+1*2^{-2}\\) </li> <li>\u8fdb\u5236\u8f6c\u6362:</li> <li>Decimal-\u5341\u8fdb\u5236 Binary-\u4e8c\u8fdb\u5236 Octal-\u516b\u8fdb\u5236 Hexadecimal-16\u8fdb\u5236</li> <li>\u8f6c\u5316\u4e3a10\u8fdb\u5236\uff1a<ul> <li>\\((100101.01)_2 = (37.25)_{10}\\)</li> <li>\\((3A.CH) = (59.875)_{10}\\)</li> </ul> </li> <li>10\u8fdb\u5236\u8f6c\u5316\u4e3a\u5176\u4ed6\u8fdb\u5236(\u81ea\u5df1\u638c\u63e1\u8ba1\u7b97\u65b9\u6cd5):<ul> <li>\\((1350.6875)_{10} = (1000 0111)_2\\)</li> <li>\\(()_(10) = (0.1011)_2\\)</li> <li>8-&gt;2,16-&gt;2\u6ce8\u610f\u6280\u5de7</li> </ul> </li> <li>\\(2^{10}\\) is kilo,denoted by K</li> <li>\u4e8c\u8fdb\u5236\u52a0\u51cf\u4e58\u9664(\u5176\u5b9e\u7c7b\u4f3c\u5341\u8fdb\u5236)</li> </ul>"},{"location":"cs/system/system1/#lab","title":"Lab","text":""}]}