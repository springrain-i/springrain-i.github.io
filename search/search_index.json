{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6625\u96e8\u7684\u7b14\u8bb0\u672c","text":"<p>Note</p> <p>\u975e\u5e38\u9ad8\u5174\u4f60\u7684\u5230\u6765\ud83d\ude0b\uff01</p>"},{"location":"BasicSkill/","title":"Index","text":"<p>Abstract</p> <p>\u5f88\u591a\u65f6\u5019,\u90fd\u662f\u4e3a\u4e86\u8fd9\u70b9\u918b\u5305\u4e86\u4e2a\u997a\u5b50......</p>"},{"location":"BasicSkill/CTF/","title":"CTF","text":""},{"location":"BasicSkill/CTF/#chmod","title":"chmod","text":"<p>\u6267\u884c\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u51fa\u73b0<code>permission denied</code>\u65f6,\u53ef\u4ee5\u4f7f\u7528<code>chomod 777 \u6587\u4ef6\u540d</code>\u5373\u53ef</p> <p><code>chmod</code>\uff1a\u6539\u53d8\u6587\u4ef6\u6743\u9650,\u6bd4\u5982\u8bf4chmod 777 .barshrc \u8868\u793a\u5c06\u8fd9\u4e2a\u6587\u4ef6\u6539\u6210\u6240\u6709\u7684\u7528\u6237\u90fd\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c</p>"},{"location":"BasicSkill/CTF/#_1","title":"\u6821\u7f51\u8fde\u63a5","text":"<p>\u5728wsl\u4e2d\u4e0b\u8f7dzjuconnect(\u6709\u5177\u4f53\u6559\u7a0b)</p> <p>\u5728\u4e00\u4e2a\u7ec8\u7aef\u4e2d\u6253\u5f00zjuconnect \u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\u4f8b\u5982<code>nc -X 5 -x localhost:1080 10.214.160.13 13004</code>\u4fbf\u53ef\u8fde\u4e0a\u9898\u76ee</p>"},{"location":"BasicSkill/Changename/","title":"\u5f3a\u5236\u4fee\u6539windows\u8bbe\u5907\u540d\u79f0","text":"<p>Abstract</p> <p>\u56e0vivado\u7f16\u8bd1\u5931\u8d25\u800c\u53d1\u73b0\u6b64\u95ee\u9898,\u672a\u6765\u5b8c\u5168\u62d2\u7edd\u4e2d\u6587\u8def\u5f84!</p> <ul> <li>\u7ba1\u7406\u5458\u6743\u9650\u6253\u5f00powershell</li> <li>\u8f93\u5165<code>Rename-Computer --NewName \"**\"</code> **\u5373\u4e3a\u65b0\u540d\u79f0</li> <li>\u91cd\u542f\u5373\u53ef</li> </ul>"},{"location":"BasicSkill/GitHelp/","title":"Git\u547d\u4ee4\u884c","text":"<p>https://www.bilibili.com/video/BV19e4y1q7JJ/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=c012000e7aa400d4f2f158bc7f351a7e</p>"},{"location":"BasicSkill/GitHelp/#pr","title":"\u5982\u4f55\u8fdb\u884c\u66f4\u597d\u5730PR","text":"<ol> <li>git clone + \u5730\u5740 \u590d\u5236\u5230\u672c\u5730</li> <li>git init :\u8ba9\u5f53\u524d\u6587\u4ef6\u5939\u53d8\u6210git\u4ed3\u5e93 git init folder \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939\u5e76\u521d\u59cb\u5316\u4e3agit\u4ed3\u5e93</li> <li>git checkout -b xxx \u5207\u6362\u81f3\u65b0\u5206\u652fxxx\uff08\uff09,\u590d\u5236\u5f53\u524d\u7684branch\u5230\u65b0branch\u4e0a</li> <li>git diff \u6765\u770b\u81ea\u5df1\u5bf9\u4ee3\u7801\u505a\u51fa\u7684\u6539\u53d8</li> <li>git add \u544a\u77e5git\u6211\u4fee\u6539\u7684\u6587\u4ef6</li> <li>git commit \u5c06\u4fee\u6539\u771f\u6b63\u653e\u5230git\u91cc\u9762</li> <li>git push origin xxx \u5c06\u672c\u5730branch\u4e0a\u4f20\u81f3remote</li> <li>git checkout main \u5207\u6362\u5230\u4e3b\u5206\u652f</li> <li>git pull origin master \u5c06\u8fdc\u7aef\u4fee\u6539\u8fc7\u7684\u4ee3\u7801\u540c\u6b65\u5230\u672c\u5730</li> <li>git rebase main \u5728xxx\u5206\u652f\u4e0a\uff0c\u5c06main\u79fb\u8fc7\u6765\uff0c\u6839\u636e\u6211\u7684commit\u6765\u4fee\u6539\u6210\u65b0\u7684\u5185\u5bb9\uff0c\u5982\u679c\u51fa\u73b0\u4e86conflict\uff0c\u624b\u52a8\u9009\u62e9\u8981\u4fdd\u7559\u7684\u4ee3\u7801</li> <li>git push -f origin xxx (-f\u8868\u793a\u5f3a\u5236)</li> <li>git branch -D xxx \u5c06\u672c\u5730branch\u5220\u6389</li> </ol>"},{"location":"BasicSkill/GitHelp/#_1","title":"\u56de\u5230\u672c\u5730","text":"<ol> <li>git reflog \u67e5\u770b\u672c\u5730\u5386\u53f2\u7248\u672c</li> <li>git reset --hard HEAD ^ ** \u5373\u53ef(--hard \u4f1a\u628a\u539f\u4fee\u6539\u5220\u6389)</li> <li>git reset hash **  </li> </ol>"},{"location":"BasicSkill/GitHub/","title":"Github\u5b66\u751f\u8ba4\u8bc1\u4e2a\u4eba\u6700\u4f18\u89e3","text":"<ol> <li>\u6253\u5f00Github\u5b66\u751f\u8ba4\u8bc1\u5b98\u7f51</li> <li>\u627e\u5230\u7533\u8bf7\u52a0\u5165GitHub Global Campus\u4e00\u680f\uff0c\u6309\u8981\u6c42\u64cd\u4f5c</li> <li>\u63d0\u4ea4\u6587\u4ef6\u65f6\uff0c\u5728\u624b\u673a\u4e0a\u6253\u5f00github\u8fdb\u884c\u8ba4\u8bc1\uff0c\u91c7\u7528\u62cd\u7167\u7247\u65b9\u6cd5\uff0c\u62cd\u624b\u5199\u5185\u5bb9\u3002\uff08\u7535\u8111\u7aef\u56e0\u5947\u602a\u539f\u56e0\u65e0\u6cd5\u5b9e\u73b0\uff09\u3002</li> </ol> <p>Reference: https://zhuanlan.zhihu.com/p/674783867</p>"},{"location":"BasicSkill/John/","title":"John\u5b89\u88c5\u8bb0\u5f55","text":"<p>Note</p> <p>\u56e0\u4e3a\u8e29\u4e00\u5806\u5751\u800c\u7ea2\u6e29,\u6240\u4ee5\u8bb0\u5f55.</p>"},{"location":"BasicSkill/John/#_1","title":"\u5b89\u88c5","text":"<p>\u5728\u5176GitHub\u4ed3\u5e93\u5b89\u88c5(\u4e0d\u8981\u5728https://www.openwall.com/john/\u5b89\u88c5,\u8fd9\u4e2a\u5730\u65b9\u7684\u7248\u672c\u662f\u65e7\u7684,\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528)</p> <p>\u901a\u8fc7git clone\u5373\u53ef \u4f60\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbdoc/INSTALL,\u91cc\u9762\u6709\u8be6\u7ec6\u7684\u5b89\u88c5\u8bf4\u660e. \u6216\u8005\u6309\u4e0b\u65b9\u76f4\u63a5\u50bb\u74dc\u5f0f\u5b89\u88c5</p> <ol> <li><code>sudo apt install openssl</code></li> <li><code>sudo apt install libssl-dev</code></li> <li><code>cd src</code></li> <li><code>./configure &amp;&amp; make</code></li> <li><code>cd ../run</code></li> <li><code>./john --test</code></li> </ol>"},{"location":"BasicSkill/John/#_2","title":"\u4f7f\u7528","text":"<p>\u7ec8\u7aef\u4e0b\u8fd0\u884crar2john,\u83b7\u5f97hash\u503c:</p> <p><pre><code>./run/rar2john [path/to/rarfile] &gt; [path/to/hashfile]\n./run/john [hashfile]\n</code></pre> \u6b64\u5904\u662f\u4f7f\u7528\u7684\u9ed8\u8ba4\u5b57\u5178 \u90a3\u4e48\u5728\u4f60\u77e5\u9053\u5bc6\u7801\u957f\u5ea6\u548c\u683c\u5f0f\u65f6,\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f,\u4f8b\u5982\u5bc6\u7801\u662f8\u5b57\u7b26\u768416\u8fdb\u5236\u5b57\u7b26\u4e32 <pre><code>zip2john yourfile.zip &gt; yourfile.hash\njohn --format=pkzip --mask='?h?h?h?h?h?h?h?h' yourfile.hash\n</code></pre> \u53c2\u8003\u7f51\u7ad9: 1. https://bbs.deepin.org/en/post/248454 2. https://www.cnblogs.com/Hekeats-L/p/16745318.html</p>"},{"location":"BasicSkill/LaTex/","title":"LaTex\u4f7f\u7528\u8bb0\u5f55","text":"<ul> <li>\u67e5\u770b\u6240\u6709\u66f4\u65b0\u7684\u5b8f\u5305\u6307\u4ee4:<code>tlmgr update --list</code></li> <li>\u66f4\u65b0\u6240\u6709\u9700\u8981\u66f4\u65b0\u7684\u5b8f\u5305\uff1a<code>tlmgr update --self -all</code></li> <li>\u5b89\u88c5\u65b0\u5b8f\u5305:<code>tlmgr install</code></li> </ul>"},{"location":"BasicSkill/Verilog/","title":"WSL\u4e0bvscode\u914d\u5408verilator\u5b9e\u73b0\u8bed\u6cd5\u7ea0\u9519","text":"<ol> <li>\u5b89\u88c5vscode-verilog</li> <li><code>sudo apt-get install iverilog</code>\u5b89\u88c5verilator</li> <li>\u5728\u63d2\u4ef6\u7684\u8bbe\u7f6e\u4e2d,\u5c06verilog&gt;Linting:Linter\u4e3aiverilog</li> <li>\u5728Verilog \u203a Linting \u203a Iverilog: Arguments\u4e2d\u586b\u5165-i\u53c2\u6570.</li> <li>\u6ce8\u610f,\u53ea\u6709\u5728\u4fdd\u5b58\u540e\u624d\u4f1a\u8fdb\u884c\u8bed\u6cd5\u68c0\u67e5.</li> </ol> <p>Note</p> <p>\u6ce8\u610f,\u4e00\u4e9b\u9519\u8bef\u662f\u65e0\u6cd5\u68c0\u67e5\u51fa\u7684</p> <p><pre><code>wire [63:0] c;\nwire a;\nassign c = a;\n</code></pre> \u53c2\u8003\u7f51\u7ad9 \u65e0\u9700\u8fdb\u884c\u8be5\u7f51\u7ad9\u4e2d\u7684ctags\u7684\u8fc7\u7a0b</p>"},{"location":"BasicSkill/else/","title":"\u6742\u9879","text":""},{"location":"BasicSkill/else/#_1","title":"\u5176\u4ed6","text":"<ul> <li>\u89c6\u9891\u63d2\u4ef6</li> </ul> <p>windows \u4e0b\u7528tree</p> <p><code>tree /f</code> \u663e\u793a\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u5939/\u6587\u4ef6 <code>tree /f tree.txt</code> \u5bfc\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u5939/\u6587\u4ef6\u7684\u76ee\u5f55\u6811\u5230tree.txt\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"BasicSkill/mkdocs/","title":"mkdocs\u4f7f\u7528\u8bb0\u5f55","text":""},{"location":"BasicSkill/mkdocs/#mkdocsgithub","title":"\u4f7f\u7528mkdocs\u642d\u5efa\u4e2a\u4eba\u4e3b\u9875\u5e76\u5173\u8054\u5230github\u4e0a","text":"<p>2024/02/05</p> <ol> <li>git\u70b9\u51fb\u8be5\u7f51\u7ad9\uff0c\u6309\u7167\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e8c\u6b65\u521b\u5efa\u81ea\u5df1\u7684repository</li> <li><code>pip install mkdocs</code>(\u5982\u679c\u4e0d\u6210\u529f\u53ef\u4ee5\u7528<code>sudo pip install mkdocs</code>)</li> <li>\u5b89\u88c5\u4e3b\u9898\u63d2\u4ef6<code>pip install mkdocs-material</code></li> <li>\u5728repository\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b<code>mkdocs new test</code>\u521b\u5efa\u6587\u4ef6\u5939</li> <li><code>mkdocs serve</code>\u5b9e\u65f6\u6e32\u67d3 <code>mkdocs build</code>\u751f\u6210\u9759\u6001\u7f51\u9875\u4ee3\u7801 <code>mkdocs gh-deploy</code>\u81ea\u52a8\u90e8\u7f72\u5230GitHub\u4e0a</li> </ol> <p>Reference:</p> <ul> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> <li>\u5173\u4e8eMkdocs Material\u7684\u5177\u4f53\u4f7f\u7528</li> <li>material for mkdcos\u6587\u6863</li> <li>mkdocs\u5b98\u65b9\u6587\u6863</li> </ul>"},{"location":"BasicSkill/mkdocs/#mkdocs-material","title":"\u8c03\u6574mkdocs-material\u5b57\u4f53","text":"<p>2024/03/01</p> <p>\u53c2\u8003\u8d44\u6599:</p> <ul> <li>\u8be6\u7ec6\u64cd\u4f5c</li> <li>\u4e2d\u6587\u5b57\u4f53Github\u4ed3\u5e93</li> <li>\u4e2d\u6587\u5b57\u4f53CSDN</li> </ul>"},{"location":"BasicSkill/shortcuts/","title":"\u6536\u85cf\u7684\u5feb\u6377\u952e","text":"<ul> <li>Vscode:</li> <li>vscode\u521b\u5efa\u65b0\u7a97\u53e3 ctrl + shift + n</li> <li>F11 \u5168\u5c4f\uff0c\u786e\u4fdd\u4e13\u6ce8</li> <li>Ctrl + K Z \u5723\u7985\u6a21\u5f0f</li> <li>Ctrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</li> <li>Alt + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt + 9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>\u5feb\u901f\u56de\u5230\u9876\u90e8 \uff1a ctrl + home,\u5feb\u901f\u56de\u5230\u5e95\u90e8 : ctrl + end</li> <li>Ctrl + \u53f3\u7bad\u5934,\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 </li> <li>Ctrl + M ,\u6570\u5b66\u516c\u5f0f</li> <li>Ctrl + PgUp\uff0c\u5de6\u79fb Ctrl + PgDn \u53f3\u79fb</li> <li>Window:</li> <li>window+H \u7b14\u8bb0\u672c\u7684\u8bed\u97f3\u8f93\u5165</li> <li>window+V \u526a\u8d34\u677f</li> <li>window + 1,2,3 \u5207\u6362\u5230\u5bf9\u5e94\u7684\u5e94\u7528\u754c\u9762</li> <li>Edge:</li> <li>Ctrl + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt+9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>Ctrl + Tab \u5207\u6362\u5230\u4e0b\u4e00\u6807\u7b7e\u9875</li> <li>Ctrl + T \u521b\u5efa\u65b0\u6807\u7b7e\u9875\uff0cCtrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</li> <li>\u82f9\u679c\u4e0b\u7684Vscode\u5feb\u6377\u952e</li> <li>cmd + J \u6253\u5f00\u7ec8\u7aef</li> <li></li> </ul>"},{"location":"BasicSkill/shortcuts/#vscode","title":"\u81ea\u5b9a\u4e49vscode\u5feb\u6377\u952e","text":"<ol> <li>Ctrl+K ,Ctrl+S \u6253\u5f00\u5feb\u6377\u952e\u8bbe\u7f6e</li> <li>\u70b9\u51fb\u53f3\u4e0a\u89d2Open Keyboard Shortcuts</li> <li>\u5f00\u59cb\u81ea\u5b9a\u4e49,\u4f8b\u5b50\u5982\u4e0b <pre><code>    {\n        \"key\": \"ctrl+m\",\n        \"command\": \"editor.action.insertSnippet\",\n        \"when\": \"editorTextFocus\",\n        \"args\": {\n            \"snippet\": \"$ ${TM_SELECTED_TEXT}$1 $ $2\" \n        }\n    },\n    {\n        \"key\": \"ctrl+1\",\n        \"command\": \"editor.action.insertSnippet\",\n        \"when\": \"editorTextFocus\",\n        \"args\": {\n            \"snippet\": \"\\\\begin{center}\\n    \\\\includegraphics{$1}\\n\\\\end{center}$2\" \n        }\n    },\n</code></pre></li> </ol>"},{"location":"BasicSkill/wsl/","title":"WSL\u4f7f\u7528\u8bb0\u5f55","text":""},{"location":"BasicSkill/wsl/#wslpython","title":"WSL\u5185\u88c5python","text":"<p>2024/02/04</p> <ul> <li>WSL\u5185\u7f6epython\uff0c\u518d\u88c5\u4e00\u4e2apip\u5373\u53ef<code>python apt install python3-pip</code></li> <li>\u5982\u679c\u62a5\u9519\uff0c\u5219\u5148<code>sudo apt-get upgrade</code>\uff0c\u7136\u540e\u518d\u91cd\u590d\u4e0a\u8fb9\u64cd\u4f5c\u5373\u53ef</li> </ul>"},{"location":"BasicSkill/wsl/#wslvpn","title":"\u5728WSL\u91cc\u4f7f\u7528VPN","text":"<p>2024/02/05</p> <ol> <li>\u5728Clash for Windows\u91cc\u6253\u5f00<code>Allow Wlan</code>\u5f00\u5173\uff0c\u5141\u8bb8\u5c40\u57df\u7f51\u8bbe\u5907\u8bbf\u95ee\u4ee3\u7406</li> <li>\u5728WSL\u5185\u7684.bashrc\u6587\u4ef6\u91cc\u5c06\u4e0b\u8fb9\u5185\u5bb9\u590d\u5236\u8fdb\u53bb <pre><code>proxy () {\n    export hostip=$(cat /etc/resolv.conf |grep -oP '(?&lt;=nameserver\\ ).*')\n    export https_proxy=\"http://${hostip}:7890\"\n    export http_proxy=\"http://${hostip}:7890\"\n    export all_proxy=\"sock5://${hostip}:7891\"\n    echo \"HTTP Proxy on: ${hostip}\"\n}\nnoproxy () {\n    unset http_proxy\n    unset https_proxy\n    unset all_proxy\n    echo \"HTTP Proxy off\"\n}\n</code></pre></li> <li><code>source .bashrc</code> \u91cd\u8f7d\u8be5\u6587\u4ef6</li> <li>\u6bcf\u6b21\u5728\u9700\u8981\u5f00\u542f\u4ee3\u7406\u7684\u7ec8\u7aef\u8f93\u5165proxy\u5373\u53ef\u5f00\u542f\u4ee3\u7406,\u8f93\u5165noproxy\u53ef\u4ee5\u5173\u95ed\u4ee3\u7406</li> <li><code>wegt www.google.com</code>\u68c0\u6d4b\u662f\u5426\u6210\u529f \u53c2\u8003\u7f51\u7ad9</li> </ol>"},{"location":"Diary/","title":"\u4f9d\u65e7\u662f\u90a3\u4e2a\u6625\u96e8~","text":"<p>Abstrace</p> <p>\u8fd9\u662f\u5206\u4eab\u751f\u6d3b\uff0c\u611f\u60f3\uff0c\u65e5\u8bb0\u7684\u5730\u65b9(\u2579\u06a1\u2579 )</p> <p>\u957f\u4e45\u7684\u613f\u671b\u6e05\u5355: - [ ] \u6ed1\u96ea - [ ] \u540e\u7a7a\u7ffb - [ ] \u5012\u7acb</p>"},{"location":"Diary/2024/","title":"\u4eba\u6a21\u4eba\u6837","text":"<p>Abstract</p> <p>\u62d6\u4e86\u8bb8\u4e45\uff0c\u7ec8\u4e8e\u5f00\u59cb\u5199\u81ea\u5df1\u7684\u5e74\u7ec8\u603b\u7ed3\u4e86\u3002</p> <p>\u8bb8\u591a\u4e8b\uff0c\u5c31\u662f\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u5199\u4e0b\u53cd\u601d\u5373\u53ef\u3002\u56e0\u4e3a\u77e5\u9053\u81ea\u5df1\u672a\u6765\u56de\u987e\u65f6\uff0c\u4e5f\u4e0d\u4f1a\u6709\u8010\u5fc3\u770b\u5927\u7bc7\u5e45\u7684\u65e7\u4e8b\u3002</p> <p>19\uff1a37,\u53c8\u662f\u4e00\u5e74\u9664\u5915\u591c\uff0c\u5750\u5728\u5367\u5ba4\u7684\u7535\u8111\u524d\uff0c\u7ec8\u4e8e\u8981\u5f00\u59cb\u5199\u5e74\u7ec8\u603b\u7ed3\u4e86\u3002</p> <p>\u90fd\u5fd8\u4e86\u4ece\u4f55\u65f6\u8d77\uff0c\u6ca1\u518d\u770b\u8fc7\u6625\u665a\uff0c\u603b\u662f\u5750\u5728\u7535\u8111\u9762\u524d\u5ea6\u8fc7\u7684\u65b0\u5e74\u3002</p>"},{"location":"Diary/2024/#_2","title":"\u9ad8\u8003\u524d\uff1a","text":"<p>Note</p> <p>\u8bb0\u5f97\u9ad8\u8003\u524d\uff0c\u6211\u7684\u4e00\u53e5\u4e2a\u6027\u7b7e\u540d\uff1a\u81ea\u5f8b\u81ea\u5f3a\uff0c\u6e29\u67d4\u5584\u826f\u3002</p> <p>\u56de\u60f3\u9ad8\u4e2d\u4e09\u5e74\uff0c\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u786e\u5b9e\u662f\u505a\u5230\u4e86\u3002</p> <p>\u9ad8\u8003\u7684\u90a3\u6bb5\u7ecf\u5386\uff0c\u6211\u7684\u7eb8\u8d28\u65e5\u8bb0\u672c\u8bb0\u5f55\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u5728\u6b64\u5c31\u7701\u7565\u4e86\u3002</p> <p>\u603b\u7ed3\u4e0b\u6765\u5c31\u662f\uff1a\u5f88\u5e78\u8fd0\u80fd\u5728\u5b9e\u9a8c\u9ad8\u4e2d\uff0c\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u5e78\u798f\u7684\u9ad8\u4e2d\u751f\u6d3b\u3002</p>"},{"location":"Diary/2024/#_3","title":"\u9ad8\u8003\u540e\u7684\u6691\u5047","text":"<p>Note</p> <p>\u9ad8\u8003\u540e\u7279\u522b\u559c\u6b22\u7684\u4e00\u53e5\u8bdd\uff1a\u7231\u81ea\u5df1\u662f\u7ec8\u751f\u6d6a\u6f2b\u7684\u5f00\u59cb\u3002</p> <p>\u6691\u5047\u7b2c\u4e00\u6b21\u56e0\u4e3a\u4e00\u4e9b\u5bc4\u4e88\u539a\u671b\u800c\u6700\u7ec8\u88ab\u653e\u9e3d\u5b50\u7684\u4e8b\u60c5\u800c\u7834\u9632\uff0c\u751f\u6c14\uff0c\u4e5f\u6df1\u6df1\u8ba4\u8bc6\u5230\u4e86\uff1a\u6295\u5165\u2260\u4ea7\u51fa\u3002</p> <p>\u6211\u4eec\u5f88\u96be\u8981\u6c42\u522b\u4eba\u53bb\u600e\u6837\u600e\u6837\uff0c\u6700\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u8fd8\u662f\u5148\u505a\u597d\u81ea\u5df1\u3002\u4e0d\u8fc7\uff0c\u6211\u7684\u54e5\u54e5\u4e5f\u544a\u8bc9\u4e86\u6211\uff1a\u4e0e\u5176\u8f9b\u82e6\u81ea\u5df1\uff0c\u4e0d\u5982\u9ebb\u70e6\u522b\u4eba\u3002\u4e0e\u5176\u81ea\u6211\u53cd\u601d\uff0c\u4e0d\u5982\u6307\u8d23\u4ed6\u4eba\u3002</p> <p>\u786e\u5b9e\u5427\uff0c\u540e\u8005\u6709\u65f6\u8fd8\u662f\u6709\u7528\u7684\uff0c\u5728\u8fd9\u4e00\u9636\u6bb5\uff0c\u6211\u5bf9\u6240\u6709\u4eba\u7684\u671f\u671b\u503c\u4e5f\u90fd\u964d\u4f4e\u4e86\uff0c\u4e0d\u518d\u53bb\u60f3\u7740\u522b\u4eba\u4f1a\u600e\u6837\u600e\u6837\u3002</p> <p>\u5177\u4f53\u5230\u6691\u5047\u505a\u7684\u5b9e\u4e8b\uff0c\u4e5f\u5c31\u662f\u5bb6\u6559\u548c\u5728\u5bb6\u91cc\u9762\u62cd\u62cd\u7bee\u7403\u4e86\u3002</p>"},{"location":"Diary/2024/#_4","title":"\u5927\u5b66","text":"<p>\u521a\u8fdb\u6821\u56ed\u65f6\uff0c\u786e\u5b9e\u50cf\u5218\u59e5\u59e5\u8fdb\u5927\u89c2\u56ed\uff0c\u611f\u6982\u7740\u5b66\u6821\u7684\u6062\u5b8f\u5927\u6c14\uff0c\u5bbf\u820d\u7684\u6574\u6d01\u7f8e\u4e3d\uff0c\u786e\u5b9e\u5e78\u798f\u611f\u6ee1\u6ee1\u3002\u4e0a\u5b66\u671f\u7684\u6821\u56ed\u65f6\u5149\u8fc7\u7684\u597d\u5feb\uff0c\u611f\u89c9\u6bcf\u4e00\u5929\u90fd\u975e\u5e38\u5145\u5b9e\uff0c\u4e0b\u8fb9\u5c31\u8bb0\u5f55\u4e00\u4e9b\u91cd\u8981\u4e8b\u4ef6\u5427~</p>"},{"location":"Diary/2024/#_5","title":"\u65b0\u751f\u4ee3\u8868","text":"<p>\u8fd9\u7edd\u5bf9\u7b97\u662f\u4eca\u5e74\u6700\u5149\u8363\u7684\u4e00\u4ef6\u4e8b\u4e86\uff01</p> <p>\u8fd8\u8bb0\u5f97\u5f53\u65f6\u548c\u54e5\u54e5\u5728\u901b\u897f\u6e56\u65f6\uff0c\u6211\u8fd8\u5728\u90a3\u91cc\u60f3\u7740\u7a3f\u5b50\u600e\u4e48\u5199\uff0c\u6ca1\u6709\u597d\u597d\u7684\u901b\uff08\u4e5f\u662f\u59d4\u5c48\u54e5\u54e5\u4e86\uff0c\u6765\u4e86\u676d\u5dde\u5374\u6ca1\u597d\u597d\u901b\u6210\uff09\uff0c\u81f3\u4eca\u4e5f\u6ca1\u597d\u597d\u6b23\u8d4f\u897f\u6e56\u7f8e\u666f\uff0c\u8fd9\u6b21\u53bb\u4e00\u5b9a\u8981\u53bb\u5750\u5750\u8239\u3002</p> <p>\u8bb0\u5f97\u5728\u4e0a\u53f0\u524d\u7684\u6392\u7ec3\u65f6\uff0c\u8fd8\u56e0\u4e3a\u80a2\u4f53\u7684\u8fc7\u5ea6\u50f5\u786c\u80cc\u95ee\u5230\u5bb6\u91cc\u662f\u4e0d\u662f\u6709\u5f53\u5175\u7684\u4eba\u3002/(\u3112o\u3112)/~~</p> <p>\u5728\u6700\u540e\u6b63\u5f0f\u5f00\u59cb\u65f6\uff0c\u5929\u4e0a\u4e0b\u7740\u5927\u96e8\uff0c\u5173\u4e8e\u5230\u5e95\u8981\u4e0d\u8981\u7a7f\u96e8\u8863\u4e0a\u53f0\u4e00\u4e8b\uff0c\u786e\u5b9a\u4e86\u597d\u51e0\u6b21\u3002\u5728\u53f0\u4e0a\u65f6\uff0c\u96e8\u5176\u5b9e\u5f88\u5927\uff0c\u7a3f\u4e0a\u597d\u591a\u5b57\u5176\u5b9e\u90fd\u770b\u4e0d\u592a\u6e05\u695a\u4e86\uff0c\u4e0d\u8fc7\u5e78\u597d\u8bfb\u5f97\u591a\uff0c\u4e5f\u90fd\u5dee\u4e0d\u591a\u4f1a\u80cc\u4e86\uff0c\u6240\u4ee5\u9664\u4e86\u6700\u540e\u7684\u7834\u97f3\u5916\uff0c\u81ea\u6211\u611f\u89c9\u8fd8\u7b97\u826f\u597d\u3002</p> <p>\u4eba\u751f\u96be\u5fd8\u7684\u4e00\u6b21\u7ecf\u5386\uff01</p> <p>\u6700\u540e\u4e5f\u975e\u5e38\u611f\u8c22\u90a3\u4f4d\u4ee3\u8868\u5b66\u59d0\uff0c\u7ed9\u6211\u62cd\u51fa\u4e86\u81f3\u4eca\u4eba\u751f\u4e2d\u6700\u5e05\u7684\u4e00\u5f20\u7167\u7247\u3002 </p> <p>\u53cd\u601d</p> <p>\u5728\u6bcf\u4e00\u6b21\u673a\u4f1a\u5230\u6765\u65f6\uff0c\u8003\u91cf\u81ea\u5df1\u7684\u80fd\u529b\u4e0e\u7cbe\u529b\uff0c\u4e0d\u8981\u81ea\u5351\uff0c\u8981\u5927\u80c6\u5c1d\u8bd5\uff0c\u4e5f\u8981\u53bb\u7528\u5fc3\uff0c\u4e0d\u9519\u5931\u53ef\u8d35\u7684\u673a\u4f1a\uff0c\u4e5f\u4e0d\u8f9c\u8d1f\u4ed6\u4eba\u7684\u539a\u671b\u3002</p>"},{"location":"Diary/2024/#_6","title":"\u7ed3\u8bc6\u597d\u53cb","text":"<p>\u975e\u5e38\u5e78\u8fd0\uff0c\u80fd\u5728\u8fd9\u4e2a\u5b66\u671f\uff0c\u4ea4\u5230\u4e09\u4f4d\u597d\u54e5\u4eec\uff0c\u5e26\u7740\u6211\u53bb\u89c1\u4e16\u9762\uff0c\u5403\u5927\u9910\u3002</p> <p>\u611f\u89c9\u8fd9\u4e00\u5b66\u671f\uff0c\u5f88\u591a\u7684\u5feb\u4e50\uff0c\u90fd\u662f\u6765\u6e90\u4e8e\u4ed6\u4eec\u3002</p> <p>\u611f\u8c22lq\u5bf9\u6211\u8ba1\u7b97\u673a\u77e5\u8bc6\u7684\u6307\u5bfc\uff0c\u611f\u8c22zjr\u5bf9\u6211\u6570\u5b66\u7684\u6307\u5bfc\uff0c\u611f\u8c22wp\u5927\u7239\u5e26\u6211\u535a\u5f08\u8bba\uff01</p> <p>\u4e5f\u4e0e\u5bb6\u4e61\u7684\u8001\u53cb\u7684\u60c5\u611f\u66f4\u52a0\u6df1\u539a\uff0c\u6843\u56ed\u4e09\u7ed3\u4e49\u6b63\u5f0f\u6210\u7acb\uff0c\u5e38\u5e38\u4e00\u8d77\u89c6\u9891\u804a\u5929\uff0c\u8c08\u8bba\u7740\u6700\u8fd1\u7684\u4e8b\u60c5\uff0c\u4e0d\u8fc7\u67d0\u4eba\u5728\u5b66\u6821\u843d\u843d\u5927\u65b9\uff0c\u56de\u5bb6\u4e86\u5374\u626d\u626d\u634f\u634f\uff0c\u5bfc\u81f4\u5230\u73b0\u5728\u90fd\u8fd8\u6ca1\u51fa\u6765\u805a\u8fc7\uff0c\u4e00\u5927\u8d25\u7b14......</p> <p>\u5e0c\u671b\u4e0b\u4e00\u5b66\u671f\uff0c\u8fd8\u90fd\u4e00\u8d77\u5f53\u597d\u54e5\u4eec\uff01</p>"},{"location":"Diary/2024/#_7","title":"\u5b66\u4e60\ud83d\ude0b","text":"<p>\u5728\u521a\u5f00\u5b66\uff0c\u5c31\u60a3\u4e0a\u4e86\u7535\u5b50\u9633\u75ff\u3002\u5c06\u8fd1\u4e00\u4e2a\u5b66\u671f\u662f\u6ca1\u6709\u73a9\u8fc7\u6e38\u620f\u7684\uff0c\u9664\u4e86\u5feb\u671f\u672b\u65f6\uff0c\u90a3\u8fc7\u4e8e\u597d\u73a9\u7684\u6218\u5730\u2164!\u65b0\u5e74\u65b0\u6c14\u8c61\uff0c\u9664\u5915\u73a9\u4e86\u4e00\u6574\u5929\uff0c\u8be5\u53d8\u56de\u53bb\u4e86\uff0c\u5e0c\u671b\u4e0b\u4e00\u5e74\u91cc\uff0c\u7ee7\u7eed\u7535\u5b50ed~\ud83d\ude00</p> <p>\u521a\u5f00\u5b66\u65f6\u5b66\u7740\u5c5e\u5b9e\u96be\u53d7\uff0c\u5bfc\u81f4\u62c9\u4e86\u4e00\u8282\u3002\u56fd\u5e86\u65f6\u72e0\u72e0\u8865\uff0c\u7136\u540e\u5c31\u5dee\u4e0d\u591a\u80fd\u8ddf\u4e0a\u4e86\u3002\u539f\u672c\u7279\u522b\u81ea\u4fe1\u5728\u5bbf\u820d\u4e5f\u80fd\u9ad8\u6548\u5b66\u4e60\uff0c\u5230\u90fd\u6765\u53ea\u662f\u6b3a\u9a97\u4e86\u81ea\u5df1\uff0c\u5377\u5230\u4e86\u5ba4\u53cb......\u4e0b\u5b66\u671f\uff0c\u5c31\u4e0d\u5728\u5bbf\u820d\u5b66\u4e60\u4e86\uff0c\u5bbf\u820d\u5c31\u662f\u4f11\u606f\u5a31\u4e50\u7684\u5730\u65b9\ud83d\ude0b</p> <p>\u5f53\u7136\u4e86\uff0c\u4e5f\u8981\u5408\u7406\u89c4\u5212\u8def\u7a0b\u4e86\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u901a\u52e4\u65f6\u95f4\uff01\u4e0b\u5b66\u671f\uff0c\u7ee7\u7eed\u52aa\u529b\uff01</p>"},{"location":"Diary/2024/#_8","title":"\u601d\u60f3\u8f6c\u53d8","text":"<p>!!! note:     \u73b0\u5728\uff1a\u7c97\u7cd9\u7684\u5229\u4ed6\u4e3b\u4e49\u8005 \u521a\u6765\u6d59\u5927\uff0c\u89c1\u4e86\u8bb8\u8bb8\u591a\u591a\u7684\u4e8b\uff0c\u4e5f\u521d\u6b65\u9886\u7565\u7684\u4ee5\u5f80\u5e38\u5e38\u5728\u4f5c\u6587\u4e2d\u6240\u6279\u5224\u7684\u201c\u706f\u7ea2\u9152\u7eff\u201d\u3002\u5728\u8fd9\u8fb9\u9047\u5230\u4e86\u8bb8\u591a\u4eba\uff0c\u4e5f\u7ecf\u5386\u4e86\u8bb8\u591a\u4e8b\u3002\u4e00\u5f00\u59cb\u6765\u7684\u65f6\u5019\uff0c\u4e09\u89c2\u786e\u5b9e\u7ecf\u5386\u4e86\u591a\u6b21\u7684\u7834\u788e\u548c\u91cd\u6784......</p> <p>\u5bf9\u6bd4\u4ee5\u524d\u60f3\u60f3\uff0c\u611f\u89c9\u73b0\u5728\u7684\u81ea\u5df1\u786e\u5b9e\u662f\u591a\u4e86\u8bb8\u591a\u5229\u76ca\u8003\u91cf\uff0c\u4e5f\u66f4\u65e0\u60c5\u4e86\u4e00\u70b9\ud83e\udd14\uff1f\u7b97\u662f\u53d8\u574f\u4e86\u5427\uff0c\u4e5f\u7b97\u662f\u6210\u719f\u4e86\u3002</p> <p>\u539f\u672c\u8fd8\u60f3\u8bb0\u5f55\u4e0b\u6211\u751f\u6d3b\u7684\u4e00\u4e9b\u201c\u539f\u5219\u201d\uff0c\u4e8b\u5b9e\u4e0a\u5728\u6765\u6d59\u5927\u540e\u8fd9\u91cc\u9762\u7684\u597d\u51e0\u4e2a\u90fd\u53d1\u751f\u4e86\u4e0d\u5c11\u7684\u53d8\u5316\uff0c\u5f88\u591a\u90fd\u662f\u52a0\u4e0a\u4e86\u201c\u7279\u6b8a\u60c5\u51b5\u201d\u4e0b\u7684\u201c\u7279\u6b8a\u5904\u7406\u201d\uff0c\u8b6c\u5982\uff1a</p> <ul> <li>\u5df1\u6240\u4e0d\u6b32\u52ff\u65bd\u4e8e\u4eba\uff0c\u5df1\u6240\u6b32\u65bd\u4e8e\u4eba\u3002</li> <li>\u4e0d\u5bf9\u522b\u4eba\u6709\u592a\u9ad8\u671f\u671b\uff0c\u4f46\u662f\u8981\u5584\u5f85\u4ed6\u4eba\u3002</li> <li>\u62d2\u7edd\u8d1f\u548c\u535a\u5f08\uff0c\u907f\u514d\u96f6\u548c\u535a\u5f08\uff0c\u5c3d\u91cf\u6b63\u548c\u535a\u5f08\u3002</li> <li>\u968f\u4f60\u8a00\u8bed\u8fb1\u9a82\uff0c\u9020\u8c23\u662f\u975e\uff0c\u53ea\u8981\u4e0d\u662f\u76f4\u63a5\u5f71\u54cd\u4e86\u6211\u7684\u8eab\u8fb9\u751f\u6d3b\uff0c\u5c31\u65e0\u6240\u8c13\u3002</li> <li>\u559c\u6b22\u8010\u5fc3\uff0c\u957f\u4e45\u7684\u76f8\u5904\uff0c\u559c\u6b22\u53ef\u4ee5\u4e0d\u5b9a\u65f6\u7684\u7545\u6240\u6b32\u8a00\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u8a00\u8bed\u4f24\u5bb3\u5f7c\u6b64\u3002</li> <li>\u5bf9\u597d\u4eba\u597d\uff0c\u5bf9\u574f\u4eba\u574f\u3002</li> <li>\u4f60\u7684\u4e0b\u9650\u51b3\u5b9a\u6211\u7684\u4e0b\u9650\u3002\ud83d\ude42</li> </ul> <p>\u4e0d\u8fc7\u786e\u5b9e\u662f\u61d2\uff0c\u4e0d\u60f3\u53bb\u8be6\u7ec6\u5206\u6790\u4e86\u3002\u800c\u4e14\u56e0\u4e3a\u6700\u540e\u4e00\u6761\u7684\u539f\u56e0\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u5f88\u591a\u51b3\u7b56\uff0c\u4e5f\u662f\u4e0d\u4e00\u5b9a\u4f1a\u7528\u4e0a\u8fb9\u51e0\u70b9\u7684\u3002\u66f4\u4f55\u51b5\uff0c\u5c06\u8fd9\u4e9b\u4e1c\u897f\u54d7\u5566\u5566\u7684\u8bb2\u597d\u591a\uff0c\u7136\u540e\u53c8\u516c\u5e03\u4e8e\u4eba\uff0c\u611f\u89c9\u4e0d\u592a\u597d\ud83e\udd14\u3002\u6240\u4ee5\u5c31\u7b80\u5355\u5217\u5728\u8fd9\u91cc\uff0c\u4f9b\u4eca\u5e74\u540e\u66f4\u52a0\u6210\u719f\u7684\u6211\u56de\u6765\u770b\uff0c\u7136\u540e\u770b\ud83e\udd21\u3002</p> <p>\u563b\u563b\ud83e\udd2d\u3002</p>"},{"location":"Diary/2024/#_9","title":"\u5b66\u4e60\u65b9\u5411","text":"<p>\u4e0a\u7684\u4e00\u95e8\u901a\u6838\uff0c\u63a5\u89e6\u4e86\u5c4e\u5c71\u4ee3\u7801\uff0c\u5728\u770b\u7684\u65f6\u5019\u65e0\u6bd4\u6298\u78e8\uff0c\u4e0d\u8fc7\u548c\u961f\u53cb\u6a21\u4eff\u7740\u5199\u51fa\u6765\u540e\u4e5f\u662f\u633a\u6709\u6210\u5c31\u611f\u7684\u3002\u6700\u540e\u5b8c\u6210\u529f\u80fd\u770b\u7740\u8fd8\u662f\u633a\u70ab\u9177\u7684\uff0c\u4e0d\u8fc7\u56fe\u7247\u592a\u5927\uff0c\u653e\u4e0d\u4e0a\u6765\uff0c\u5c31\u7b97\u4e86\uff0c\u8bb0\u5f55\u4e0b\u53cd\u601d\u3002</p> <p>\u53cd\u601d</p> <p>\u5b66\u957f\u66fe\u8bf4\u8fc7\uff1a\u6570\u5b66\u51b3\u5b9a\u4e86\u4f60\u7684\u4e0a\u9650\u3002\u89e3\u51b3\u4e00\u4e2a\u5b9e\u9645\u95ee\u9898\u65f6\uff0c\u6700\u53ef\u8d35\u7684\u662f\u5b9e\u73b0\u7684\u601d\u8def\u4e0e\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u80af\u5b9a\u4f1a\u6709\u5404\u79cd\u7ec6\u8282\u95ee\u9898\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u89e3\u51b3\u7684\u3002</p> <p>\u4e00\u76f4\u90fd\u5f88\u5728\u610f\u4e0d\u53ef\u66ff\u4ee3\u6027\uff0c\u5e0c\u671b\u672a\u6765\uff0c\u6211\u7684\u5de5\u4f5c\u662f\u521b\u9020\uff0c\u800c\u4e0d\u662f\u642c\u7816\uff0c\u751a\u81f3\u662f\u642c\u90a3\u4e9b\u968f\u4fbf\u4e00\u4e9b\u4eba\u90fd\u53ef\u4ee5\u642c\u52a8\u7684\u7816\u3002</p>"},{"location":"Diary/2024/#_10","title":"\u5a31\u4e50\u4e0e\u6210\u957f","text":"<p>\u54ce\u5440\u5440\u5440\uff01\uff01\uff01\u6bcf\u6b21\u90fd\u60f3\u5199\u7684\u6df1\u5165\u70b9\uff0c\u7ed3\u679c\u5199\u7740\u5199\u7740\u5c31\u5f00\u59cb\u6cdb\u6cdb\u800c\u8c08\uff0c\u70e6\ud83d\ude2d!</p> <p>\u4e0a\u5b66\u671f\u4f11\u606f\u65f6\u7231\u770b\u7684\uff1a\u65f6\u653f\u7c7b(\u5f00\u5b66\u521d)-&gt;\u7ea2\u8b66(\u4e00\u6574\u4e2a\u5b66\u671f)-&gt;powersoul\u548cThe One\u6f14\u5531\u4f1a</p> <p>\u5e0c\u671b\u4e0b\u5b66\u671f\u4e0d\u8981\u518d\u770b\u6e38\u620f\u89c6\u9891\u8fa3\uff01\uff01\uff01\u591a\u770b\u70b9\u6f14\u5531\u4f1a\uff0c\u97f3\u4e50\uff0c\u62bd\u8c61\u7684\uff0cor\u597d\u770b\u7684\u667a\u4e91\u8bfe\u5802\u4e5f\u597d\u5440\uff01\uff01\uff01 \u4e5f\u5f00\u59cb\u6709\u4e86\u5065\u8eab\u7684\u4e60\u60ef\uff0c\u5e0c\u671b\u4e0b\u5b66\u671f\u80fd\u591f\u5f62\u6210\u4f53\u7cfb\u3002</p> <p>\u4e5f\u5e0c\u671b\u4e00\u4e2a\u6708\u80fd\u8bfb\u5b8c\u4e00\u672c\u4e66......</p> <p>\u4e5f\u5e0c\u671b\u80fd\u591f\u5728\u4e0b\u5b66\u671f\u7ec3\u7ec3\u5409\u4ed6\u548c\u5531\u6b4c......</p> <p>\u8fd9\u4e48\u591a\u7684......\uff0c\u4f60\u4e5f\u61c2\u5f97....\ud83d\ude2d\u81ea\u8ba4\u4e3a\u5230\u65f6\u5019\u4e5f\u4f1a\u9e3d\u9e3d\u9e3d</p> <p>\u6709\u4eba\u53ef\u4ee5\u76d1\u7763\u6211\u561b\ud83d\ude41</p>"},{"location":"Diary/2024/#_11","title":"\u603b\u7ed3","text":"<p>\u73b0\u5728\u4e5f\u662f\u771f\u6b63\u7684\u6210\u5e74\u4eba\u4e86</p> <p>\u9762\u4e34\u9009\u62e9\u4e5f\u8d8a\u6765\u8d8a\u591a\u6837\uff0c\u4e5f\u8981\u4e3a\u81ea\u5df1\u505a\u7684\u6bcf\u4ef6\u4e8b\u90fd\u8d1f\u8d23</p> <p>\u5a31\u4e50\u5f53\u4e0b\uff0c\u6295\u8d44\u672a\u6765</p> <p>\u52a0\u6cb9\u5427~</p> <p>\u4e5f\u795d\u6bcf\u4f4d\u8010\u5fc3\u770b\u5b8c\u7684\u4f19\u4f34\u9f99\u5e74\u5927\u5409\uff0c\u4e07\u4e8b\u5982\u610f~</p>"},{"location":"Diary/Poetry/","title":"\u8bd7\u6b4c","text":"<p>Abstract</p> <p>\u7528\u6765\u8bb0\u5f55\u5206\u4eab\u559c\u6b22\u7684\u8bd7\u6b4c</p> <p>2024/03/15</p> <p>\"\u9189\u8fc7\u624d\u77e5\u9152\u6d53,\u7231\u8fc7\u65b9\u77e5\u60c5\u91cd.\u4f60\u4e0d\u80fd\u505a\u6211\u7684\u8bd7,\u6b63\u5982\u6211\u4e0d\u80fd\u505a\u4f60\u7684\u68a6\" --\u80e1\u9002\u300a\u68a6\u4e0e\u8bd7\u300b</p> <p>\u201c\u6211\u5e0c\u671b\u4f60\u8bfb\u5f88\u591a\u7684\u4e66\uff0c\u8d70\u5f88\u8fdc\u7684\u8def\u3002</p> <p>\u6211\u5e0c\u671b\u4f60\u7231\u5f88\u591a\u7684\u4eba\uff0c\u4e5f\u88ab\u5f88\u591a\u7684\u4eba\u7231\u3002</p> <p>\u6211\u5e0c\u671b\u4f60\u8d70\u8fc7\u4eba\u5c71\u4eba\u6d77\uff0c\u4e5f\u904d\u89c8\u5c71\u6cb3\u6e56\u6d77\u3002\u6211\u5e0c\u671b\u4f60\u770b\u7eb8\u8d28\u4e66\uff0c\u9001\u624b\u5199\u7684\u795d\u798f\u3002</p> <p>\u6211\u795d\u4f60\u5728\u8fd9\u6e05\u4eae\u7684\u4e16\u754c\u4e0a\uff0c\u6df1\u60c5\u7684\u6d3b\u7740\u3002\u201d\u2014\u2014\u300a\u8fd9\u4e16\u754c\u4e0e\u6211\u300b</p> <p>\u6211\u5c06\u4e8e\u832b\u832b\u4eba\u6d77\u4e2d\u8bbf\u6211\u552f\u4e00\u7075\u9b42\u4e4b\u4f34\u4fa3\u3002\u5f97\u4e4b\u6211\u5e78\uff0c\u5931\u4e4b\u6211\u547d\u3002</p> <p>2024/03/11</p> <p>\u300a\u5728\u573a\u300b</p> <p>\u6211\u89c6\u6625\u5929\u5230\u6765</p> <p>\u7684\u76ee\u51fb\u8bc1\u4eba</p> <p>\u4f60\u76ee\u51fb\u4e86\u6211\u7684\u76ee\u51fb. @\u9694\u82b1\u4eba</p> <ul> <li>\u5982\u679c\u559c\u6b22\u8774\u8776,\u522b\u53bb\u8ffd\u5b83,\u53bb\u79cd\u82b1. <p>2024/02 \u300a\u8d8a\u4eba\u6b4c\u300b</p> </li> </ul> <p>\u4eca\u5915\u4f55\u5915\u516e\uff0c\u6434\u821f\u4e2d\u6d41\u3002</p> <p>\u4eca\u65e5\u4f55\u65e5\u516e\uff0c\u5f97\u4e0e\u738b\u5b50\u540c\u821f\u3002</p> <p>\u8499\u7f9e\u88ab\u597d\u516e\uff0c\u4e0d\u8a93\u57a2\u803b\u3002</p> <p>\u5fc3\u51e0\u70e6\u800c\u4e0d\u7edd\u516e\uff0c\u5f97\u77e5\u738b\u5b50\u3002</p> <p>\u5c71\u6709\u6728\u516e\u6728\u6709\u679d\uff0c\u5fc3\u60a6\u541b\u516e\u541b\u4e0d\u77e5\u3002</p>"},{"location":"Diary/ToDo/","title":"ToDo","text":"<p>2024/7/2</p> <ol> <li>wsl\u4e0b\u88c5typist</li> </ol> <p>2024/6/28</p> <ol> <li>\u53bb\u9884\u7ea6\u533b\u751f\u6cbb\u7597</li> <li>\u5b66\u5e74\u603b\u7ed3</li> <li>\u7ec3\u5409\u4ed6\u89c4\u5212\u548c\u8d44\u6e90\u7ba1\u7406</li> <li>\u7ec3\u624b\u81c2\u5bf9\u5e94\u89c6\u9891</li> <li></li> </ol>"},{"location":"Diary/YearSummery/","title":"\u5927\u4e00\u5b66\u5e74\u603b\u7ed3","text":"<p>\u65b9\u9762: 1. \u4e2a\u4eba\u6210\u957f 2. \u5b66\u4e1a\u4ee5\u53ca\u5b66\u4e60\u7ecf\u9a8c,\u53cd\u601d 3. \u4e2a\u4eba\u672a\u6765\u7684\u53d1\u5c55\u76ee\u6807 4. \u5bf9\u4e8e\u8d44\u6e90\u7684\u5229\u7528 5. \u751f\u6d3b\u4e60\u60ef\u4ee5\u53ca\u76ee\u6807\u8fbe\u6210?</p>"},{"location":"Diary/record/","title":"\u65e5\u8bb0","text":"<p>Abstract</p> <p>\u6bcf\u5929\u8bb0\u5f55\u81ea\u5df1\u5e72\u4e86\u70b9\u4ec0\u4e48\uff0c\u6765\u6fc0\u52b1\uff0c\u76d1\u7763\u81ea\u5df1\uff01</p> <p>\u6bcf\u65e5\u5fc5\u505a\uff1a\u5b66\u4e60\uff0c\u5065\u8eab\uff0cand\u53ef\u80fd\u4f1a\u6709\u5409\u4ed6\uff1f</p> <p>^(*\uffe3(oo)\uffe3)^</p> <p>2024/10/12 \u60f3\u592a\u591a\uff0c\u505a\u592a\u5c11\uff0c\u597d\u597d\u4f11\u606f\uff0c\u8d77\u5e8a\u8981\u52aa\u529b\u4e86\uff01</p> <p>\u5b66\u4e60\u4e0d\u6c42\u751a\u89e3,\u5f97\u8fc7\u4e14\u8fc7\u4e86\u6700\u8fd1</p> <p>\u521a\u5f00\u5b66\u7684\u4e00\u4e2a\u6708\u5e76\u6ca1\u6709\u505a\u7684\u5f88\u597d,\u6709\u4e24\u6b21\u7b7e\u5230\u6ca1\u6709\u5230,\u4e22\u5931\u4e86\u4e00\u4e9b\u5e73\u65f6\u5206,\u8fd9\u662f\u975e\u5e38\u4e8f\u7684</p> <p>2024/06/13</p> <p>\u7ebf\u4ee3!\u6570\u5206\u56de\u8bbf!</p> <p>2024/06/11</p> <p>\u6211\u6709\u591a\u4e45\u6ca1\u6709\u66f4\u65b0\u65e5\u8bb0\u4e86,\u54c8\u54c8 :)</p> <p>\u4e5f\u7ec8\u5f52\u662f\u514b\u670d\u4e86\u8bf1\u60d1,\u4f46\u540c\u65f6\u4e5f\u6765\u5230\u4e86\u671f\u672b.</p> <p>\u6211\u4eec\u90fd\u5e94\u8be5\u6784\u7b51\u7a33\u5b9a\u5f3a\u5927\u7684\u7cbe\u795e\u5185\u6838,\u800c\u975e\u53bb\u628a\u7cbe\u795e\u5bc4\u6258\u5728\u4ed6\u7269.\u81f3\u5c11\u73b0\u5728\u5e94\u8be5\u662f\u8fd9\u6837\u7684.</p> <p>\u671f\u672b\u4e86,\u6211\u4f1a\u8ba4\u771f\u8fc7\u6bcf\u4e00\u5929\u7684,\u5e76\u4e14\u4ece\u660e\u5929\u8d77\u505aTo do list,\u63d0\u9ad8\u81ea\u5df1\u7684\u6548\u7387,\u5e0c\u671b\u80fd\u591f\u5728\u671f\u672b\u626d\u8f6c\u6218\u5c40\u5427.</p> <p>\u4e00\u76f4\u90fd\u60f3\u6210\u4e3a\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u4eba.\u62e5\u6709\u5065\u7855\u7684\u8eab\u4f53,\u5065\u5168\u7684\u4eba\u683c,\u667a\u6167\u7684\u5927\u8111?o.O </p> <p>\u4e5f\u60f3\u6210\u4e3a\u90a3\u79cd\u8ba9\u4eba\u76f8\u5904\u8d77\u6765\u8212\u670d\u7684\u4eba......</p> <p>\u8ddd\u79bb\u9ad8\u8003\u4e00\u5e74\u8fc7\u53bb\u4e86,\u6211\u6709\u6210\u4e3a\u81ea\u5df1\u60f3\u8981\u6210\u4e3a\u7684\u6a21\u6837\u5417?</p> <p>\u54c8\u54c8,\u663e\u7136\u6ca1\u6709.\u53ef\u80fd\u524d\u4e9b\u9635\u5b50\u7684\u5815\u843d,\u4e5f\u662f\u4e0d\u60f3\u9762\u5bf9\u8fd9\u4e2a\u4e8b\u5b9e\u5427.</p> <p>\u4e16\u754c\u7eb7\u7e41\u590d\u6742,\u6211\u4eec\u65e0\u6cd5\u5de6\u53f3\u4ed6\u4eba,\u505a\u597d\u81ea\u5df1,\u867d\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\u5e76\u6ca1\u6709\u6210\u4e3a\u60f3\u8981\u7684\u6a21\u6837,\u4f46\u662f\u5728\u8fd9\u4e2a\u5b66\u671f\u7684\u9ad8\u538b\u4e0b\u66f4\u52a0\u660e\u786e\u4e86,\u6211\u60f3\u8981\u4ec0\u4e48,\u4ee5\u53ca\u8fbe\u6210\u76ee\u6807\u7684\u9014\u5f84.</p> <p>\u6240\u4ee5,\u5728\u6700\u540e\u7684\u8fd9\u4e9b\u5929\u91cc,\u52aa\u529b\u5427,\u4e89\u53d6\u5728\u671f\u672b\u91cc\u53d6\u5f97\u4e00\u4e2a\u4e0d\u9519\u7684\u6210\u7ee9.!</p> <p>2024/05/21</p> <p>\u60f3\u8981\u5f00\u59cb\u67d0\u4ef6\u4e8b,\u5c31\u8981\u7acb\u9a6c\u4ece\u5f53\u4e0b\u505a\u8d77,\u800c\u4e0d\u662f\u8bf4\u4eca\u5929\u653e\u7eb5\u7136\u540e\u518d\u575a\u6301!</p> <p>2024/03/22</p> <p>\u5fd8\u4e86\u56e0\u4e3a\u4ec0\u4e48,\u9ad8\u4e2d\u65f6\u6709\u4e00\u9635\u5b50\u4e00\u76f4\u5ff5\u53e8\u7740\u8981\u9ed1\u5316.</p> <p>\u521a\u521a\u53c8\u5ffd\u7136\u60c5\u7eea\u53d8\u5f97\u8fc7\u4e8e\u4f4e\u843d\u4e14\u7a33\u5b9a,\u5ffd\u7136\u53c8\u5f00\u59cb\u5ff5\u53e8\u7740\u9ed1\u5316\u4e86.</p> <p>\u56de\u5bbf\u820d\u65f6\u5ffd\u7136\u4e00\u4e0b\u60f3\u660e\u767d\u4e86,\u539f\u6765\u662f\u60f3\u8981\u5728\u771f\u771f\u6b63\u6b63\u7684\u81ea\u5f8b\u524d,\u518d\u5f7b\u5e95\u653e\u7eb5\u4e00\u6b21.</p> <p>\u6211\u54e5\u8bf4\u7684\u786e\u5b9e\u6ca1\u6bdb\u75c5,\u6709\u4e9b\u4eba\u7684\u4e00\u4e9b\u5c0f\u6bdb\u75c5,\u662f\u5f88\u96be\u6539\u6389\u7684.\u4ed6\u4eba\u5982\u6b64,\u6211\u4ea6\u7136.</p> <p>\u4eca\u591c\u4e00\u653e\u7eb5,\u4ece\u6b64\u9ed1\u5316\u4eba!</p> <p></p> <p>2024/03/15</p> <p>\u4f60\u662f\u600e\u4e48\u7231\u4e0a\u4e00\u4e2a\u4eba\u7684?</p> <p>\u56e0\u4e3a\u4ed6\u7684\u53e3\u6c34\u662f\u7518\u751c\u7684.</p> <p>\u5bf9,\u6ca1\u9519,\u6211\u53c8\u7231\u4e0a\u6211\u81ea\u5df1\u4e86.\ud83d\ude0a</p> <p>2024/03/05</p> <p>\u7231\u81ea\u5df1\u624d\u662f\u7ec8\u751f\u6d6a\u6f2b\u7684\u5f00\u59cb</p> <p>\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u5f88\u5b9d\u8d35\u7684,\u600e\u4e48\u53bb\u82b1\u8d39\u662f\u5f88\u91cd\u8981\u7684</p> <p>\u8ba4\u771f\u7684\u53bb\u5b66\u4e60,\u5c3d\u5174\u7684\u53bb\u5a31\u4e50,\u8010\u5fc3\u6e29\u67d4\u5bf9\u5f85\u81ea\u5df1\u5173\u5fc3\u7684\u4eba.</p> <p>\u51cf\u5c11\u65f6\u95f4\u4e0e\u7cbe\u529b\u82b1\u5728\u4e0d\u5fc5\u8981\u7684\u4eba,\u7269,\u4e8b\u4e0a</p> <p>\u662f\u8fd9\u6837\u7684,\u52a0\u6cb9!</p> <p>\u6e34\u671b\u5065\u7855\u7684\u8eab\u4f53,\u667a\u6167\u7684\u5927\u8111,\u5145\u76c8\u7684\u7075\u9b42</p> <p>\u6240\u4ee5,\u671f\u5f85\u5427!\u6211\u4f1a\u52a0\u6cb9\u4e86!</p> <p>2024/03/01</p> <p>\u8017\u65f61h30min\u7ec8\u4e8e\u8c03\u6574\u597d\u6211\u7684\u7f51\u7ad9\uff0c\u5fc3\u7d2f...\u5f88\u597d\u7684\u953b\u70bc\u7684git\u4e0e\u547d\u4ee4\u884c\u7684\u4f7f\u7528... - [x] \u5feb\u6377\u952e</p> <p>\u6b21\u65e5\u56de\u987e :</p> <ul> <li>Vscode:</li> <li>vscode\u521b\u5efa\u65b0\u7a97\u53e3 ctrl + shift + n</li> <li>F11 \u5168\u5c4f\uff0c\u786e\u4fdd\u4e13\u6ce8</li> <li>Ctrl + K Z \u5723\u7985\u6a21\u5f0f</li> <li>Ctrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</li> <li>Alt + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt + 9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>\u5feb\u901f\u56de\u5230\u9876\u90e8 \uff1a ctrl + home,\u5feb\u901f\u56de\u5230\u5e95\u90e8 : ctrl + end</li> <li>Ctrl + \u53f3\u7bad\u5934,\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 </li> <li>Ctrl + M ,\u6570\u5b66\u516c\u5f0f</li> <li>Ctrl + PgUp\uff0c\u5de6\u79fb Ctrl + PgDn \u53f3\u79fb</li> <li>Window:</li> <li>window+H \u7b14\u8bb0\u672c\u7684\u8bed\u97f3\u8f93\u5165</li> <li>window+V \u526a\u8d34\u677f</li> <li>window + 1,2,3 \u5207\u6362\u5230\u5bf9\u5e94\u7684\u5e94\u7528\u754c\u9762</li> <li>Edge:</li> <li>Ctrl + 1~8 \u5207\u6362\u6807\u7b7e\u9875,Alt+9 \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li>Ctrl + Tab \u5207\u6362\u5230\u4e0b\u4e00\u6807\u7b7e\u9875</li> <li>Ctrl + T \u521b\u5efa\u65b0\u6807\u7b7e\u9875\uff0cCtrl + W \u5173\u95ed\u8be5\u6807\u7b7e\u9875</li> </ul> <p>2024/02/25</p> <p>\u4eca\u65e5\u76ee\u6807: 1. \u7269\u7406\u5b66PPT\u9884\u4e60 2. \u7ebf\u4ee3\u9884\u4e60 3. \u6570\u5206cjhppt\u9884\u4e60  4. \u65c5\u6e38\u65e5\u8bb0\u8865\u5199</p> <p>2024/02/21</p> <p>\u4eca\u65e5\u6bd4\u8f83\u81ea\u5f8b\uff0c\u5728\u56fe\u4e66\u9986\u5b66\u4e86\u5f88\u4e45\u3002 \u6253\u7b97\u6309\u7167\u56fe\u7075\u5b66\u4e60\u6307\u5357\u628a\u6b20\u7684\u7ebf\u4ee3\u518d\u91cd\u65b0\u590d\u4e60\u4e0b\uff0c\u8ddf\u7740\u5218\u5eb7\u751f\u8001\u5e08\u8d70\uff0c\u8fd8\u662f\u5bb3\u6015\u5b66\u4e0d\u597d\u5bfc\u81f4\u4f4e\u5b66\u5206\u7684\u3002\u4e5f\u770b\u4e86\u4e00\u8282\u79bb\u6563\u7684PPT</p> <p>\u665a\u4e0a\u6210\u529f\u5b8c\u6210\u953b\u70bc\u4efb\u52a1\uff0c\u5206\u4eab\u4e00\u4e2a\u89c6\u9891,\u611f\u89c9\u633a\u597d\u770b\u7684\u3002</p> <p>\u4e00\u4e2a\u7b97\u662f\u5173\u4e8e\u7684\u7a7f\u642d\u7684\u5427</p> <p>\u5047\u671f\u5728\u5bb6\u7ed9\u522b\u4eba\u8f85\u5bfc\uff0c\u53d1\u73b0\u81ea\u5df1\u5728\u5927\u5b66\u4e2d\u4e5f\u72af\u7740\u540c\u6837\u7684\u95ee\u9898\u3002</p> <p>\u5728\u8fc7\u5f80\u7684\u6559\u80b2\u4e2d\u7f3a\u4e4f\u80fd\u529b\u7684\u57f9\u517b\u5bfc\u81f4\u4e0a\u5b66\u671f\u662f\u9ad8\u6295\u5165\u4f4e\u56de\u62a5\u3002\u4e0b\u5b66\u671f\u5c31\u52e4\u5feb\u4e00\u70b9\uff0c\u591a\u6295\u5165\u4e00\u70b9\u65f6\u95f4\u53bb\u601d\u8003\u603b\u7ed3\uff0c\u5e0c\u671b\u80fd\u4e0d\u65ad\u5c06\u81ea\u5df1\u7684\u5b66\u4e60\u80fd\u529b\u63d0\u5347\u5230\u50cf\u5144\u5f1f\u4eec\u90a3\u6837\u7684\u6c34\u5e73\u3002 \u4e0b\u5b66\u671f\u5c31\u8981\u597d\u597d\u5b66\u4e86\uff0c\u5e0c\u671b\u80fd\u5f04\u4e2a\u4fdd\u7814\u5427\u3002</p> <p>\u7ec8\u4e8e\u5927\u6982\u628a\u6bcd\u6821\u91cc\u5b66\u5f1f\u5b66\u59b9\u7684\u95ee\u9898\u56de\u7b54\u5b8c\u4e86\u3002\u4e5f\u66f4\u89c9\u5f97\u63d0\u95ee\u7684\u667a\u6167\u6709\u591a\u91cd\u8981\u3002</p> <p>\u5bf9\u4e8e\u4e2a\u4eba\u800c\u8a00\uff0c\u4f60\u63d0\u4e00\u4e2a\u95ee\u9898\u4f3c\u4e4e\u4e0d\u6d6a\u8d39\u5bf9\u65b9\u592a\u591a\u65f6\u95f4\uff0c\u4f46\u662f\u5bf9\u4e8e\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u4ed6\u662f\u8981\u56de\u590d200\u591a\u4e2a\u4eba\u7684\uff0c\u5e76\u4e14\u672c\u6765\u5c31\u662f\u65e0\u4e49\u52a1\u7684\uff0c\u53ea\u662f\u5e0c\u671b\u6bcd\u6821\u7684\u6210\u7ee9\u53ef\u4ee5\u66f4\u597d\u800c\u5df2\u3002</p> <p>\u5e0c\u671b\u5927\u5bb6\u4ee5\u540e\u5171\u52c9\uff1a</p> <ol> <li>\u63d0\u95ee\u95ee\u9898\u65f6\u5c3d\u53ef\u80fd\u8be6\u7ec6\uff0c\u8bf4\u6e05\u95ee\u9898\u80cc\u666f\uff08\u5e74\u7ea7or\u5fc3\u6001or\u60f3\u6cd5\uff09\uff0c\u8bf4\u6e05\u95ee\u9898\u5173\u952e\uff0c\u5982\u679c\u80fd\u60f3\u660e\u767d\u81ea\u5df1\u60f3\u8981\u5f97\u5230\u7684\u56de\u590d\uff0c\u90a3\u4e5f\u8bf7\u8868\u8fbe\u51fa\u6765\u3002</li> <li>\u8bf7\u5728\u8be2\u95ee\u65f6\u66f4\u6709\u793c\u8c8c\u4e00\u4e9b</li> <li>\u8bf7\u8ba4\u771f\u542c\u5f53\u65f6\u6f14\u8bb2\u65f6\u8bf4\u7684\u5440\uff0c\u597d\u591a\u95ee\u9898\u90fd\u662f\u95ee\u7684PPT\u4e0a\u6709\u7684\uff0c\u6211\u662f\u771f\u7684\u4e0d\u60f3\u56de\u590d\uff01</li> </ol> <p>\u5728\u8fd9\u91cc\u653e\u4e00\u4e2a\u53cd\u4f8b\uff01  \u52a0\u6cb9\u5427\uff01</p> <p>2024/02/20</p> <p>\u6700\u8d77\u7801\u4e0b\u5348\u662f\u5728\u56fe\u4e66\u9986\u5b66\u4e86\u4f1a\u513f\u79bb\u6563\uff0c\u667a\u4e91\u8bfe\u5802\u62bd\u98ce\u4e86\uff0c\u73b0\u5728\u770b\u4e0d\u4e86\u4e86\uff0c\u545c\u545c\u545c\u3002(15\uff1a29)</p> <p>\u770b\u4e86\u4e24\u8282\u8bfe\u7684\u79bb\u6563\u6570\u5b66\uff0c\u52a0\u6cb9\u5427\u3002</p> <p>\u665a\u4e0a\u53bb\u5403\u4e86\u81ea\u52a9\u5c0f\u706b\u9505\uff0c\u4e5f\u7b97\u662f\u5403\u723d\u5566~</p> <p>2024/02/19</p> <p>\u4eca\u5929\u8fc7\u7684\u6bd4\u8f83\u6109\u60a6\uff0c\u867d\u7136\u8eab\u4f53\u8fd8\u662f\u5f88\u7d2f</p> <p>\u770b\u4e86\u98de\u9a70\u4eba\u751f2\uff0c\u4e5f\u5403\u4e86\u4e0a\u6d77\u5973\u6559\u5e08\u51fa\u8f68\u7684\u74dc</p> <p>\u6709\u4e9b\u542f\u53d1\u5427</p> <p>\u9996\u5148\u662f\u63d0\u9ad8\u900f\u660e\u5ea6\uff0c\u624d\u80fd\u4fdd\u8bc1\u6700\u5927\u9650\u5ea6\u5730\u516c\u5e73\uff0c\u672a\u6765\u6211\u4e5f\u4f1a\u9010\u6b65\u63d0\u9ad8\u5bf9\u6211\u81ea\u8eab\u7684\u900f\u660e\u5ea6\uff0c\u6765\u4e0d\u65ad\u7ea6\u675f\u81ea\u5df1\u7684\u4e0d\u6d01\u884c\u4e3a\u3002</p> <p>\u800c\u662f\u5173\u4e8e\u5b89\u5206\u4e0e\u523a\u6fc0\u7684\u4e00\u4e9b\u601d\u8003\ud83e\udd14\uff0c\u4f3c\u4e4e\u5f53\u505a\u4e00\u4e9b\u4e8b\u4f1a\u6709\u80cc\u5fb7\u611f\u65f6\uff0c\u4f1a\u66f4\u8ba9\u4eba\u60f3\u53bb\u505a\uff0c\u201c\u627e\u523a\u6fc0\u201d\u8ba9\u4eba\u6b32\u7f62\u4e0d\u80fd\uff0c\u672c\u4eba\u6709\u65f6\u4e5f\u4f1a\u6709\u8fc7\u8fd9\u79cd\u60f3\u6cd5\u548c\u884c\u4e3a\uff0c\u4e0d\u77e5\u5bf9\u4e8e\u8fd9\u79cd\u5947\u602a\u7684\u601d\u60f3\u4e0e\u60c5\u7eea\uff0c\u6709\u4eba\u6709\u597d\u7684\u5e94\u5bf9\u7b56\u7565\u5417\uff1f</p> <p>2024/02/18</p> <p>\u975e\u5e38\u7d2f\u7684\u4e00\u5929\uff0c\u7531\u4e8e\u6628\u665a\u71ac\u591c\u800c\u8170\u9178\u80cc\u75db</p> <p>\u5954\u6ce2\u4e86\u534a\u5929\uff0c\u665a\u4e0a\u786e\u5b9e\u662f\u5341\u5206\u75b2\u60eb</p> <p>\u611f\u89c9\u53e4\u4eba\u6c34\u571f\u4e0d\u670d\u4e0d\u662f\u56e0\u4e3a\u4e0d\u9002\u5e94\u65b0\u73af\u5883\uff0c\u800c\u662f\u5728\u5954\u53bb\u65b0\u73af\u5883\u7684\u8def\u9014\u4e2d\u56e0\u4e3a\u52b3\u7d2f\u8fc7\u5ea6\u800c\u5bfc\u81f4\u8eab\u4f53\u4e0d\u8212\u670d\u3002 \uff08\u5176\u5b9e\u8fd9\u662f20\u53f7\u7684\u56de\u5fc6...\uff09</p> <p>2024/02/17</p> <p>\u6628\u65e5\u505a\u4e86\u5927\u4e8b\uff0c\u770b\u5b8c\u4e86\u4e0a\u5b66\u671f\u7684\u8bfe\u672c\uff0c\u5173\u4e8e\u535a\u5f08\u8bba\u7684\uff0c\u5bf9\u6211\u6709\u5f88\u5927\u7684\u9898\u578b</p> <p>\u6211\u53d1\u73b0\u73b0\u5728\u7684\u6211\u5df2\u7ecf\u4e0d\u559c\u6b22\u770b\u5c0f\u8bf4\uff0c\u800c\u662f\u559c\u6b22\u770b\u8fd9\u4e9b\u4e1c\u897f\u3002\u53ef\u80fd\u66f4\u52a0\u529f\u5229\u4e86\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u6d45\u663e\u7684\u8ba4\u77e5\u91cc\u4f3c\u4e4e\u53ea\u6709\u201c\u529f\u5229\u201d\u4e0e\u201c\u975e\u529f\u5229\u201d</p> <p>\u5e76\u4e14\u53d7\u8fd9\u672c\u4e66\u542f\u53d1\uff0c\u5f7b\u5e95\u89e3\u51b3\u4e86\u4e00\u4e9b\u957f\u4e45\u7684\uff0c\u68d8\u624b\u7684\u95ee\u9898\u3002</p> <p>\u4e5f\u7b97\u662f\u4e00\u79cd\u5f7b\u5934\u5f7b\u5c3e\u7684\u6539\u53d8\uff0c\u662f\u4e00\u79cd\u9636\u6bb5\u6027\u7684\u6210\u719f\u3002</p> <p>\u5e0c\u671b\u6bcf\u4e00\u6bb5\u5173\u7cfb\u90fd\u662f\u6b63\u548c\u535a\u5f08\uff0c\u6211\u7684\u5b58\u5728\u53ef\u4ee5\u7ed9\u5927\u90e8\u5206\u4eba\u5e26\u6765\u6109\u60a6</p> <p>\u6bcf\u6bcf\u60f3\u8ba4\u771f\u5199\uff0c\u5206\u6790\u81ea\u5df1\uff0c\u4fbf\u53c8\u6ca1\u6709\u4ec0\u4e48\u60f3\u6cd5\u4e86\uff0c\u54ce\uff0c\u65e0\u8bed\u3002</p> <p>\u4eca\u5929\u4e0a\u5348\u5bb6\u6559\u5b8c\uff0c\u4e5f\u6536\u83b7\u4e86\u4e00\u4e2a\u5927\u60ca\u559c\uff0c\u5b69\u5b50\u5bb6\u957f\u7ed9\u4e86\u6211\u4e00\u5957\u8863\u670d\uff0c\u786e\u5b9e\u662f\u5341\u5206\u7684\u6109\u60a6\u3002</p> <p>\u4e0b\u5348\u5728\u8d76\u5236\u56de\u5b66\u6821\u5ba3\u8bb2\u7684ppt\uff0c\u975e\u5e38\u7684\u5fd9\uff0c\u665a\u4e0a\u5ba3\u8bb2\uff0c\u73b0\u5728\u5fc3\u91cc\u5df2\u7ecf\u5b8c\u5168\u4e0d\u7d27\u5f20\u4e86\uff0c\ud83e\udd2d~</p> <p>\u660e\u5929\u5c31\u8981\u53bb\u5b66\u6821\u5566\uff0c\u5f00\u5fc3~</p> <p>2024/02/16</p> <p>\u4eca\u665a\u6709\u6025\u4e8b\uff0c\u9700\u8d76\u5236\u56de\u6821\u5ba3\u8bb2\u7684PPT</p> <p>\u660e\u665a\u518d\u5199\u4e2a\u957f\u65e5\u8bb0\u5566~</p> <p>2024/02/14</p> <p>\u4eca\u65e5\u7565\u6709\u8fdb\u6b65</p> <p>\u4e0a\u5348\u4f9d\u65e7\u5bb6\u6559</p> <p>\u4e0b\u5348\u770b\u4e8640\u9875\u535a\u5f08\u8bba\uff0c\u665a\u4e0a\u53c8\u7ec3\u4e86\u597d\u4e45\u597d\u4e45\u7684\u5409\u4ed6\u3002</p> <p>\u4e0d\u597d\u610f\u601d\u653e\u51fa\u6765\u5f55\u7684\u97f3\u9891\u548c\u89c6\u9891\uff0c\u5c31\u653e\u4e2a\u968f\u4fbf\u62cd\u7684\u81ea\u62cd\u5427~</p> <p>\u5409\u4ed6\u7ec3\u5b8c\u5927\u7ea6\u662f22\uff1a00\uff0c\u5fc3\u60c5\u5f88\u6109\u60a6\uff0c\u9042\u6253\u5f00\u4e86LOL\uff0c\u64ad\u653e\u4e86\u5468\u8463\u7684\u97f3\u4e50</p> <p>\u8fd9\u4e00\u6b21\u73a9\u6e38\u620f\u662f\u771f\u7684\u5f88\u5f00\u5fc3\uff0c\u5239\u90a3\u95f4\u4f3c\u4e4e\u627e\u5230\u4e86\u7ae5\u5e74\u7684\u611f\u89c9</p> <p>\u539f\u6765\u7535\u5b50ed\u662f\u56e0\u4e3a\u6ca1\u6709\u8fb9\u6253\u6e38\u620f\u8fb9\u542c\u6b4c\ud83d\ude0b</p> <p>\u552f\u4e00\u9057\u61be\u7684\u5c31\u662f\u5fd8\u8bb0\u953b\u70bc\u4e86\uff0c\u4f46\u603b\u5f52\u6765\u8bf4\u8fd8\u662f\u5341\u5206\u5f00\u5fc3\u7684</p> <p>\u9664\u4e86\u6700\u540e\u665a\u4e0a\u4e0a\u5e8a\u540e\u804a\u5929\uff0c\u770b\u89c6\u9891\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5230\u4e86\u51cc\u6668\u4e00\u70b9\uff0c\u500d\u611f\u4f24\u5fc3\ud83d\ude2d</p> <p></p> <p>2024/02/12</p> <p>\u8fd1\u4e24\u65e5\u75af\u72c2\u73a9\u800d</p> <p>\u73a9\u723d\u4e86\ud83d\ude2d</p> <p>\u660e\u5929\u5f00\u59cb\u7ee7\u7eed\u52aa\u529b\u4e86\uff01</p> <p>2024/02/10</p> <p>\u5199\u5b8c\u4e86\u5e74\u7ec8\u603b\u7ed3~</p> <p>\u770b\u4e86\u534a\u8282\u8bfe\u7684CS61A</p> <p>\u54ce\u5440\ud83d\ude2d\uff0c\u6211\u7684CS61A\u597d\u50cf\u5b66\u4e0d\u5b8c\u4e86\uff0c\u660e\u5929\u560e\u560e\u5b66\uff01</p> <p>2024/02/07</p> <p>\u4e0a\u5348\u8fd8\u662f\u8001\u6837\u5b50\uff0c\u4e0b\u5348\u5e26\u7740\u7237\u7237\u51fa\u53bb\u529e\u4e86\u4e9b\u8bb8\u6742\u4e8b\uff0c5\u70b9\u624d\u56de\u6765\u3002</p> <p>\u56de\u6765\u8def\u4e0a\u4e70\u4e86\u4e00\u888b\u5f88\u597d\u5403\u7684\u4e1c\u897f\uff0c\u5e94\u8be5\u53eb\u9ebb\u7cd6\uff1f\uff08\u6dd8\u5b9d\u4e0a\u641c\u5230\u4e86\u662f\uff1a\u8001\u5e08\u835e\u9ea6\u9165\u7279\u4ea7\u4e09\u89d2\u9165\u7ae5\u5e74\u7684\u5473\u9053\u7279\u4ea7\u85d5\u7c89\u9165\uff09</p> <p>\u665a\u4e0a\u561b\uff0c\u4eca\u5929play\u4e86\u7ea61h30min\uff0c\u803d\u6401\u4e86\u770b\u56de\u653e\u548c\u7ec3\u5409\u4ed6</p> <p>\u55ef\uff0c\u4ee5\u5f80\u662f\u628a\u6e38\u620f\u5378\u8f7d\u6765\u9694\u7edd\u8bf1\u60d1\uff0c\u73b0\u5728\u6311\u6218\u6311\u6218\u81ea\u5df1\uff0c\u770b\u770b\u6e38\u620f\u5c31\u5728\u7535\u8111\u4e0a\uff0c\u6211\u80fd\u4e0d\u80fd\u7981\u5f97\u4f4f\uff01\ud83e\udd14</p> <p>2024/02/06</p> <p>\u4eca\u65e5\u5f88\u81ea\u5f8b\uff1a</p> <p>\u4e0a\u5348\u5bb6\u65593h</p> <p>\u4e2d\u5348\u53bb\u5403\u4e86\u5bb6\u4e61\u7f8e\u98df\uff1a\u9978\u9979(\u2579\u06a1\u2579 )</p> <p>\u665a\u4e0a\u5b8c\u6210\u4e86CS61A\u7684lab08\uff0c\u5e76\u4e14\u5f39\u5409\u4ed6\u5531\u6b4c\u5a31\u4e50\u4e86\u7ea61h</p> <p>\u54e5\u54e5\u5531\u6b4c\u786e\u5b9e\u5f88\u597d\u542c\uff0c\u4ee5\u540e\u8981\u51cf\u5c11\u7ea2\u8b66\u7b49\u89c6\u9891\u65f6\u95f4\uff0c\u591a\u770b\u770b\u6b4c\u5531\u827a\u672f\u7684\u56de\u653e</p> <p>\u5e78\u798f\u6ee1\u8db3\u7684\u4e00\u5929\u5427</p> <p>\u660e\u5929\u63d0\u9ad8\u6548\u7387\uff01</p>"},{"location":"Diary/reflection/","title":"Reflection","text":"<p>\u8fd1\u4e00\u5468\u6765,\u5728\u6e38\u620f\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u5927\u7ea6\u4e3a75h,\u76f8\u5f53\u4e8e\u6bcf\u5929\u73a9\u4e8610h.\u8fd9\u662f\u5b8c\u5168\u65e0\u6cd5\u63a5\u53d7\u7684.</p> <p>\u4ee5\u524d\u7684\u6211,\u5df2\u7ecf\u80fd\u591f\u505a\u5230\u5728\u6ca1\u6709\u8bf1\u60d1\u7684\u60c5\u51b5\u4e0b(\u5378\u8f7d\u6e38\u620f)\u53bb\u4e13\u6ce8\u4e8e\u5b66\u4e60,\u953b\u70bc.</p> <p>\u800c\u73b0\u5728,\u6211\u66f4\u60f3\u53bb\u6311\u6218\u4e00\u4e0b\u5728\u6709\u8bf1\u60d1\u7684\u60c5\u51b5\u4e0b(\u7535\u8111\u4e0a\u6709\u6e38\u620f)\u53bb\u4e13\u6ce8\u4e8e\u5b66\u4e60.\u663e\u7136,\u5728\u7b2c\u4e00\u5468\u4e2d,\u6211\u5931\u8d25\u4e86.</p> <p>\u6e38\u620f\u786e\u5b9e\u662f\u4e00\u95e8\u827a\u672f,\u8fd1\u671f\u73a9\u7684\u51e0\u6b3e\u6e38\u620f\u4e5f\u90fd\u975e\u5e38\u68d2.\u4f46\u65e2\u7136\u4ed6\u662f\u4e00\u95e8\u827a\u672f,\u90a3\u4e48\u5c31\u4e0d\u80fd\u6709\u7740\u90a3\u79cd\u8d2a\u5a6a\u7684\u60f3\u4e00\u4e0b\u5b50\u5c31\u73a9\u5b8c\u7684\u5fc3\u6001.\u5e94\u8be5\u53bb\u4eab\u53d7\u6e38\u620f,\u4f5c\u4e3a\u5bf9\u81ea\u5df1\u597d\u597d\u8fbe\u6210\u6bcf\u4e00\u9879\u76ee\u6807\u540e\u7684\u5956\u52b1.</p> <p>\u6b64\u5916,\u4e0d\u5e94\u8be5\u5728\u6bcf\u6b21\u4efb\u52a1\u5f00\u59cb\u524d\u6253\u5f00\u6e38\u620f,\u8fd9\u662f\u975e\u5e38\u9519\u8bef\u7684\u51b3\u5b9a.</p> <p>\u7efc\u4e0a,\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u80fd\u591f\u5728\u8bf1\u60d1\u9762\u524d\u81ea\u5f8b\u7684\u76ee\u6807,\u505a\u51fa\u5982\u4e0b\u89c4\u5b9a:</p> <ol> <li>\u6bcf\u65e5\u6e38\u620f\u628a\u6570\u4e0d\u8d85\u8fc7\u4e24\u628a(\u6216\u65f6\u957f\u4e0d\u8d85\u8fc71h)</li> <li>\u5982\u82e5\u5f53\u5929\u4efb\u52a1\u5b8c\u6210\u826f\u597d,\u5219\u53ef\u52a0\u4e00\u628a(\u6216\u65f6\u957f\u5ef6\u957f30min)</li> <li>\u6bcf\u65e5\u81f3\u5c11\u8981\u6709\u5145\u8db3\u7684\u65f6\u95f4\u53bb\u7ec3\u4e60\u5409\u4ed630min,\u6216\u5065\u8eab\u624d\u53ef\u8fdb\u884c\u6e38\u620f</li> <li>11\u70b9\u540e\u7981\u6b62\u73a9\u6e38\u620f</li> <li>\u4e25\u7981\u5728\u5404\u9879\u4efb\u52a1\u5f00\u59cb\u524d\u4ee5\u4f11\u606f\u540d\u4e49play</li> </ol> <p>\u52a0\u6cb9,\u751f\u6548\u65e5\u671f:2024/4/20</p>"},{"location":"Diary/video/","title":"\u6211\u770b\u7684\u5f71\u5267","text":"<p>Abstract</p> <p>\u5176\u5b9e\u6211\u770b\u7684\u5f88\u5c11\uff0c\u56e0\u4e3a\u5c11\uff0c\u6240\u4ee5\u65b9\u4fbf\u8bb0\u5f55\uff0c(\u25cf\u02c7\u2200\u02c7\u25cf)</p> <p>2023/12/2 </p> <p>\u4e0d\u77e5\u4e0d\u89c9\uff0c\u770b\u300a\u6597\u7f57\u5927\u9646\u300b\u5df2\u6709\u516d\u5e74\u4e4b\u4f59\uff0c\u8fd8\u8bb0\u5f97\u7ed3\u5c40\u6070\u597d\u8fd8\u662f\u5728\u9ad8\u8003\u524d\u51e0\u65e5\uff0c\u5f53\u65f6\u7684\u6211\u8fd8\u5728\u4e3a\u662f\u5426\u5728\u8003\u524d\u770b\u5b83\u800c\u5206\u5fc3\u3002\u5f39\u6307\u4e00\u6325\u95f4\uff0c\u4eca\u65e5\u518d\u76f8\u9022\uff0c\u6211\u5df2\u5165\u5927\u5b66\u3002</p> <p>\u4e16\u754c\u7eb7\u7eb7\u6270\u6270\uff0c\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u8fc7\u53bb\u6fc0\u52b1\u6211\u4eec\uff0c\u611f\u52a8\u6211\u4eec\u7684\uff0c\u4e5f\u4f1a\u968f\u4e4b\u6de1\u53bb\u3002\u6211\u4e0d\u5e0c\u671b\u5fd8\u6389\u5b83\u4eec\uff0c\u4e22\u5931\u4e86\u90a3\u4e9b\u6211\u5728\u8fd9\u4e9b\u7ecf\u5386\u4e2d\u83b7\u5f97\u7684\u7f8e\u597d\u76ee\u6807\uff0c\u7f8e\u597d\u52a8\u529b\uff0c\u7f8e\u597d\u54c1\u5fb7\u3002\u6545\u7279\u5199\u6b64\u7bc7\uff0c\u56de\u5fc6\u66fe\u7ed9\u6211\u5e26\u6765\u65e0\u6570\u6b22\u6b23\u4e0e\u559c\u60a6\u7684\u4e8b\u7269\u3002 \u6628\u5929\u662f\u4eca\u5929\u7684\u5f71\u5b50\uff0c\u4eca\u5929\u662f\u660e\u5929\u7684\u7ef3\u5b50--57x</p>"},{"location":"Diary/video/#_1","title":"\u300a\u6597\u7f57\u5927\u9646\u300b","text":"<p>\u8ba9\u4eba\u4e0d\u7981\u656c\u4f69\u7684\u662f\uff0c\u660e\u660e\u5df2\u7ecf\u7ed3\u5c40\u7684\u52a8\u6f2b\uff0c\u5c45\u7136\u8fd8\u4f1a\u91cd\u65b0\u526a\u8f91\u589e\u6dfb\u3002\u5728\u65b0\u7248\u4e2d\uff0c\u5267\u60c5\u66f4\u52a0\u4e30\u6ee1\uff0c\u914d\u4e50\u4e5f\u52a1\u5fc5\u5951\u5408\u3002\u867d\u7136\u5df2\u7ecf\u770b\u8fc7\u4e00\u904d\u539f\u7ed3\u5c40\uff0c\u518d\u770b\uff0c\u4f9d\u7136\u4f1a\u6c89\u6d78\u5176\u4e2d\uff0c\u88ab\u8c03\u52a8\u7740\u60c5\u7eea\uff0c\u7275\u5f15\u7740\u6211\u7684\u601d\u7eea\u3002 \u8bb0\u5f97\u8fd9\u90e8\u52a8\u6f2b\u5f00\u5c40\u65f6\u633a\u5e7c\u7a1a\u7684\uff0c\u4e24\u4e2a\u5a03\u5a03\u8bf4\u7740\u5929\u771f\u5e7c\u7a1a\u7684\u8bdd\uff0c\u90a3\u79cd\u5982\u679c\u662f\u4ece\u73b0\u5b9e\u4e2d\u8bf4\u51fa\u6765\u4f1a\u663e\u5f97\u975e\u5e38\u6cb9\u817b\u7684\u8bdd\u3002\u5f53\u65f6\u6211\u600e\u4e48\u5fcd\u7740\u770b\u5b8c\u7684\uff0c\u6211\u5f88\u96be\u60f3\u8c61\u4e86\u3002\u8bf4\u7740\u6700\u5947\u602a\u7684\u8bdd\uff0c\u4e0d\u5207\u5b9e\u9645\u7684\u8bdd\uff0c\u5374\u53c8\u5728\u6545\u4e8b\u4e4b\u4e2d\uff0c\u4ece\u5934\u5230\u5c3e\uff0c\u4e00\u6b21\u6b21\u5151\u73b0\uff0c\u4ece\u672a\u5fd8\u8bb0\uff0c\u8fd9\u662f\u73cd\u8d35\u7684\uff0c\u96be\u5f97\u7684\uff0c\u9b54\u5e7b\u7684\u3002 \u8fd8\u8bb0\u5f97\u770b\u5230\u9752\u5e74\u65f6\u671f\u7684\u5510\u4e09\u56e0\u529b\u91cf\u6709\u9650\u800c\u5bfc\u81f4\u5c0f\u821e\u732e\u796d\u7684\u7247\u6bb5\u65f6\uff0c\u6211\u5c45\u7136\u4e5f\u54ed\u4e86\u3002\u5510\u4e09\u4fdd\u62a4\u81ea\u5df1\u6240\u7231\u4e4b\u4eba\u4e0d\u53d7\u4f24\u5bb3\u800c\u4e00\u79cd\u62fc\u547d\u52aa\u529b\u7684\u6837\u5b50\uff0c\u4e5f\u6df1\u6df1\u5f71\u54cd\u7740\u6211\uff0c\u5370\u8c61\u6df1\u523b\uff0c\u6211\u5f53\u65f6\u5c45\u7136\u4e5f\u5728\u5fc3\u4e2d\u6697\u4e0b\u51b3\u5fc3\uff0c\u5c31\u50cf\u5510\u4e09\u4e00\u6837\u3002 \u8fd9\u662f\u4e00\u4e2a\u7eb5\u6b32\u7684\u65f6\u4ee3\u3002\u73b0\u5728\uff0c\u73b0\u5728\u7684\u6211\uff0c\u88f9\u631f\u4e8e\u6f6e\u6d41\u4e4b\u4e2d\uff0c\u4e5f\u63a8\u52a8\u7740\u5b83\u3002 \u5510\u4e09\u7ec8\u5176\u4e00\u751f\u7231\u7740\u5c0f\u821e\uff0c\u5e76\u4e3a\u4e4b\u62fc\u640f\uff0c\u800c\u5c0f\u821e\u4e5f\u4e0d\u79bb\u4e0d\u5f03\u3002\u4ed6\u4eec\u662f\u771f\u6b63\u7684\u878d\u4e3a\u4e86\u4e00\u4f53\u3002\u7eaf\u7231\u6218\u58eb\u75db\u54ed\u6d41\u6d95\u3002 \u5f53\u6211\u4eec\u5728\u5229\u76ca\u8003\u91cf\u65f6\uff0c\u5728\u6f5c\u5fc3\u7406\u4e2d\u5df2\u9ed8\u8ba4\u4f60\u5373\u662f\u6211\uff0c\u5728\u6211\u7684\u89c2\u5ff5\u4e2d\uff0c\u8fd9\u4fbf\u662f\u6211\u4e2d\u6709\u4f60\uff0c\u4f60\u4e2d\u6709\u6211\u5427\u3002 \u300a\u6597\u7f57\u5927\u9646\u300b\u786e\u5b9e\u662f\u4e00\u90e8\u597d\u7247\u4e86\uff0c\u6709\u5934\u6709\u5c3e\uff0c\u751a\u81f3\u6539\u5584\u539f\u672c\u7684\u7ed3\u5c40\uff0c\u8fd9\u5728\u6574\u4e2a\u56fd\u6f2b\u4e2d\u90fd\u662f\u53ef\u8d35\u7684\u3002\u66f4\u4f55\u51b5\uff0c\u5176\u4e2d\u7684\u51e0\u96c6\u4e5f\u5c5e\u5b9e\u662f\u6781\u54c1\u3002 \u5f3a\u70c8\u63a8\u8350\u8fd9\u4e2a\u52a8\u6f2b\u5427\uff0c\u8010\u7740\u5fc3\u770b\u5b8c\uff0c\u624d\u80fd\u4f53\u4f1a\u5230\u5b83\u7684\u9b45\u529b\u3002  \u5f53\u7136\u4e86\uff0c\u4e0d\u5bb9\u7f6e\u5599\uff0c\u94f6\u53d1\u5510\u4e09\u771f\u7684\u5e05\uff01\uff01\uff01 \u597d\u4e86\uff0c6\u5e74\u4e86\uff0c\u771f\u7684\u8981\u7ed3\u675f\u4e86\uff0c\u6211\u4e5f\u8981\u518d\u5ea6\u51fa\u53d1\u4e86~  </p>"},{"location":"Diary/video/#_2","title":"\u6d77\u6d3e\u751c\u5fc3","text":"<p>\u4eba\u751f\u7684\u7b2c\u4e00\u6b65\u5076\u50cf\u5267\uff0c\u4e5f\u662f\u552f\u4e00\u4e00\u90e8\uff01 \u66fe\u8ba4\u4e3a\uff0c\u60f3\u61c2\u6211\u7684\u4eba\u5e94\u5fc5\u987b\u770b\u7684\u5267\uff01 \u7231\u60c5\u89c2\u5efa\u7acb\u7684\u6839\u57fa\uff01 \u53ef\u6076\uff0c\u6240\u4ee5\u5230\u5e95\u6709\u6ca1\u6709\u54ea\u4f4d\u670b\u53cb\u770b\u8fc7\u54ce \u6211\u7231\u5b9d\u73e0\u59d0\uff01\u6211\u7231\u6797\u8fbe\u6d6a\uff01\u6211\u7231\u4e11\u4e0d\u62c9\u51e0\u9999\u83c7\u5934\uff01\u6211\u7231\u7c89\u7ea2\u987d\u76ae\u8c79\uff01 \u54d2\u6d6a<sub>\u54d2\u6d6a</sub>\u54d2\u6d6a~ \u8fd8\u6709\u54e6\uff0c\u5267\u60c5\u7684\u8bbe\u5b9a\u573a\u666f\u4e3a\u6d59\u6c5f\u5927\u5b66\uff08\u867d\u7136\u4e0d\u662f\u5728\u6d59\u6c5f\u5927\u5b66\u62cd\u7684\uff09\u547d\u8fd0\u5f04\u4eba\uff0c\u7f18\u5206\u8fd9\u4e1c\u897f\uff0c\u771f\u7684\u662f\u96be\u6599\u3002</p> <p>\u8d44\u6e90: \u5bc6\u7801\uff1a2p9p</p> <p>\u5f85\u65bd\u5de5\uff01</p>"},{"location":"Research/3D_Gaussian_Splatting/","title":"3D Gaussian Splatting","text":""},{"location":"Research/3D_Gaussian_Splatting/#read-method","title":"Read method","text":"<ol> <li>Collect list of pepers</li> <li>plot a list </li> <li>50~100 papers will be enough</li> </ol>"},{"location":"Research/3D_Gaussian_Splatting/#how-to-read","title":"How to read","text":"<ol> <li>Title, Abstract, Figure</li> <li>Introduction, Conclusion, important.</li> <li>Skip complex or incomprehension parts</li> <li>What did authors try to accomplish?  What were the key elements of the approach?  What can you use yourself? What other references do you want to follow up?</li> </ol>"},{"location":"cs/","title":"Index","text":"<p>Abstract</p> <p>\u8fd9\u662f\u5206\u4eab\u7b14\u8bb0\u7684\u5730\u65b9(\u2579\u06a1\u2579 )</p>"},{"location":"cs/Pynote/","title":"python\u7b14\u8bb0","text":""},{"location":"cs/Pynote/#object-oriented-programming","title":"Object-Oriented Programming","text":"<ul> <li>Instance attribute are found before class attributes <pre><code>class Account:\n    interest = 0.02 # class attribute\n    def __init__(self,account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self,amount):\n        self.balance += amount\n        return self.balance\n    def __add__(self,other): #\u81ea\u5b9a\u4e49\u52a0\u51cf\u6cd5\n        ...\n\n    __radd__ = __add__  # \u5b9e\u73b0\u4ea4\u6362\u5f8b\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#accessing-attributes","title":"Accessing Attributes:","text":"<ul> <li><code>getattr(tom_account,'balance')</code></li> <li><code>hsaattr(tom_account,'deposit')</code> \u6709\u5219True\uff0c\u65e0\u5219False</li> </ul>"},{"location":"cs/Pynote/#inheritance","title":"Inheritance:","text":"<pre><code>class &lt;name&gt;(&lt;base class&gt;):\n    &lt;suite&gt;\n</code></pre>"},{"location":"cs/Pynote/#property","title":"@property","text":"<pre><code>class Link:\n    empty = ()\n    def __init__(self,first,rest=empty):\n        self.first = first\n        self.rest = rest\n    @property\n    def second(self):\n        return self.rest.first\n\n    @second.setter\n    def second(self,value):\n        self.rest.first = value\ns = Link(3,Link(4,Link(5)))\n#\u5982\u679c\u65e0@property\ns.second()\n# 4\n#\u5982\u679c\u6709@property\ns.second\n# 4\ns.second = 6\ns.second\n# 6\n</code></pre>"},{"location":"cs/Pynote/#else","title":"Else:","text":""},{"location":"cs/Pynote/#memoization","title":"Memoization:","text":"<pre><code>def memo(f):\n    cache = {}\n    def memoized(n):\n        if n not in cache:\n            cache[n] = f(n)\n        return cache[n]\n    return memoized\n</code></pre>"},{"location":"cs/Pynote/#count","title":"Count:","text":"<pre><code>def count(f):\n    def counted(n):\n        counted.call_count += 1\n        return f(n)\n    counter.call_count = 0\n    return counted\n</code></pre>"},{"location":"cs/Pynote/#_1","title":"\u5185\u7f6e\u51fd\u6570\uff1a","text":""},{"location":"cs/Pynote/#iternext","title":"iter&amp;next","text":"<ul> <li>The order of items in a dictionary is the oreder in which they were added</li> <li>for \u4e5f\u5b9e\u9645\u4e0a\u7528\u7684iter\u4e0enext</li> <li>\u5728iter\u4e00\u4e2alist\u65f6\uff0c\u5982\u679c\u540c\u65f6\u6539\u53d8\u4e86list\u5185\u7684\u5143\u7d20\uff0c\u53ef\u80fd\u4e0d\u80fd\u6210\u529f\u904d\u5386list\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ef\u4ee5\u901a\u8fc7copy\u4e00\u4e2a\u65b0list\u6765\u89e3\u51b3\u3002 <pre><code>#List\ns = [3,4,5]\nt = iter(s)\nnext(t)\n# 3\nnext(t)\n# 4\n#Dic\nd = {'one':1,'two':2,'three':3}\nd['zero'] = 0\nk = iter(d.keys()) # or iter(d)\nnext(k)\nv = iter(d.valuse())\ni = iter(d.items())\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#mapfilter","title":"map&amp;filter:","text":"<ul> <li><code>map(func,iterable)</code>:Only when we ask for the next element is the function applied and the result computed <pre><code>bcd = ['b','c','d']\nm = map(lambda x : x.upper(),bcd)\nnext(m)\n# 'B'\nnext(m)\n# 'C'\n</code></pre></li> <li><code>filter(func,iterable)</code>: goon until True <pre><code>def double(x):\n    print( x '-&gt;' 2*x)\n    return 2*x\nm = map(double,range(3,7))\nf = lambda y : y &gt;= 10\nt = filter(f,m)\nnext(t)\n#3 -&gt; 6\n#4 -&gt; 8\n#5 -&gt; 10\n10\nnext(t)\n#6 -&gt;12\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#enumrate","title":"enumrate","text":"<ul> <li><code>enumrate(sequnce,[strat=0])</code> # start\u662f\u4e0b\u6807\u8d77\u59cb\u4f4d\u7f6e <pre><code>seasons = ['Spring','Summer']\nlist(enumrate(seasons))\n# [(0,'Spring'),[1,'Summer']]\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#format","title":"format","text":"<pre><code>\"{} {}\".format(\"hello\",\"world\") # \u6309\u9ed8\u8ba4\u987a\u5e8f\n# 'hello world'\n\"{1} {0} {1}\".format(\"hello\",\"world\")\n# 'world hello world'\n</code></pre>"},{"location":"cs/Pynote/#zip","title":"zip:","text":"<ul> <li>zip()\u51fd\u6570\u5c06\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u5bf9\u8c61\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u6253\u5305\u6210\u4e00\u4e2a\u4e2a\u5143\u7ec4\uff0c\u7136\u540e\u8fd4\u56de\u7531\u8fd9\u4e9b\u5143\u7ec4\u7ec4\u6210\u7684\u5217\u8868 <pre><code>a = [1,2,3]\nb = [4,5,6]\nc = [4,5,6,7,8]\nzipped = zip(a,b)\nlis(zipped)\n[(1,4),(2,5),(3,6)]\nlist(zip(a,c))\n[(1,4),(2,5),(3,6)]\nzip(*zipped) # \u4e0ezipi\u76f8\u53cd,*zipped or \u53ef\u7406\u89e3\u4e3a\u89e3\u538b \u5373zip(*)\n[(1,2,3),(4,5,6)]\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#reduce","title":"reduce:","text":"<ul> <li><code>reduce(f,s,initial)</code></li> <li>f is a two-argument function</li> <li>s is a sequence of values that can be the second argument  <pre><code>reduce(mul,[2,4,8],1)\n# is equivalent to mul(mul(mul(1,2),4),8)\n</code></pre></li> <li>\u5b9e\u73b0reduce\u7684\u4ee3\u7801: <pre><code># iteration\ndef reduce(f,s,initial):\n    res = initial\n    for i in s:\n        res = f(i,res)\n    return res\n# recursion\ndef reduce(f,s,initial)\n    if not s:\n        return initial\n    else:\n        first,rest = s[0],s[1:]\n        return reduce(f,rest,f(initial,first))\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#summaxallany","title":"sum&amp;max&amp;all&amp;any:","text":"<ul> <li>sum: <pre><code>sum([2,3,4])\n# 9\nsum([2,3,4],5) # 5 is the start value,which is default 0\n# 14\nsum([[2,3],[4]],[])\n# [2,3,4]\n</code></pre></li> <li>max: <pre><code>max(range(10),key = lambda x : (x-4)*(x-2))\n# 9 ,9 is the x make the func max\n</code></pre></li> <li>all:<code>all(iterable)</code>Return True if bool(x) is True for all values x in the iterable.If the iterable is empty,return True.</li> <li>any:<code>nay(iterable)</code>Return True if bool(x) is True for any values x in the iterable.If the itarable is empty,return False.</li> </ul>"},{"location":"cs/Pynote/#assignment-name","title":"Assignment Name","text":"<ol> <li>python\u5141\u8bb8\uff1a<code>area,circ = pi*radius**2,2*pi*radius</code></li> <li>\u51fd\u6570\u5b9a\u4e49\uff1a     <pre><code>def square(x):\n    return x*x\n</code></pre> <pre><code>def divide_exact(n,d=10):\n    \"\"\"\u5f53d\u65e0\u8d4b\u503c\u65f6\uff0c\u9ed8\u8ba4\u4e3a10\"\"\"\n    return n//d,n%d\nquotient , remainder = divide_exact(2013,10)\n</code></pre></li> <li>\u8d4b\u503c\u987a\u5e8f\uff1a    <pre><code>a = 1\nb = 2\nb,a = a+b,b\n\"\"\"result is a = 2,b = 3\"\"\"\n</code></pre>    Execution rule for assignment statements:</li> <li>Evaluate all expressions to the right of = from left to right</li> <li> <p>Bind all names to the left of = to the resulting values in the current frame</p> </li> <li> <p>Logical Operators    * python\u4e2d\u4efb\u4f55\u975e0\uff0c\u975e\u7a7a\u7684\u503c\u5747\u4e3atrue</p> </li> <li> and :<ol> <li>Evaluate the subexpression  <li>If the result is a false value v,then the expression evaluates to v</li> <li>Otherwise,the expression evaluates to the value of the subexpression  So <code>2 and 3</code> would evaluate to 3 <li> or  <li>Evaluate the subexpression  <li>If the result is true valuea v,then the expression evaluates to v</li> <li>Otherwise,the expression evaluates to the value of the subexpression  <li>not :<ul> <li>x\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u53cd\u4e4b\u6613\u5f97</li> </ul>"},{"location":"cs/Pynote/#function","title":"Function","text":""},{"location":"cs/Pynote/#lambda-expressions","title":"Lambda Expressions:","text":"<ul> <li>evaluate to functions    <pre><code>s = lambda x : x * x\ns(12)\n# 144\n\ndef compose(f,g):\n     return lambda x : f(g(x))\n # : \u53ef\u89c6\u4e3areturn\n # \u4e0e\u4e0b\u8fb9\u5199\u6cd5\u7b49\u4ef7\uff1a\n # \u51fd\u6570\u8fd4\u56de\u51fd\u6570:\n\ndef compose(f,g):\n     def h(x):\n         return f(g(x))\n     return h\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#function-currying","title":"Function Currying","text":"<ul> <li>Transforming a multi-argument function into a single-argument,higher- order function    <pre><code> curry2 = lambda f : lambda x : lambda y : f(x,y)\n curry2(add)(2)(5)\n # 7\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#self-reference","title":"Self Reference","text":"<pre><code>def print_sums(x):\n    print(x)\n    def sums(y):\n        return print_sums(x+y)\n    return sums\nprint_sums(1)(3)(5)\n</code></pre>"},{"location":"cs/Pynote/#function-decorators","title":"Function Decorators:","text":"<pre><code>def trace(fn):\n    def wrapped(x):\n        print(\"yes\")\n        return fn(x)\n    return wrapped\n@trace\ndef triple(x):\n    return x*3\n#\u7b49\u4ef7\u4e8e\u2193\ndef triple(x):\n    return x*3\ntriple = trace(triple)\n</code></pre> <ul> <li>\u51fd\u6570\u65b9\u7a0b\uff1a <pre><code>def search(f):\n    x = 0\n    while True:\n        if f(x):\n            return x\n        x += 1\ndef suqare(x):\n    return x * x\ndef inverse(f):\n    \"\"\"Return g(y) such that g(f(x)) -&gt; x\"\"\"\n    return lambda y:search(lambda x: f(x) == y)\n</code></pre></li> </ul> <ul> <li>*args <pre><code>def printed(f):\ndef print_and_return(*args):\n    result = f(*args)\n    print('Result:',result)\n    return result\nreturn print_and_return\n\nprinted_pow = printed(pow)\nprinted_pow(2,8)\n# Result:256\n# 256\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#recurison","title":"Recurison:","text":"<ul> <li>Inverse Cascade: <pre><code>\"\"\"want:\n1\n12\n123\n1234\n123\n12\n1\n\"\"\"\ndef inverse_cascade(n):\n    grow(n)\n    print(n)\n    shrink(n)\ndef f_then_g(f,g,n):\n    if n:\n        f(n)\n        g(n)\ngrow = lambda n : f_then_g(grow,print,n//10)\nshrink = lambda n : f_then_g(print,shrink,n//10)\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#exception","title":"Exception:","text":""},{"location":"cs/Pynote/#assert","title":"assert(\u65ad\u8a00)","text":"<ul> <li>assert statements raise an exception of type AssertionError</li> </ul> <pre><code># assert &lt;expression&gt;,&lt;string&gt;\nassert 3 &gt; 2,'is true' # nothing happen\nassert 2 &gt; 3,'is false' # \u62a5\u9519\uff0c''\u5185\u4e3a\u62a5\u9519\u663e\u793a\u7684\u4fe1\u606f\n# \u5e94\u7528\uff1a\ndef area_square(r):\n    assert r &gt; 0,'A length much be positive'\n    return r*r\n</code></pre>"},{"location":"cs/Pynote/#raise","title":"raise:","text":"<pre><code># raise &lt;expression&gt;\n# &lt;expression&gt; must evaluate to subclass of BaseException or an instance of one\nraise TypeError('Bad argument')\nraise NameError('lalala')\n</code></pre>"},{"location":"cs/Pynote/#try-statement","title":"Try Statement:","text":"<ul> <li>Try statement handle exceptions</li> </ul> <pre><code>try:\n    x = 1/0\nexcept ZeroDivisionError as e:\n    print('handing a',type(e))\n    x = 0\n</code></pre> <pre><code>def invert(x):\n    y = 1/x\n    print('Never if x is 0')\n    return y\ndef invert_safe(x):\n    try:\n        return invert(x)\n    except ZeroDivisionError as e:\n        print('Handled',e)\n        return 0\ninvert_safe(1/0)\n# \u5148operand,\u62a5\u9519,\u6240\u4ee5func\u8fd8\u6ca1\u6709\u6765\u5f97\u53cacalled\ninverttttttt_safe(1/0)\n# \u6b64\u65f6\u62a5\u9519\u662fNameError,\u5e94\u8be5\u662f\u5148\u786e\u8ba4\u51fd\u6570\u5b58\u5728\uff0c\u518d\u6267\u884coperand\uff0c\u6700\u540e\u518d\u6267\u884coperator\n</code></pre>"},{"location":"cs/Pynote/#container-type","title":"Container type:","text":""},{"location":"cs/Pynote/#list","title":"List:","text":"<ul> <li><code>s[:-1]</code> \u4ece\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u53d6\uff0c\u53d6\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\u5b57\u7b26\u524d\u4e3a\u6b62</li> <li><code>s[::-1]</code> \u76f8\u5f53\u4e8ereverse</li> <li>append &amp; extend : append\u5c06\u53c2\u6570\u5f53\u4f5c\u4e00\u4e2a\u5143\u7d20\u589e\u52a0\u5230\u672b\u5c3e\uff0cextend\u5c06\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5217\u8868\u6269\u5c55\u672b\u5c3e</li> </ul> <pre><code>s = [2,3]\nt = [5,6]\ns.append(t)\n# s-&gt;[2,3,[5,6]] \n</code></pre> <ul> <li>slice assignment</li> <li>can remove elements from a list by assigning [] to a slice</li> </ul> <pre><code>s = [2,3]\nt = [5,6]\ns[0:0] = t\n# s-&gt; 5,6,2,3\ns[3:] = t\n# s-&gt;5,6,2,5,6\ns = [2,3]\nt = [5,6]\ns[:1] = []\n# s -&gt; [3]\nt[0:2] = []\n# t -&gt;[]\n</code></pre> <ul> <li> <p>pop:remove &amp; return the last element <pre><code>s = [2,3]\nt = [5,6]\nt = s.pop()\n#s -&gt; [2]\n#t -&gt; 3\n</code></pre></p> </li> <li> <p>remove:remove the first element equal to the argument <pre><code>t.remove(5)\n#t -&gt; [6]\n</code></pre></p> </li> <li> <p>addition &amp; slicing create a new lists containing existing elements</p> </li> </ul> <pre><code>a = s + [t]\nb = a[1:]\na[1] = 9\n#a -&gt; 2,9,[5,6]\nb[1][1] = 0\n#b -&gt; 3,[5,0]\n#t -&gt; [5,0]\n#a -&gt; [2,9,[5,0]]\n</code></pre> <pre><code>pairs = [[1,2],[2,2],[3,2],[4,4]]\nsame_count = 0\nfor x,y in pairs:\n    if x == y:\n        same_count += 1\n\nodds = [1,3,5,7,9]\n[x+1 for x in odds]\n#[2,4,6,8,10]\n[x for x in odds if 25 % x == 0]\n#[1,5]\n# \u627e\u7ea6\u6570\uff1a\ndef divisors(n):\n    return [1] + [x for x in range(2,x) if n%x == 0]\n</code></pre>"},{"location":"cs/Pynote/#dictionaries","title":"Dictionaries:","text":"<ul> <li>\u901a\u8fc7\u5173\u952e\u5b57\u786e\u8ba4\u503c</li> <li>lists and dictionaries can't be keys</li> <li>unordered <pre><code>num = {'I':1,'V':5,'X':10}\nnum['X']\n# 10\nnum.keys() # \u663e\u793a\u6240\u6709\u5173\u952e\u5b57keys\nnum.values() # \u663e\u793a\u6240\u6709\u503c\nnum.items() # \u663e\u793a\u5173\u952e\u5b57\u548c\u503c\nnum.get('X',0) # 0 is default\n# 10\nnum.get('X-ray',0)\n# 0\n'X' in num\n# True\nnum['O'] = 20 # \u6dfb\u52a0\n{x:x*x for x in range(10)}\n# {0:0,1:1,2:4..........}\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#tuples","title":"Tuples(\u5143\u7ec4):","text":"<ul> <li>\u5143\u7ec4\u548c\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539</li> <li>\u53ef\u4ee5\u7528\u4f5c\u5b57\u5178\u4e2d\u7684\u5173\u952e\u5b57 <pre><code>tup1 = () # \u7a7a\u5143\u7ec4\ntup2 = (50,) #\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\u9700\u8981\u5728\u5143\u7d20\u540e\u6dfb\u52a0\u9017\u53f7\ntuple([3,4,5])\n# (3,4,5)\n</code></pre></li> <li>An immutable sequence may still change if it contains a mutable value as an element <pre><code>s = ([1,2],3)\ns[0][0] = 3\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#sets","title":"sets:","text":"<ul> <li>Duplicate elements are removed on construction</li> <li><pre><code>s = {'one','two','three','four','four'}\ns\n# {'one','two','three','four'}\ns.union({'one','five'}) #\u589e\u6dfb\u5143\u7d20\ns.intersection({'six','five','four','three'}) #\u4ea4\u96c6\n# {'three','four'}\ns\n# {'one','two','three','four'}\n# \u5e76\u4e0d\u6539\u53d8s\u81ea\u8eab\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#string","title":"String","text":"<ul> <li>Singe_quoted and double_quoted strings are equivalent</li> <li>triple_quoted string can span multiple lines <pre><code>'I am string!'\n\"I've got an apostrophe\"\n\"\"\"ha\nha\nha\"\"\"\ns = 'Hello'\ns.upper()\ns.lower()\ns.swapcase()\n# 'hELLO'\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#generators","title":"Generators:","text":"<ul> <li>When a generator function is called,it returns a generator that iterate over its yields <pre><code>def plus_minus(x):\n    yield x\n    yield -x\nt = plus_minus(3)\nnext(t)\n# 3\nnext(t)\n# -3\n</code></pre></li> <li><code>yield from</code> <pre><code>def a_then_b(a,b):\n    yield from a\n    yield from b\nlist(a_then_b([3,4],[5,6]))\n# [3,4,5,6]\ndef countdown(k):\n    if k &gt; 0:\n        yield k\n        yield from countdown(k-1)\n</code></pre></li> </ul>"},{"location":"cs/Pynote/#environment-diagrams","title":"Environment Diagrams:","text":"<ul> <li>Every expression is evaluated in the contxt of an environment</li> <li>A name evaluates to the value bound to that name in the earliest frame of the current environment in which that name is found</li> <li>The parent of a func is the frame in which it was defined</li> <li>The parent of a frame is the parent of the function called</li> </ul>"},{"location":"cs/Pynote/#debug","title":"Debug","text":""},{"location":"cs/Pynote/#unboundlocalerror","title":"UnboundLocalError:","text":"<p>https://www.runoob.com/w3cnote/python-unboundlocalerror.html * \u5728\u5185\u90e8\u51fd\u6570\u4fee\u6539\u540c\u540d\u5168\u5c40\u53d8\u91cf\u4e4b\u524d\u8c03\u7528\u53d8\u91cf\u540d\u79f0\uff0c\u5219\u5f15\u53d1\u9519\u8bef * \u5185\u90e8\u51fd\u6570\uff0c\u4e0d\u4fee\u6539\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf * \u5185\u90e8\u51fd\u6570\uff0c\u4fee\u6539\u540c\u540d\u5168\u5c40\u53d8\u91cf\uff0c\u5219python\u4f1a\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf</p>"},{"location":"cs/Shell/","title":"Shell\u7b14\u8bb0","text":"<p>Abstract</p> <p>\u56e0\u4e3agit\u63d0\u4ea4\u65f6\u4e0d\u60f3\u6bcf\u6b21\u90fd\u8fdb\u884c\u7e41\u7410\u7684\u52b3\u52a8\u800c\u5b66\u4e60shell</p> <p>\u5c5e\u4e8e\u901f\u5b66\uff0c\u8d28\u91cf\u4e0d\u592a\u597d\uff0c\u80fd\u591f\u6ee1\u8db3\u770b\u61c2\uff0c\u6a21\u4eff\u51fa\u811a\u672c\u7684\u9700\u6c42\u5373\u53ef~</p>"},{"location":"cs/Shell/#shell","title":"Shell\u8bed\u6cd5","text":""},{"location":"cs/Shell/#1","title":"1. \u6ce8\u91ca","text":"<p>\u5355\u884c\u4e0e\u591a\u884c\u6ce8\u91ca\uff0cEOF\u53ef\u4ee5\u7528\u5176\u4ed6\u5b57\u7b26\u66ff\u4ee3 <pre><code># author: SpringRain-i\n# time: 2024/03/01\n:&lt;&lt;EOF\n\u4f5c\u8005: \u6625\u96e8\n\u65f6\u95f4: 2024/03/01\nEOF\n</code></pre></p>"},{"location":"cs/Shell/#2","title":"2. \u8f93\u51fa","text":"<p>echo\u547d\u4ee4 <pre><code># 1. \u8f93\u51fa\u5b57\u7b26\u4e32\necho \"Hello\"\n\n# 2. \u8f93\u51fa\u53d8\u91cf\nread -p \"\u8f93\u5165\u59d3\u540d:\" name\necho $name\necho \"Hello,$name\"\necho \"Hello,${name}\"\n\n# 3. \u8f93\u51fa\u6362\u884c\u4e0e\u4e0d\u6362\u884c\necho -e \"Ok! \\n\" # -e \u5f00\u542f\u8f6c\u4e49\necho -e \"It is a test\"\n\necho -e \"Ok! \\c\" # -c \u4e0d\u6362\u884c\necho -e \"It is a test\"\n\n# 4. \u663e\u793a\u547d\u4ee4\u6267\u884c\u89e3\u60d1\uff0c\u53cd\u5f15\u53f7\necho `date`\n\n# 5. \u539f\u6837\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49\u6216\u53d6\u53d8\u91cf\uff0c\u5355\u5f15\u53f7\necho '$echo\\'\n\n# 6. \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6\necho \"It is a test\" &gt; myFile.js\n</code></pre></p>"},{"location":"cs/Shell/#3","title":"3. \u8f93\u5165","text":"<p><pre><code>read -p \"xx\" : name # -p\u6307\u5b9a\u63d0\u793a\u8bed\n\nread -p \"xx\" -t 5 name # -t\u6307\u5b9a\u7b49\u5f85\u8f93\u5165\u7684\u79d2\u6570\uff0c\u8ba1\u65f6\u6ee1\u65f6\uff0cread\u547d\u4ee4\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u63d0\u51fa\u72b6\u6001\n\nread -p \"xx\" -n3 name # -n\u6307\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u6570\u91cf\uff0c\u8d85\u51fa\u65f6\u81ea\u52a8\u9000\u51fa\n\nread -p \"xx\" -s password # -s\u4f7f\u8f93\u5165\u7684\u6570\u636e\u4e0d\u663e\u793a\uff08\u5176\u5b9e\u662f\u5c06\u6587\u672c\u989c\u8272\u8c03\u6574\u6210\u4e0e\u80cc\u666f\u76f8\u540c\u7684\u989c\u8272\uff09\uff0c\u8f93\u5165\u5bc6\u7801\u65f6\u5e38\u7528\nread -r -p # \u5728\u53c2\u6570\u8f93\u5165\u4e2d\uff0c\u7528'/'\u8868\u793a\u6ca1\u6709\u8f93\u5165\u5b8c\uff0c\u6362\u884c\u7ee7\u7eed\u8f93\u5165\uff0c\u5982\u679c\u5e0c\u671b\u884c\u6700\u540e\u2018/\u2019\u4f5c\u4e3a\u6709\u6548\u5b57\u7b26\uff0c\u6216\u5e0c\u671b/n\u8fd9\u7c7b\u7279\u6b8a\u5b57\u7b26\u751f\u6548\uff0c\u4e5f\u5e94\u91c7\u7528-r\n</code></pre> \u8bfb\u53d6\u6587\u4ef6: <pre><code>#!/bin/bash\n\ncount=1 # \u8d4b\u503c\u8bed\u53e5\uff0c\u4e0d\u80fd\u52a0\u7a7a\u683c\ncat test.txt | while read line\ndo\n    echo \"Line $count:$line\"\n    count=$[ $count+1 ] #\u6ce8\u610f\u62ec\u53f7\u4e2d\u7684\u7a7a\u683c\ndone\nexit 0\n\n# \u6267\u884c\u7ed3\u679c:\nLine 1:123\nLine 2:456\nLine 3:runoob\n</code></pre></p>"},{"location":"cs/Shell/#4","title":"4. \u53d8\u91cf","text":""},{"location":"cs/Shell/#41","title":"4.1 \u5b9a\u4e49\u53d8\u91cf","text":"<p>\u8d4b\u503c:<code>i=\"springrain-i\"</code> \u6ce8\u610f\u4e8b\u9879: * \u53d8\u91cf\u540d\u4e0e\u7b49\u53f7\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u5426\u5219\u62a5\u9519<code>command not found</code></p>"},{"location":"cs/Shell/#42","title":"4.2 \u4f7f\u7528\u53d8\u91cf","text":"<p>\u53d8\u91cf\u5916\u7528\u82b1\u62ec\u53f7\u662f\u4e3a\u4e86\u5e2e\u52a9\u89e3\u91ca\u5668\u8bc6\u522b\u53d8\u91cf\u8fb9\u754c <pre><code># \u53ea\u8bfb\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8,\u8f93\u51fa\uff0c\u5220\u9664\nmyurl = \"https://springrain-i.github.io/cs/Pynote/\"\nreadonly myurl\n\n# \u5220\u9664\u53d8\u91cf\nmyurl = \"https://springrain-i.github.io/cs/Pynote/\"\nunset myurl\n</code></pre></p>"},{"location":"cs/Shell/#43","title":"4.3 \u53d8\u91cf\u7c7b\u578b","text":"<p>\u8fd0\u884cshell\u65f6\uff0c\u5b58\u5728\u4e09\u79cd\u53d8\u91cf: * \u5c40\u90e8\u53d8\u91cf * \u73af\u5883\u53d8\u91cf * shell\u53d8\u91cf \u5177\u4f53\u7c7b\u578b: * \u5b57\u7b26\u4e32\u7c7b\u578b\uff1a   * \u5355\u5f15\u53f7\u4e2d\u7684\u4efb\u4f55\u5b57\u7b26\u539f\u6837\u8f93\u51fa   * \u53cc\u5f15\u53f7\u4e2d\u53ef\u4ee5\u6709\u53d8\u91cf\u4e14\u53ef\u51fa\u73b0\u8f6c\u4e49\u5b57\u7b26 * \u6570\u5b57\u7c7b\u578b * \u5e03\u5c14\u7c7b\u578b</p>"},{"location":"cs/Shell/#431","title":"4.3.1 \u5b57\u7b26\u4e32","text":"<pre><code># 1.\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\n\nstr = \"haha\"\necho ${#str} #4\necho ${#str[0]} #4\n\n# 2.\u63d0\u53d6\u5b57\u7b26\u4e32\necho ${str:1:4}\n\n# 3.\u67e5\u627e\u5b57\u7b26\u4e32\n# \u67e5\u627e\u5b57\u7b26i\u6216o\u7684\u4f4d\u7f6e(\u54ea\u4e2a\u5148\u51fa\u73b0\u5c31\u8ba1\u7b97\u54ea\u4e2a)\necho `expr index \"$string\" io` \n</code></pre>"},{"location":"cs/Shell/#5","title":"5. \u8fd0\u7b97\u7b26","text":""},{"location":"cs/Shell/#6","title":"6.\u6761\u4ef6","text":"<p>\u5982\u679cif/elif \u6761\u4ef6\u548cthen\u5728\u540c\u4e00\u884c\uff0c\u5219\u9700\u8981\u52a0\u5206\u53f7;\u5373<code>if/elif \u6761\u4ef6;then</code></p>"},{"location":"cs/Shell/#61-if","title":"6.1 if","text":"<pre><code>if \u6761\u4ef6 # if \u6761\u4ef6\u5f00\u59cb\nthen\n    # \u6761\u4ef6\u4e3a\u771f,\u6267\u884c\nelse\n    # \u6761\u4ef6\u4e3a\u5047\uff0c\u6267\u884c\nfi # \u6761\u4ef6\u7ed3\u675f\n\n# \u4f8b\u5b50\uff1a\n\nif [ $name = \"lsx\"]\nthen\n    echo \"hello,you\"\nelse\n    echo \"hello,i\"\nfi\n\n# if....elif\nif \u6761\u4ef6\u4e00\nthen\n    # \u6761\u4ef6\u4e00\u4e3a\u771f\uff0c\u6267\u884c\nelif \u6761\u4ef6\u4e8c\nthen # \u6761\u4ef6\u4e8c\u4e3a\u771f\uff0c\u6267\u884c\n...\nelse\n    # \u4e0a\u8fb9\u5747\u4e3a\u5047\uff0c\u6267\u884c\nfi\n</code></pre>"},{"location":"cs/Shell/#62-caseesac","title":"6.2 case...esac","text":"<p>\u662f\u4e00\u4e2a\u5206\u652f\u9009\u62e9\u7ed3\u6784,\u4e24\u4e2a\u5206\u53f7(;;)\u8868\u793a\u6267\u884c\u7ed3\u675f(break)</p> <pre><code>case \u503c in\n    \u6a21\u5f0f\u4e00)\n        ...\u4e00\u64cd\u4f5c...\n        ;;\n    \u6a21\u5f0f\u4e8c)\n        ...\u4e8c\u64cd\u4f5c...\n        ;;\nesac\n</code></pre>"},{"location":"cs/Shell/#7","title":"7. \u5faa\u73af","text":"<pre><code>while \u8868\u8fbe\u5f0f\n    do\n        command...\n    done\n</code></pre>"},{"location":"cs/Shell/#8","title":"8. \u51fd\u6570","text":"<p>\u51fd\u6570\u5b9a\u4e49\u683c\u5f0f: <pre><code>[function] funname [()]\n{\n    action\n    [return init;]\n}\n</code></pre></p> <p>\u8bf4\u660e * \u53ef\u4ee5\u7528function fun()\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5fun()\u5b9a\u4e49 * \u53c2\u6570\u8fd4\u56de\uff0c\u53ef\u4ee5\u663e\u793a\u52a0return\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u52a0\uff0c\u5c06\u4ee5\u6700\u540e\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u7ed3\u679c\u4f5c\u4e3a\u8fd4\u56de\u503c * \u6240\u6709\u51fd\u6570\u4f7f\u7528\u524d\u5fc5\u987b\u5b9a\u4e49,\u56e0\u6b64\u8981\u653e\u5728\u811a\u672c\u5f00\u59cb\u90e8\u5206 <pre><code># \u5728shell\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4ee5\u5411\u5176\u4f20\u9012\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\uff0c\u901a\u8fc7$n\u7684\u5f62\u5f0f\u6216\u53d6\u53c2\u6570\u7684\u503c\uff0c\u4f8b\u5982,$1\u8868\u793a\u7b2c\u4e00\u4e2a\u53c2\u6570\nfunWithParam(){\n    echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570 $1\"\n    echo \"\u7b2c\u5341\u4e00\u4e2a\u53c2\u6570 ${11}\" # n&gt;=10\u65f6\u8981\u52a0{}\n    echo \"\u53c2\u6570\u603b\u6570\u6709 $# \u4e2a\"\n    echo \"\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa\u6240\u6709\u53c2\u6570 $*\"\n}\n</code></pre></p>"},{"location":"cs/Shell/#_1","title":"\u5e94\u7528","text":""},{"location":"cs/Shell/#1-git","title":"1. git \u81ea\u52a8\u5316\u90e8\u7f72\u811a\u672c","text":""},{"location":"cs/Shell/#11","title":"1.1 \u4e00\u671f\u9700\u6c42","text":"<p>\u9996\u5148\u6267\u884c<code>git status</code>,\u4e86\u89e3\u5f53\u524d\u5de5\u4f5c\u533a\u662f\u5426\u6709\u66f4\u6539\u3002\u505a\u4e86\u4e8c\u6b21\u786e\u8ba4\uff0c\u786e\u8ba4\u662f\u5426\u7ee7\u7eed\u63d0\u4ea4\u8fd9\u4e9b\u53d8\u5316\uff0c\u5982\u679c\u9700\u8981\u5728\u63d0\u4ea4\u524d\u5bf9\u8fd9\u4e9b\u53d8\u5316\u8fdb\u884c\u5904\u7406\uff0c\u53ef\u8f93\u5165<code>no</code>\u7ed3\u675f\u6d41\u7a0b\u3002 <pre><code>echo \"&lt;&lt;&gt;\u6e29\u99a8\u63d0\u793a\uff1a\u8bf7\u5c06\u8be5\u811a\u672c\u653e\u5728\u4e0e\u9879\u76ee\u8def\u5f84\u540c\u7ea7\u7684\u6587\u4ef6\u4e2d&gt;\"\n\n# \u5982\u679c\u5f53\u524d\u5de5\u4f5c\u533a\u6ca1\u6709\u66f4\u6539\u5219\u65e0\u9700\u7ee7\u7eed\u8fdb\u884c\ngit status\n\n# \u786e\u5b9a\u662f\u5426\u8981\u63d0\u4ea4\nread -r -p \"\u662f\u5426\u7ee7\u7eed\u63d0\u4ea4\uff1f\u3010Y/n\u3011\" input\n\ncase $input in\n    [yY][eE][sS]|[yY])\n        echo \"\u7ee7\u7eed\u63d0\u4ea4\"\n\n        git add .\n        git status\n\n        # \u8f93\u5165\u63d0\u4ea4\u8bf4\u660e\n        read -p \"\u8bf7\u8f93\u5165\u672c\u6b21\u63d0\u4ea4\u7684\u5907\u6ce8\u8bf4\u660e\" commit\n        echo \"&lt;&lt;\u5c06\u6682\u5b58\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\uff1a\u5f00\u59cb&gt;&gt;\"\n        git commit -m ${commit}\n\n        echo \"&lt;&lt;\u63d0\u4ea4\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a\u5f00\u59cb&gt;&gt;\"\n        git push\n\n        echo \"&lt;&lt;\u606d\u559c\u60a8\uff0c\u672c\u6b21\u63a8\u9001\u5b8c\u6bd5\uff01(\u2579\u06a1\u2579 )&gt;&gt;\"\n    [nN][oO]|[nN])\n        echo \u201c\u4e2d\u65ad\u63d0\u4ea4\u201d\n        exit 1\n        ;;\nesac\n</code></pre></p>"},{"location":"cs/alogorithm/","title":"Alogorithm","text":"<ul> <li>maxsequence</li> <li></li> <li>Algorithm: On-line Algorithm</li> <li>Homework: \u770bppt\u81ea\u5b66\u4e00\u4e2a\u4e1c\u897f</li> </ul>"},{"location":"cs/ADS/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784","text":"<p>2024 / 9 / 13</p>"},{"location":"cs/ADS/ads/#avl-tree-and-splay-tree","title":"AVL Tree and Splay Tree","text":"<p>Abstract</p> <p>\u672c\u8282\u8bfe\u7ea6\u5b9a\u7a7a\u6811\u7684\u9ad8\u5ea6\u5b9a\u4e49\u4e3a-1</p>"},{"location":"cs/ADS/ads/#avl-trees","title":"AVL Trees","text":"<p>\u76ee\u7684</p> <p>\u4fdd\u6301\u6811\u7684\u9ad8\u5ea6\u5e73\u8861\uff0c\u4f7f\u5f97\u6811\u7684\u9ad8\u5ea6\u4e3a\\(O(\\log n)\\), \u5e76\u4e14AVL\u6811\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\).</p> <p>Definition</p> <p>Empty tree is height balanced. And T is height balanced iff \\(T_L\\)  and  \\(T_R\\) is height balanced and \\(|h_L - h_R| &lt;= 1\\)</p> <p>Balance factor(BF) = \\(h_L - h_R\\) .In AVL trees, BF is either -1, 0, 1</p> <p>\\(n_h\\) is the minimum number of nodes in a height balanced tree of height h. Then h = \\(O(\\log n)\\). So the time complexity of insertion and search is \\(O(\\log n)\\)</p> RotationLL,RRLR,RLn_h\u7684\u8ba1\u7b97 <p></p> <p>\u53ea\u9700\u8981\u8f6c\u4e00\u6b21,\u6ce8\u610f\u662fAug\u5728\u8f6c </p> <p>\u9700\u8981\u8f6c\u4e24\u6b21,\u6ce8\u610f\u662fMar\u5148\u5de6\u8f6c,\u518d\u53f3\u8f6c </p> <p>\u7ed3\u8bba\u662f\\(\u6700\u5c0f\u7684n_h = F_{h+2} - 1\\)(F\u4e3aFibonacci\u6570) </p>"},{"location":"cs/ADS/ads/#splay-trees","title":"Splay Trees","text":"<p>\u76ee\u7684</p> <p>Any M consecutive operations starting from an empty tree take at most \\(O(M\\log n)\\) time</p> <p>\\(T_amortized = O(\\log n)\\)</p> RotationDelete <p>Zig-Zag:\u5148\u5de6\u8f6cX,\u518d\u53f3\u8f6cX Zig-Zig:\u5148\u53f3\u8f6cP,\u518d\u53f3\u8f6cX </p> <p></p>"},{"location":"cs/ADS/ads/#amortized-analysis","title":"Amortized Analysis(\u5747\u644a\u5206\u6790)","text":"<p>\u5747\u644a\u5206\u6790\u4e0e\u6982\u7387\u65e0\u5173</p> Aggregate analysis(\u805a\u5408\u5206\u6790)Accounting method(\u6838\u7b97\u6cd5)Potential method(\u52bf\u80fd\u6cd5) <p>a sequence of n operations takes worst-case time \\(T(n)\\) in total, then the amortized time per operation is \\(T(n)/n\\)</p> <p>When an operation's amortized cost exceeds its actual cost, the difference is assigned to specific objects in the data structure as credit. This credit can be used to pay for later operations.</p> <p>For example: </p>"},{"location":"cs/ADS/ads/#splay-tree","title":"\u5bf9Splay Tree\u8fdb\u884c\u4f7f\u80fd\u6cd5\u7684\u5206\u6790:","text":"<p>\u5b9a\u4e49: </p> <p>\u516c\u5f0f</p> <p>\\(T_{amortized} = O(\\log N)\\)</p> <p>If \\(a+b &lt;= c\\) then \\(\\log a + \\log b &lt;= 2\\log c - 2\\)</p> <p></p> <p>\u5177\u4f53\u8fc7\u7a0b: Zig-zig\u4e2d,\u8865\u5145\u4e86\u4e00\u4e2a\\(R_1(X)\\),\u8fd9\u6837\u5b50\\(R_2(G)+R_1(X) &lt;= 2R_2(X) - 2\\).(\\(R_2(G)\\)\u6709\u513f\u5b50C,D.\\(R_1(X)\\)\u6709\u513f\u5b50A,B,\u800c\\(R_2(X)\\)\u6709A,B,C,D,\u6240\u4ee5\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7b49\u5f0f),\u6b64\u65f6\u6d88\u53bb\u4e86\u5e38\u6570,\u4fbf\u53ef\u4ee5\u76f4\u63a5\u5c06\u539f\u672c\u7684\\(R_2(P)\u653e\u5927\u4e3aR_2(X)\\),\u4fbf\u53ef\u5f97\u5230\u6700\u7ec8\u7ed3\u679c.</p> <p>\u7136\u540e\u5c06Zig, Zig-zag\u7684\u5e38\u6570\u5916\u7684\u90e8\u5206\u653e\u5927\u4e09\u500d,\u4fbf\u53ef\u5f97\u5230\u6700\u7ec8\u7ed3\u679c.</p> <p>Theorem: The amortized time to splay a tree with root T at node X is at most \\(3(R(T)-R(X))+1 = O(\\log n)\\) </p>"},{"location":"cs/ADS/ads/#red-black-trees-and-b-tree","title":"Red-Black Trees and B+ Tree","text":""},{"location":"cs/ADS/ads/#red-black-trees","title":"Red-Black Trees","text":"DefinitionInsertDelete <p>\u7b2c\u56db\u70b9\u5b9a\u4e49\u662f\u56e0\u4e3a\u7ea2\u9ed1\u6811\u4e2d\u5b58\u5728\u54e8\u5175,\u6240\u6709\u7684\u53f6\u5b50\u90fd\u4f1a\u518d\u6307\u5411\u54e8\u5175,\u6240\u4ee5\u54e8\u5175\u6210\u4e3a\u4e86\u6700\u7ec8\u7684\u53f6\u5b50(\u9ed1\u8272) </p> <p>Definition</p> <ul> <li>The black-height of a node is the number of black nodes on the path from the node to a leaf, not counting the node itself.Denoted by bh(x).</li> <li>A red-black tree with N internal nodes(\u4e0d\u5305\u542b\u54e8\u5175) has height at most \\(2\\log(N+1)\\)</li> </ul> <p></p> <ul> <li>Concrete process: Case1(Iterative) -&gt; Case2 -&gt; Case3 -&gt;End \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log N)\\)</li> </ul> <p>\u6b64\u5904\u7684PPT\u5e76\u6ca1\u6709\u90a3\u4e48\u6e05\u6670,\u5efa\u8bae\u770bwyy\u7684ADS\u8bb2\u4e49  </p>"},{"location":"cs/ADS/ads/#b-tree","title":"B+ Tree","text":"DefinitionInsertionpseudo code"},{"location":"cs/ADS/ads/#inverted-file-index","title":"Inverted File Index","text":"<p>\u6b64\u5904\u5efa\u8bae\u5c06PPT\u770b\u4e00\u4e0b,\u5bf9\u5e94\u65f6\u95f4\u4e3a2024/9/29</p> DefinitionIndex GeneratorPrecision and Recall    <p></p> <p> </p> <p>Precision(\u7cbe\u51c6\u7387): \u6240\u6709\u8fd4\u56de\u7684\u6587\u6863\u4e2d,\u6b63\u786e\u6587\u6863\u7684\u6bd4\u4f8b Recall(\u53ec\u56de\u7387): \u6240\u6709\u6b63\u786e\u6587\u6863\u4e2d,\u8fd4\u56de\u7684\u6587\u6863\u7684\u6bd4\u4f8b </p>"},{"location":"cs/ADS/ads/#leftist-heaps-and-skew-heaps","title":"Leftist Heaps and Skew Heaps","text":""},{"location":"cs/ADS/ads/#leftist-heaps","title":"Leftist Heaps","text":"DefinitionMerge <p> pseudo Code: </p> <p>Note</p> <ul> <li>A leftist tree with r nodes on the right path must have at least \\(2^r-1\\) nodes.So the Leftis tree of N nodes has a right path containing at most \\(\\log (N+1)\\) nodes.</li> </ul>"},{"location":"cs/ADS/ads/#skew-heaps","title":"Skew Heaps","text":"DefinitionInsertionAdvantageAmortized Analysis <p>\u4eba\u8bdd:\u4e00\u4e2a\u8282\u70b9p\u7684\u53f3\u5b50\u6811\u8282\u70b9\u6570\u5927\u4e8e\u5de6\u5b50\u6811,\u5219p\u4e3aheavy  </p>"},{"location":"cs/ADS/ads/#binomial-queues","title":"Binomial Queues(\u4e8c\u9879\u961f\u5217)","text":"<ul> <li>\u6784\u5efa\u4e00\u4e2a\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\)</li> </ul> DefinitionUseMergeInsertDeleteMinImplementationStruct <p>\u7ed3\u8bba:\u4ece\u7a7a\u7684\u6811\u5f00\u59cb,\u5747\u644a\u4ee3\u4ef7\u4e3a\\(O(1)\\) </p> <p> </p> <p>\u6ce8\u610f:\u8fd9\u4e2a\u8fde\u63a5\u987a\u5e8f\u662f\u6309\u7167\u6811\u9ad8\u7531\u5927\u5230\u5c0f\u7684 \u4f46\u662f\u4e5f\u8981\u6ce8\u610f\u5230,\u6839\u8282\u70b9\u7684\u503c\u662f\u6700\u5c0f\u7684 </p> <p></p>"},{"location":"cs/ADS/ads/#backtracking","title":"Backtracking","text":""},{"location":"cs/ADS/ads/#_1","title":"\u516b\u7687\u540e","text":"<p>\u516b\u7687\u540e\u95ee\u9898\u8f83\u4e3a\u7b80\u5355,\u76f4\u63a5\u8df3\u8fc7</p>"},{"location":"cs/ADS/ads/#the-turnpike-reconstruction-problem","title":"The Turnpike Reconstruction Problem","text":"InstructionPseudo"},{"location":"cs/ADS/ads/#tic-tac-toe","title":"\u535a\u5f08Tic-tac-toe","text":""},{"location":"cs/ADS/ads/#alpha-beta","title":"\\(\\alpha - \\beta\\)","text":"<p>\u56de\u6eaf\u95ee\u9898\u7684\u6a21\u677f: <pre><code>bool BackTracking(int i){\n    Found = flase;\n    for(each xi in Si){\n        OK = Check((x1,.....,xi),R); //\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6,\u8fdb\u884c\u526a\u679d\n        if(OK){\n            Count xi in;\n            Found = BackTracking(i+1);\n            if(!Found) Undo(i); //\u590d\u539f\u5bf9xi\u7684\u64cd\u4f5c\u4ee5\u56de\u6eaf\n        }\n        if(Found) break;\n    }\n    return Found;\n}\n</code></pre></p>"},{"location":"cs/ADS/ads/#divide-and-conquer","title":"Divide and Conquer","text":"DefinitionSubstitution MethodRecursion-tree methodMaster method <p>\u5f53\u731c\u7684\u6bd4\u8f83\u677e\u65f6,\u4f1a\u51fa\u9519  </p> <p>\u53ef\u4ee5\u731c\u7684\u4e0d\u90a3\u4e48\u4e25\u8c28,\u518d\u7528Substitution\u6765\u8bc1\u660e  </p> <p> </p>"},{"location":"cs/ADS/ads/#dynamic-programming","title":"Dynamic Programming","text":""},{"location":"cs/ADS/ads/#greedy-algorithm","title":"Greedy Algorithm","text":""},{"location":"cs/ADS/ads/#np-completeness","title":"NP-Completeness","text":"<p>Definition</p> <p>NP: Nondeterministic Polynomial time The problem is NP if we can prove any solution is true in polynomial time</p>"},{"location":"cs/CTF/Reverse/","title":"Reverse","text":""},{"location":"cs/CTF/Reverse/#_1","title":"\u53ef\u6267\u884c\u6587\u4ef6\u6ca1\u6709\u6743\u9650\u6253\u5f00","text":"<p><code>chmod 777 filename</code>\u5373\u53ef,\u6253\u5f00\u4e86read + write +execute \u6743\u9650</p>"},{"location":"cs/CTF/Reverse/#_2","title":"\u5f02\u6216^","text":"<p>b^b = 0 b^b^b = b a ^ b = c \u90a3\u4e48 a = b ^ c</p>"},{"location":"cs/OOP/oop/","title":"OOP","text":""},{"location":"cs/OOP/oop/#introduce","title":"Introduce","text":""},{"location":"cs/OOP/oop/#buzzwords","title":"Buzzwords","text":"<ol> <li>encapsulation \u5c01\u88c5 </li> <li>inheritance \u7ee7\u627f</li> <li>polymorphism \u591a\u6001</li> <li>overriding \u8986\u76d6 \u533a\u522b\\(\\rightarrow\\)overwrite \u6539\u5199</li> <li>interface \u754c\u9762,\u63a5\u53e3</li> <li>cohesion \u5185\u805a(\u5185\u90e8\u5b8c\u6574)</li> <li>coupling \u8026\u5408: \u4e24\u4e2a\u4e1c\u897f\u95f4\u4e92\u76f8\u5173\u8054\u7684\u7a0b\u5ea6 OOP\u5728coupling\u8d8a\u5f31\u8d8a\u597d</li> <li>Collection Classes \u5bb9\u5668</li> <li>template \u6a21\u677f</li> <li>responsibility-driven design \u8d23\u4efb\u9a71\u52a8\u8bbe\u8ba1</li> </ol>"},{"location":"cs/OOP/oop/#introduce_1","title":"Introduce","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;    // using directive,\u6307\u5982\u679c\u6ca1\u6709\u627e\u5230\u53d8\u91cf\uff0c\u5c31\u53bbstd\u4e2d\u627e\nint main() {\n    int age;\n    cin &gt;&gt; age;\n    cout &lt;&lt; \"Hello, World!\" &lt;&lt; endl; //\u8fd9\u91cc\u7684&lt;&lt;\u662f\u8fd0\u7b97\u7b26,\u76f8\u5f53\u4e8e a+b,\u6700\u540e\u518d\u8fd4\u56de\u4e00\u4e2acout\u53d8\u91cf\n    return 0;\n}\n</code></pre>"},{"location":"cs/OOP/oop/#format-output","title":"Format output","text":"<pre><code>#include &lt;iomanip&gt;\ncout &lt;&lt; setw(10) &lt;&lt; setprecision(2)  &lt;&lt; 3.1415926 &lt;&lt; endl; // setw(10)\u8868\u793a\u536010\u4e2a\u5b57\u7b26, setprecision(2)\u8868\u793a\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\n</code></pre>"},{"location":"cs/OOP/oop/#string","title":"String","text":""},{"location":"cs/OOP/oop/#initialize","title":"initialize","text":"<pre><code>#include &lt;string&gt;\nstring s1 = \"hello\";\nstring s2(\"bye\");\nstring s3{\"see see\"}; // c++11\u624d\u6709\ngetline(cin, s1); //Read a whole line\nstring s4 = s1 + s2; // s4 = \"hellobye\"\nstring s5(s4, 3, 4); // s5 = \"lobe\"\ncout &lt;&lt; s4.length() &lt;&lt; endl;\ncout &lt;&lt; s5.substr(2,5) &lt;&lt; endl; //pos, len\n\n\ns1.find(s2); //\u8fd4\u56des2\u5728s1\u4e2d\u7684\u4f4d\u7f6e(index),\u5982\u679c\u6ca1\u627e\u5230\u8fd4\u56de-1\n</code></pre> <p>Note</p> <ol> <li>Every thing is a an object in C++.</li> </ol>"},{"location":"cs/OOP/oop/#alter-string","title":"Alter string","text":"<pre><code>#include &lt;string&gt;\ninsert(size_t pos, const string&amp; str); // insert str at pos\nerase(size_t pos, size_t len); // erase len characters from pos\nappend(const string&amp; str); // append str to the end\nreplace(size_t pos, size_t len, const string&amp; str); // replace len characters from pos with str\n</code></pre> <p>Search String:<code>size_t find(const string&amp; str, size_t pos = 0) const;</code></p>"},{"location":"cs/OOP/oop/#containercollection","title":"Container\\Collection(\u5bb9\u5668)","text":"<p>Note</p> <p>Collection is an object that can store an arbitrary number of other objects</p>"},{"location":"cs/OOP/oop/#vector","title":"vector","text":"<pre><code>#include &lt;vector&gt;\nint main(){\n    vector&lt;int&gt; v;\n    for(int i = 0;i &lt; 10; i++){\n        v.push_back(i);\n    } \n    cout &lt;&lt; v.size() &lt;&lt; endl; //10 \u5143\u7d20\u6570\u76ee\n    cout &lt;&lt; v.capacity() &lt;&lt; endl; //16 \u5bb9\u91cf\n    for(int i = 0;i &lt; v.size;i++){\n        cout &lt;&lt; v[i] &lt;&lt; endl;\n        cout &lt;&lt; v.at[i] &lt;&lt; endl;\n    }\n}\n    vector&lt;int&gt;::iterator it;\n    for(it = v.begin(); it &lt; v.end();it++){\n        cout &lt;&lt; *it &lt;&lt; endl;\n    }\n    v.resize(5); //v.size() = 5\n</code></pre> <p>Two ways to use vector: * Preallocate <pre><code>vector&lt;int&gt; v(100);\nv[80] = 1;\nv[200] = 1; //wrong\n//\u4f46\u662f\u5982\u679cpush_back,\u8fd8\u662f\u4f1a\u4f7fcapacity\u589e\u52a0\n</code></pre> * Grow tail <pre><code>vector&lt;int&gt; v;\nwhile(cin &gt;&gt; i){\n    v.push_back(i);\n}\n</code></pre></p> <p>Note</p> <p>Vector is a generic class</p>"},{"location":"cs/OOP/oop/#list","title":"List","text":"<pre><code>#include &lt;list&gt;\nx.push_back(item);\nx.push_front(item);\nx.pop_back();\nx.pop_front();\nx.erase(pos1,pos2); //\u5220\u9664pos1\u5230pos2\u4e4b\u95f4\u7684\u5143\u7d20\nx.insert(pos, item); //\u5728pos\u4f4d\u7f6e\u63d2\u5165item\nlist&lt;int&gt;::iterator it;\nfor(it = x.begin(); it != x.end(); it++){\n    cout &lt;&lt; *it &lt;&lt; endl;\n} //\u6ce8\u610f,\u8fd9\u91cc\u5fc5\u987b\u662f!=,\u800c\u4e0d\u662f&lt;,\u56e0\u4e3alist\u7684\u5730\u5740\u4e0d\u8fde\u7eed,\u800cvector\u662f\u53ef\u4ee5\u7684 \n</code></pre>"},{"location":"cs/OOP/oop/#map","title":"Map","text":"<pre><code>#include &lt;map&gt;\n#include &lt;string&gt;\nmap&lt;string, int&gt; price;\nprice[\"apple\"] = 10;\nmap.count(key); //\u8fd4\u56dekey\u7684\u4e2a\u6570\nmap&lt;string, int&gt; m{{\"cpu\",10},{\"gpu\",20}};\n</code></pre>"},{"location":"cs/OOP/oop/#iterators","title":"Iterators","text":"<pre><code>#include&lt;string&gt;\n#include&lt;list&gt;\nlist&lt;string&gt;::iterator it;\nlist&lt;string&gt; s;\nit = s.begin(); //\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\nit = s.end(); //\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\ns--; //\u6b64\u65f6\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n*s = \"hello\" //\u4fee\u6539\u5143\u7d20\n</code></pre> <pre><code>#include &lt;algorithm&gt;\n#include &lt;list&gt;\nlist&lt;int&gt; L;\nvector&lt;int&gt; V;\ncopy(L.begin,L.end,V.begin); //\u5c06L\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230V\u4e2d\nfor(int i = 0;i &lt;= 5;i++){\n    L.push_back(i);\n}\ncopy(L.begin(),L.end(),ostream_iterator&lt;int&gt;(cout,\",\"));\ncout &lt;&lt; endl;; //0,1,2,3,4,5,\n</code></pre> <p>For each:\u662f\u4e00\u79cd\u53ea\u8bfb\u5faa\u73af,\u5373\u76f8\u5f53\u4e8e\u6bcf\u6b21\u5faa\u73af\u5148\u8fdb\u884c\u4e86<code>entry = entries[i]</code>\u7684\u8d4b\u503c <pre><code>int arr[] = {1,2,3,4,5};\nfor(int i : arr) cout &lt;&lt; i &lt;&lt; endl;\n//C11:\nvector&lt;int&gt; vec={1,2,3,4,5};\nfor(auto i : vec) cout &lt;&lt; i &lt;&lt; endl; //auto\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\n\nmap&lt;stirng,string&gt; entries;\nfor(auto entry : entries){ .....} //\u6b64\u65f6entry\u7684\u7c7b\u578b\u662fpair&lt;string,string&gt;\n</code></pre></p>"},{"location":"cs/OOP/oop/#typedef","title":"Typedef","text":"<pre><code>using PB = map&lt;string,list&lt;string&gt;&gt;;\n//\u7b49\u4ef7\u4e8e\ntypedef map&lt;string,list&lt;string&gt;&gt; PB;\n</code></pre>"},{"location":"cs/OOP/oop/#pitfalls","title":"Pitfalls","text":"<pre><code>vector&lt;int&gt; v;\nv[100] = 1; //wrong\nif(foo[\"bob\"]==1) //wrong,\u4f1asilently created entry \"bob\"\n//Don't use count() on list&lt;&gt;, it's O(n), use find or empty\n\n//-------------\nlist&lt;int&gt; L;\nlist&lt;int&gt;::iterator it;\nit = L.begin();\nL.erase(it);\n++it; //wrong, it is invalid now\n//right way:\nit = L.erase(it); //\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n//--------------\n</code></pre>"},{"location":"cs/OOP/oop/#class","title":"Class","text":""},{"location":"cs/OOP/oop/#resolver","title":"resolver \"::\"","text":"<p><pre><code>struct S{\n    int a;\n    void f();\n}\n\nvoid S::f(){\n    ::f(); //Would be recursive otherwise;\n    ::a++; //Select the global a\n    a--; //The a at class scope\n}\n\nint main(){\n    S s;\n    s.a = 1;\n    s.f();\n}\n</code></pre> As a matter of fact,There is a hidden parameter:<code>this</code> <pre><code>void S::f(S *this){....};\n</code></pre></p>"},{"location":"cs/OOP/oop/#initialize_1","title":"Initialize","text":"<p>\u4e0a\u8fb9\u7684\u4f8b\u5b50\u4e2d\u662f\u5728\u521b\u5efa\u5bf9\u8c61\u540e\u518d\u5bf9\u5bf9\u8c61\u5185\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c,\u800c\u4e0b\u8fb9\u662f\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u5c31\u5bf9\u5bf9\u8c61\u5185\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c <pre><code>struct Point{\n    int x = 0;\n    int y = 0; //inplace init\n    Point(int x,int y); //constructor \u6784\u9020\u51fd\u6570\n    void init(int x,int y);\n    void print() const;\n    void move(int dx,int dy);\n}\nPoint::Point(int x,int y){\n    this-&gt;x = x;\n    this-&gt;y = y;\n}\nPoint a(0,0); //a.x = 0, a.y = 0 ,\u521b\u5efa\u5bf9\u8c61\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\na.init(1,2);\na.move(2,2);\na.print();\n</code></pre> Init list: <pre><code>struct Point{\n    int x = 0;\n    int y = 0;\n    Point(int xx,int yy): x(xx),y(yy);\n}\n</code></pre> \u5728C++11\u4e2d,\u8fd8\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u9ed8\u8ba4\u503c: <pre><code>struct Point{\n    int x = 0;\n    int y = f();\n    int f(){return 0+x;}\n}\n</code></pre></p>"},{"location":"cs/OOP/oop/#destructor","title":"Destructor","text":"<p>\u8c01\u5148\u88ab\u6784\u9020,\u8c01\u540e\u88ab\u6790\u6784(\u9006\u5e8f) <pre><code>struct Y{\n    ~Y(); //\u6ca1\u6709\u53c2\u6570,\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b,\u81ea\u52a8\u4f1a\u88ab\u8c03\u7528\n}\n\nY::~Y(){\n    cout &lt;&lt; \"Y destructed\" &lt;&lt; endl;\n}\n</code></pre></p>"},{"location":"cs/OOP/oop/#inside-object","title":"Inside Object","text":""},{"location":"cs/OOP/oop/#publicprivate","title":"Public,Private","text":"<p>Note</p> <p>Public means all member declarations that follow are available to everyone Private .... An object can access private member of another object of the same class</p> <pre><code>struct B{\nprivate:\n    char j;\n    float f;\npublic:\n    int i;\n    void func();\n    void ff(B* p);\n};\n\nvoid B::func(){\n    ...\n}\n\nint main(){\n    B b;\n    b.i = 1; //OK,i is public\n    //b.j = \"1\"; //wrong, private\n    //b.f = 1.0; //wrong, private\n}\n</code></pre>"},{"location":"cs/OOP/oop/#friend","title":"Friend(\u53cb\u5143)","text":"<p>Note</p> <p>Friend is a way to explicitly grant access to a function that isn't a member of the structure</p> <pre><code>struct Y{\n    void f(X*);\n};\n\nstruct X {\n    private:\n        int i;\n    public:\n        friend void g(x*, int i) //Global friend\n        friend void Y::f(X*) //Struct member\n        friend struct Z; //Entire struct\n}\n\nvoid g(X* x, int i){\n    x-&gt;i = i;   //\u6b64\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95eeX\u7684\u79c1\u6709\u53d8\u91cf\n}\n</code></pre> <p>Class</p> <p>Class defaults to private;Struct defaults to public C++\u4e2d\u7684class\u548cstruct\u662f\u7b49\u4ef7\u7684,\u53ea\u662f\u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\u4e0d\u540c</p> <ul> <li>Fields(\u5b57\u6bb5): Member variables</li> <li>\u5168\u5c40\u53d8\u91cf\u5728main\u51fd\u6570\u4e4b\u524d\u6784\u9020,\u5728main\u51fd\u6570\u4e4b\u540e\u6790\u6784</li> <li>\u8981\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf</li> </ul>"},{"location":"cs/OOP/oop/#static","title":"Static","text":"<p>Static local variable: Value is remembered for entire program <pre><code>void f(){\n    static int i = 0; //\u5b9e\u9645\u4e0a,\u4ed6\u5c31\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf,\u53ea\u662f\u4ed6\u7684\u4f5c\u7528\u57df\u53ea\u5728f()\u4e2d,\u4e5f\u4ec5\u5b9a\u4e49\u4e00\u6b21\n    i++;\n    cout &lt;&lt; i &lt;&lt; endl; //1,2,3,4,5\n}\n</code></pre></p> <p>Note</p> <p>\u5bf9\u4e8e\u5168\u5c40\u53d8\u91cfor\u9759\u6001\u53d8\u91cf,\u4ed6\u7684\u7a7a\u95f4\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5c31\u5206\u914d\u597d\u7684,\u800c\u4e0d\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u5206\u914d</p> <p>Static member variable:     * Global to all class member function     * Initialized once,at tile scope</p> <p>Static member variable:\u4f60\u5728\u5176\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u4fee\u6539\u4e86\u8fd9\u4e2a\u53d8\u91cf,\u90a3\u4e48\u540c\u4e00\u4e2a\u7c7b\u7684\u5176\u4ed6\u5bf9\u8c61\u4e2d\u7684\u8fd9\u4e2a\u53d8\u91cf\u4e5f\u4f1a\u88ab\u4fee\u6539. \u5b9e\u9645\u4e0a\u8fd9\u4e9b\u5bf9\u8c61\u8bbf\u95ee\u7684\u662f\u540c\u4e00\u4e2a\u53d8\u91cf</p> scope lifetime Member in class object Static Member in class global <p>Note</p> <p>Class \u5185\u7684\u53d8\u91cf\u548c\u51fd\u6570\u90fd\u662f\u58f0\u660e</p> <pre><code>//\u5982\u679c.h\u91cc\u6709\u9759\u6001\u53d8\u91cf,\u5219\u5728.cpp\u4e2d\u8981\u91cd\u65b0\u5b9a\u4e49\u4e00\u6b21\n//.h\u6587\u4ef6\nclass StatMem{\npublic:\n\n    static int m_h;\n    int m_w;\n}\n//.cpp\u6587\u4ef6\n\nint StatMem::m_h; \n\n\nint main(){\n\n}\n</code></pre> <p>Static member function: \u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709this\u6307\u9488,\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf</p> <p>To use static members: <pre><code>&lt;class name&gt;::&lt;static member&gt;\n&lt;obejct variable&gt;.&lt;static member&gt;\n</code></pre></p>"},{"location":"cs/OOP/oop/#reference","title":"Reference","text":"<p>Note</p> <p>Reference is a new way to manipulate objects in C++</p> <pre><code>char c; //a character\nchar *p = &amp;c; //a pointer to a character\nchar &amp;r = c; //a reference to a character \u6b64\u5904\u7684&amp;\u662f\u5f15\u7528\u7b26\u53f7,\u53ef\u4ee5\u88c2\u7406\u89e3\u4e3ac\u7684\u522b\u540d,\u5373r\u548cc\u662f\u540c\u4e00\u4e2a\u4e1c\u897f\n\nvoid f(int &amp;r){\n    r = 1;\n}\n\nint main(){\n    int i = 0;\n    f(i);\n    cout &lt;&lt; i &lt;&lt; endl; //1\n}\n</code></pre> <p>Restrictions</p> <p>No references to references No pointers to references No arrays of references Reference to pointer is ok</p>"},{"location":"cs/OOP/oop/#left-value-vs-right-value","title":"Left Value vs Right Value:","text":"<ul> <li>Left value can be simply regarded as value that can be used at the left of assignment<ul> <li>Variable,reference</li> <li>Result of operator <code>*, [] , . ,-&gt;</code></li> </ul> </li> <li>Right value are values can be used at the right hand of the assignment<ul> <li>Literal</li> <li>Expression</li> </ul> </li> </ul> <p>left-value reference:</p> <p>right-value reference:</p> <pre><code>void fun(int &amp;lref){\n    cout &lt;&lt; \"l-value reference\" &lt;&lt; endl;\n}\n\nvoid fun(int &amp;&amp;rref){\n    cout &lt;&lt; \"r-value reference\" &lt;&lt; endl;\n}\n\nint main(){\n    int a = 10;\n    fun(a); //l-value reference\n    fun(10); //r-value reference\n}\n</code></pre>"},{"location":"cs/OOP/oop/#const","title":"const","text":"<p><pre><code>void fun(const int &amp;clref){\n    cout &lt;&lt; \"const l-value reference\" &lt;&lt; endl;\n}\n</code></pre> Such a func can accept right-value when there is no func takes right-value</p> <pre><code>const int class_size = 1;\nint finalGrade[class_size]; //ok\nint x;\ncin &gt;&gt; x;\nconst int size = x;\nint grades[size]; //wrong\n\n\nchar * const p = \"abc\"; // p is const\n*p = 'c'; //error\np++; //error\nconst char *p = \"abc \"; //(*p) is const\n*p = 'b'; //error\n\n\nint *ip;\nconst int ci = 3;\nip = &amp;ci; //error\n</code></pre>"},{"location":"cs/OOP/oop/#const-objects","title":"Const objects","text":"<p>\u8be5\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u90fd\u662fconst</p> <pre><code>int Data::get_day() const{\n    //\u6b64\u65f6\u5c31\u65e0\u6cd5\u4fee\u6539\u6210\u5458\u53d8\u91cf,\u4e5f\u4e0d\u80fd\u5e26\u54e6\u7528non-const func\n}\n</code></pre>"},{"location":"cs/c/Cstandard/","title":"\u5e38\u7528\u6280\u5de7;","text":""},{"location":"cs/c/Cstandard/#_2","title":"\u7ed3\u6784\u4f53\u6392\u5e8f","text":"<pre><code>typedef struct {\n    int v1;\n    int v2;\n    int w;\n}edge;\n\nint cmp(const void *a,const void *b){\n    return (*(edge*)a).w - (*(edge*)b).w;\n}\n\nedge *edges = (edges*)malloc(sizeof(edge)*n);\nqsort(edges,n,sizeof(edge),cmp);\n</code></pre>"},{"location":"cs/c/Cstandard/#varible-function","title":"varible function","text":""},{"location":"cs/c/Cstandard/#stdioh","title":"stdio.h","text":""},{"location":"cs/c/Cstandard/#printf-dflagswidthprechiltype","title":"<code>printf  %d[flags][width][.prec][hil]type</code>","text":"<p>\u8fd4\u56de\u503c\uff1a\u8f93\u51fa\u7684\u5b57\u7b26\u6570</p> <p>flag:</p> <ul> <li>- \u5de6\u5bf9\u9f50</li> <li>+ \u5728\u524d\u8fb9\u653e+ \u6216 -</li> <li>(space) \u6b63\u6570\u7559\u7a7a</li> <li>0 0\u586b\u5145</li> </ul> <p>wdith or prec:</p> <ul> <li>number \u6700\u5c0f\u5b57\u7b26\u6570</li> <li>* \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u6570 <code>printf(\"%*d\",6,123);</code> \u5373 <code>printf(\"%6d\",123);</code></li> <li>.number \u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570</li> <li>.* \u4e0b\u4e00\u4e2a\u53c2\u6570\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570 </li> </ul> <p>type:</p> <ul> <li><code>printf(\"%dty%n\",12345,&amp;num);</code> <code>printf(\"%d\",num);</code>   \u6b64\u65f6\u7b2c\u4e8c\u4e2aprintf\u4e2dnum\u5927\u5c0f\uff0c\u5373\u4e3a\u7b2c\u4e00\u4e2aprintf\u8f93\u51fa\u5b57\u7b26\u7684\u4e2a\u6570(7)</li> </ul>"},{"location":"cs/c/Cstandard/#scanf-flagtype","title":"<code>scanf: %[flag]type</code>","text":"<p>\u8fd4\u56de\u503c\uff1a\u8bfb\u5165\u7684\u9879\u76ee\u6570</p> <p>flag:</p> <ul> <li>* \u8df3\u8fc7<ul> <li><code>scanf(\"%*d%d\",&amp;num);</code> \u5148\u8df3\u8fc7\u4e00\u4e2a\uff0c\u518d\u8bfb\u4e00\u4e2a\uff0c\u5982\u679c\u8f93\u5165123  345 \u90a3\u4e48\u8bfb\u5165345</li> </ul> </li> <li>\u6570\u5b57 \u6700\u5927\u5b57\u7b26\u6570</li> <li>[...] \u6240\u5141\u8bb8\u7684\u5b57\u7b26<ul> <li>\\(GPRMC,004319.00\uff0c   <code>scanf(\"%*[^,],%[^,]\",sTime)</code>\u90a3\u4e48\\)GPRMC\u662f\u9017\u53f7\u524d\u7684\uff0c\u90fd\u8df3\u8fc7\uff0c\u2018\uff0c\u2019\u4e5f\u8df3\u8fc7\uff0c\u53ea\u8bfb\u5230\u4e86004319.00</li> </ul> </li> </ul>"},{"location":"cs/c/Cstandard/#mathh","title":"math.h","text":"<pre><code>double acos(double x);\ndouble asin(double x);\ndouble atan(double x);\ndouble cos(double x);\ndouble sin(double x);\ndouble tan(double x);\ndouble exp(double x);\ndouble log(double x);\ndouble log10(double x);\ndouble pow(double x, double y);   //x\u4e3a\u5e95\u6570\uff0cy\u4e3a\u6307\u6570\ndouble sqrt(double x);\ndouble ceil(double x); \u8fd4\u56de\u5927\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5c0f\u7684\u6574\u6570\u503c\ndouble fabs(double x); \ndouble floor(double x); \u8fd4\u56de\u5c0f\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5927\u7684\u6574\u6570\u503c\n</code></pre>"},{"location":"cs/c/Cstandard/#stringh","title":"string.h","text":"<p><code>strlen(const char *s);</code> \u8fd4\u56des\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u4e0d\u5305\u542b\u7ed3\u5c3e\u76840\uff09</p> <ul> <li> <p>\u6bd4\u8f83\u51fd\u6570</p> <pre><code>int memcmp(const void *s1, const void *s2, size_t n);\nint strcmp(const char *s1, const char *s2);\nint strncmp(const char *s1, const char *s2, size_t n);\n//0: s1==s2\n// 1: s1&gt;s2\n//-1: s1&lt;s2\n</code></pre> </li> <li> <p>\u590d\u5236\u51fd\u6570     <pre><code>void *memcpy(void *dest, const void *src, size_t n);\nvoid *memmove(void *dest, const void *src, size_t n);\nchar *strcpy(char *dest, const char *src); \nchar *strncpy(char *dest, const char *src, size_t n);\n</code></pre></p> <pre><code>char *dst = (char*)malloc(strlen(src)+1);\nstrcpy(dst,src);\n</code></pre> </li> <li> <p>\u8fde\u63a5\u51fd\u6570     <pre><code>char *strcat(char *dest, const char *src);\nchar *strncat(char *dest, const char *src, size_t n);\n</code></pre></p> </li> <li> <p>\u67e5\u627e\u51fd\u6570     <pre><code>void *memchr(const void *s, int c, size_t n);\nchar *strchr(const char *s, int c);\nchar *strrchr(const char *s,int c); //\u4ece\u53f3\u8fb9search\nchar *strstr(const char *s1, const char *s2);\nchar *strcasestr(const char *s1,const char * s2); //\u5ffd\u7565\u5927\u5c0f\u5199\n//\u8fd4\u56deNULL\u8868\u793a\u6ca1\u6709\u627e\n</code></pre></p> </li> <li> <p>\u5bfb\u627e\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u64cd\u4f5c:</p> <pre><code>char s[] = \"Hello\";\nchar *p = strchr(s,'l');\np = strchr(p+1,'l');\n</code></pre> </li> <li> <p>\u590d\u5236\u67d0\u4e2a\u5b57\u7b26\u524d\u7684\u5185\u5bb9</p> <pre><code>char s[] = \"Hello\";\nchar *p = strchr(s,'l');\nchar c = *p;\n*p = '\\0';\nchar *t = (char*)malloc(strlen(s)+1);\nstrcpy(t,s);\nprintf(\"%s\",t);\nfree(t);\n*p = c;\n</code></pre> </li> </ul>"},{"location":"cs/c/Cstandard/#stdlibh","title":"stdlib.h","text":"<p>\u968f\u673a\u6570</p> <p><pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;time.h&gt;\n\nint main()\n{\n    srand(time(0));\n    int a = rand();\n\n    //a\u4e3a\u968f\u673a\u6570\n}\n</code></pre> * \u6574\u6570\u7b97\u672f\u51fd\u6570     <pre><code>int abs(int n); //\u7edd\u5bf9\u503c\ndiv_t div(int numer, int denom); //\u8ba1\u7b97\u5546\u548c\u4f59\uff0c\u7ed3\u679c\u4f5c\u4e3a`div_t`\u7684\u7ed3\u6784\u8fd4\u56de\uff0c\u8fd9\u4e2a\u7ed3\u6784\u5305\u542b\u6210\u5458`quot`\u548c`rem`\nlong labs(long n); //\u7c7b\u4f3c\u4e8eabs\uff0c\u4f46\u7528\u4e8e\u957f\u6574\u6570\nldiv_t ldiv(long numer, long denom); //\u7528\u4e8e\u957f\u6574\u6570\n</code></pre> * \u67e5\u627e\u548c\u6392\u5e8f\u51fd\u6570     <pre><code>void *bsearch(const void *key, const void *base, size_t n, size_t size, int (*compar)(const void *, const void *));\n\nvoid qsort(void *base, size_t n, size_t size, int (*compar)(const void *, const void *));\n</code></pre></p> <p>qsort\u8be6\u89e3</p> <ul> <li> <p><code>base</code>\u6570\u7ec4\u540d\uff0c\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u7ec4\u5143\u7d20\u6240\u5360\u5b57\u8282\uff08int\uff0cdouble\uff09\uff0c\u6392\u5e8f\u539f\u5219\uff08\u9012\u589e\uff0c\u9012\u51cf\uff0c\u5947\u5076\u4ea4\u53c9\uff09\uff0c\u5728\u4f7f\u7528qsort\u524d\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff1a</p> <p><pre><code>#include&lt;stdlib.h&gt;\nint cmp(const void *a,const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n//\u6b64\u65f6\u8868\u793a\u9012\u589e\uff0c\u82e5\u60f3\u9012\u51cf\u53ea\u9700\u5c06a\uff0cb\u6362\u4f4d\nqsort(num,n,sizeof(int),cmp)\n</code></pre> <pre><code>//\u6d6e\u70b9\u6570\uff08double\uff09 \n\n//\u9700\u8981\u6ce8\u610f\u6d6e\u70b9\u6570\u4f1a\u5b58\u5728\u7cbe\u5ea6\u635f\u5931\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6bd4\u8f83\uff0c\u6765\u8fd4\u56de1\u6216-1\uff0c\u4ee5\u786e\u5b9a\u662f\u589e\u5e8f\u8fd8\u662f\u964d\u5e8f\u3002\nint cmp(const void *a,const void *b) {\n    return *(double*)a&gt;*(double*)b?1:-1;\n}\n</code></pre></p> <pre><code>//\u5b57\u7b26\nint cmp(const void *a,const void *b) {\n    return *(char*)a-*(char*)b;\n}\n</code></pre> <pre><code>//\u7ed3\u6784\u4f53\nstruct node{\n    int i;\n    double j;\n    char k;\n};\nint cmp(const void *a,const void *b) {\n    return (*(node*)a).i-(*(node*)b).i;\n}\n</code></pre> </li> </ul> <p>bsearch\u8be6\u89e3</p> <ul> <li> <p><code>key</code>\u6307\u5411\u8981\u67e5\u627e\u7684\u5143\u7d20\u7684\u6307\u9488\uff0c<code>base</code>\u6570\u7ec4\u540d,\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u7ec4\u5143\u7d20\u6240\u5360\u5b57\u8282(int,double),\u6bd4\u8f83\u539f\u5219\uff0c\u5982\u679c\u67e5\u627e\u6210\u529f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u4e2d\u5339\u914d\u5143\u7d20\u7684\u6307\u9488\uff0c\u5426\u5219\u8fd4\u56de\u7a7a\u6307\u9488</p> <pre><code>//\u6bd4\u8f83\u539f\u5219\uff1a\nint cmpfunc(const void * a, const void * b)\n{\nreturn ( *(int*)a - *(int*)b );\n}\n</code></pre> </li> <li> <p>\u6587\u672c\u8f6c\u6362</p> <pre><code>double atof(const char *str); //\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cc\u8fdb\u5ea6\u6d6e\u70b9\u6570\nint atoi(const char *str); //\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6574\u6570,\u5b57\u7b26\u4e32\u4e2d\u5fc5\u987b\u8981\u6709\u7ec8\u6b62\u7b26\nlong atol(const char *str); //\u8f6c\u5316\u4e3a\u957f\u6574\u6570\ndouble strtod(const char *str, char **endptr); \nlong strtol(const char *str, char **endptr, int base); //base \u57fa\u6570\uff0c\u5fc5\u987b\u4ecb\u4e8e 2 \u548c 36\uff08\u5305\u542b\uff09\u4e4b\u95f4\uff0c\u6216\u8005\u662f\u7279\u6b8a\u503c 0\u3002\u5982\u679c base \u4e3a 0\uff0c\u5219\u4f1a\u6839\u636e\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u6765\u5224\u65ad\u8fdb\u5236\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u4ee5 '0x' \u6216 '0X' \u5f00\u5934\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u5341\u516d\u8fdb\u5236\uff1b\u5982\u679c\u5b57\u7b26\u4e32\u4ee5 '0' \u5f00\u5934\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u516b\u8fdb\u5236\uff1b\u5426\u5219\u5c06\u5176\u89c6\u4e3a\u5341\u8fdb\u5236\u3002base \u4e3a10\u65f6\uff0c\u5373\u4e3a\u5341\u8fdb\u5236\nunsigned long strtoul(const char *str, char **endptr, int base);\n</code></pre> <p>strtod\u7684\u5b9e\u4f8b\uff1a <pre><code>int main()\n{\nchar str[30] = \"20.30300 This is test\";\nchar *ptr;\ndouble ret;\n\nret = strtod(str, &amp;ptr);\nprintf(\"\u6570\u5b57\uff08double\uff09\u662f %lf\\n\", ret);\nprintf(\"\u5b57\u7b26\u4e32\u90e8\u5206\u662f |%s|\", ptr);\n\nreturn(0);\n}\n</code></pre></p> <pre><code>\u6570\u5b57\uff08double\uff09\u662f 20.303000\n\u5b57\u7b26\u4e32\u90e8\u5206\u662f | This is test|\n</code></pre> </li> <li> <p>\u5185\u5b58\u7ba1\u7406     <pre><code>void *calloc(size_t nobj, size_t size);\nvoid free(void *ptr);\nvoid *malloc(size_t size);\nvoid *realloc(void *ptr, size_t size);\n</code></pre></p> <ul> <li> <p>malloc\uff08\u52a8\u6001\u5185\u5b58\uff09free()</p> <ul> <li>\u8fd4\u56de\u7684\u7ed3\u679c\u662fvoid* ,\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u4e3a\u6240\u9700\u7684</li> <li>(int)malloc(nsizeof(int))</li> <li>\u6700\u540e\u9700\u8981free</li> <li>\u7533\u8bf7\u5931\u8d25\u5219\u8fd4\u56de0\uff0c\u6216\u8005\u53eb\u505aNULL</li> <li>free()\u5c06\u7533\u8bf7\u7684\u6765\u7684\u7a7a\u95f4\u8fd8\u7ed9\u7cfb\u7edf</li> </ul> <pre><code>void *p;\nint i;\np = malloc(3);\nfree(p); //right\np = &amp;i;\nfree(p); //wrong\n</code></pre> </li> <li> <p>calloc\u4e0emalloc\u7684\u533a\u522b\u662f\uff0ccalloc\u4f1a\u5c06\u5206\u914d\u7684\u5185\u5b58\u521d\u59cb\u5316\u4e3a0     <pre><code>int i, n;\nint *a;\nscanf(\"%d\",&amp;n);\na = (int*)calloc(n, sizeof(int));\nfor( i=0 ; i &lt; n ; i++ ) \n{\n    scanf(\"%d\",&amp;a[i]);\n}\n</code></pre></p> </li> <li> <p>realloc\u5c1d\u8bd5\u8c03\u6574\u4e4b\u524d\u7528malloc\u6216calloc\u6240\u5206\u914d\u7684ptr\u6240\u6307\u5411\u7684\u5185\u5b58\u5927\u5c0f\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs/c/Cstandard/#ctypeh","title":"ctype.h","text":"<p>\u5b57\u7b26\u5224\u65ad\u51fd\u6570</p> <pre><code>int isalnum(int c) //\u68c0\u67e5\u6240\u4f20\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\u548c\u6570\u5b57,\u5426\u5219\u8fd4\u56de0\nint isalpha(int c) //\u5b57\u6bcd\nint isdigit(int c) //\u6570\u5b57\nint islower(int c)  //\u5c0f\u5199\nint isupper(int c) //\u5927\u5199\nint isspace(int c) //\u7a7a\u767d\u5b57\u7b26\uff0c\u5224\u65ad\u7a7a\u683c\uff0c\u6c34\u5e73\u5236\u8868\u7b26\\t,\u6362\u884c\u7b26\\n,\u56de\u8f66\u7b26\\r,\u6362\u9875\u7b26\\f,\u5782\u76f4\u5236\u8868\u7b26\\v\nint isblank(int c) //\u7a7a\u683c\u5b57\u7b26\uff0c\u4ec5\u5224\u65ad\u7a7a\u683c\uff0c\u6c34\u5e73\u5236\u8868\u7b26\\t\n</code></pre> <p>\u5b57\u7b26\u8f6c\u6362\u51fd\u6570</p> <ul> <li><code>int tolower(int c)</code></li> <li><code>int toupper(int c)</code></li> </ul>"},{"location":"cs/system/CSAPP/","title":"CSAPP","text":"<p>Abstract</p> <p>\u672c\u7b14\u8bb0\u53c2\u8003\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf(CSAPP)\u300b 3.6~3.12\u7ae0\u8282\u8fd8\u672a\u9605\u8bfb!!!</p>"},{"location":"cs/system/CSAPP/#rounding-binary-numbers","title":"Rounding binary numbers:","text":"<ul> <li>Binary Fractional Numbers</li> <li>\"Even\" when least significant bit is 0;</li> <li>\"Half way\" when bits to right of rounding position = $ 100.._{2} $ </li> </ul>"},{"location":"cs/system/CSAPP/#1","title":"1.\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38","text":"<ul> <li>\u4e09\u79cd\u6570\u5b57\u8868\u793a:</li> <li>\u65e0\u7b26\u53f7</li> <li>\u8865\u7801\uff08\u8868\u793a\u6709\u7b26\u53f7\u7684\u6570\u5b57\uff09</li> <li>\u6d6e\u70b9\u6570</li> <li>\u6ea2\u51fa(overflow): </li> <li>\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b\u662f\u53ef\u884c\u7684:\\(200*300*400*500 = -884907888\\)</li> <li>\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u53ef\u7ed3\u5408\u7684:eg:\\((3.14+1e20)-1e20 = 0.0\\)\u800c\\(3.14+(1e20-1e20) = 3.14\\)</li> </ul>"},{"location":"cs/system/CSAPP/#2","title":"2.\u4fe1\u606f\u7684\u8868\u793a\u548c\u5904\u7406","text":""},{"location":"cs/system/CSAPP/#21","title":"2.1 \u4fe1\u606f\u50a8\u5b58","text":"<ul> <li>\u865a\u62df\u5185\u5b58(virtual memotry): \u673a\u5668\u7ea7\u7a0b\u5e8f\u5c06\u5185\u5b58\u89c6\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u5b57\u8282\u6570\u7ec4\uff0c\u79f0\u4e3a\u865a\u62df\u5185\u5b58</li> <li>\u5730\u5740(address)\uff1a \u5185\u5b58\u7684\u6bcf\u4e2a\u5b57\u8282\u90fd\u7531\u4e00\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u6765\u6807\u8bc6\uff0c\u6210\u4e3a\u4ed6\u7684\u5730\u5740</li> <li>\u865a\u62df\u5730\u5740\u7a7a\u95f4(virtual address space)\uff1a\u6240\u6709\u53ef\u80fd\u5730\u5740\u7684\u96c6\u5408\u5c31\u6210\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4</li> </ul>"},{"location":"cs/system/CSAPP/#_1","title":"\u8fdb\u5236\u8f6c\u6362","text":"<ul> <li>Decimal-\u5341\u8fdb\u5236 Binary-\u4e8c\u8fdb\u5236 Octal-\u516b\u8fdb\u5236 Hexadecimal-16\u8fdb\u5236</li> <li>\u8f6c\u5316\u4e3a10\u8fdb\u5236\uff1a</li> <li>\\((100101.01)_2 = (37.25)_{10}\\)</li> <li>\\((3A.CH) = (59.875)_{10}\\)</li> <li>10\u8fdb\u5236\u8f6c\u5316\u4e3a\u5176\u4ed6\u8fdb\u5236(\u81ea\u5df1\u638c\u63e1\u8ba1\u7b97\u65b9\u6cd5):</li> <li>\\((1350.6875)_{10} = (1000 0111)_2\\)</li> <li>\\(()_(10) = (0.1011)_2\\)</li> <li>8-&gt;2,16-&gt;2\u6ce8\u610f\u6280\u5de7</li> <li>\\(2^{10}\\) is kilo,denoted by K</li> <li>\u4e8c\u8fdb\u5236\u52a0\u51cf\u4e58\u9664(\u5176\u5b9e\u7c7b\u4f3c\u5341\u8fdb\u5236)</li> </ul>"},{"location":"cs/system/CSAPP/#211","title":"2.1.1 \u5341\u516d\u8fdb\u5236\u8868\u793a\u6cd5","text":"<ul> <li>\u4e00\u4e2a\u5b57\u8282\u67098\u4f4d\uff0c\u503c\u57df\\(0_{10} - 255_{10}\\)</li> <li>\\(x = 2^n\\)\u65f6,\\(n = i+4j\\),\u6240\u4ee5\u5f00\u5934\u7684\u5341\u516d\u8fdb\u5236\u6570\u5b57\u4e3a\\(1(i=0),2(i=1),4(i=2),8(i=3)\\),\u540e\u9762\u8ddf\u968f\u7740j\u4e2a\u5341\u516d\u8fdb\u5236\u76840</li> </ul>"},{"location":"cs/system/CSAPP/#213","title":"2.1.3 \u5bfb\u5740\u548c\u5b57\u8282\u987a\u5e8f","text":"<ul> <li>\u5bf9\u8c61\u7684\u5730\u5740\u4e3a\u6240\u4f7f\u7528\u5b57\u8282\u4e2d\u6700\u5c0f\u7684\u5730\u5740</li> <li>\u5c0f\u7aef\u6cd5(little endian): \u6700\u4f4e\u6709\u6548\u5b57\u8282\u5728\u6700\u524d\u8fb9\u7684\u65b9\u5f0f</li> <li>\u5927\u7aef\u6cd5(big endian): \u6700\u9ad8\u6709\u6548\u5b57\u8282\u5728\u6700\u524d\u8fb9\u7684\u65b9\u5f0f(\u4f8b\u5b50pg:29)</li> </ul>"},{"location":"cs/system/CSAPP/#214","title":"2.1.4","text":"<p>C\u8bed\u8a00\u5b57\u7b26\u4e32\u88ab\u7f16\u7801\u4e3a\u4e00\u4e2a\u4ee5null(\u503c\u4e3a0)\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4,eg:\"12345\"-&gt;\"31 32 33 34 35 00\"</p> <ul> <li>ASCII\u7801:\"0\" -&gt; 32 \"A\" -&gt; 65 \"a\" -&gt; 97</li> </ul>"},{"location":"cs/system/CSAPP/#214_1","title":"2.1.4 \u5e03\u5c14\u4ee3\u6570\u7b80\u4ecb","text":"<ul> <li>\u975e: ~ , \u4e0e: &amp; , \u6216: | , \u5f02\u6216: ^</li> <li>\u4f4d\u7ea7\u8fd0\u7b97\u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u6cd5\u662f\u5b9e\u73b0\u63a9\u7801\u8fd0\u7b97,\u63a9\u7801\\(0xFF\\)\u8868\u793a\u4e00\u4e2a\u5b57\u7684\u4f4e\u4f4d\u5b57\u8282,\u800c\u5176\u4ed6\u7684\u5b57\u8282\u5c31\u88ab\u7f6e\u4e3a0\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\\(x = 0x89ABCDEF\\),\\(x\\&amp;0xFF = 0x000000EF\\)</li> </ul>"},{"location":"cs/system/CSAPP/#22","title":"2.2 \u6574\u6570\u8868\u793a","text":""},{"location":"cs/system/CSAPP/#223","title":"2.2.3 \u8865\u7801\u7f16\u7801","text":"<ul> <li>\\(TMax_w = 2^{w-1}-1\\)</li> </ul>"},{"location":"cs/system/CSAPP/#226","title":"2.2.6 \u6269\u5c55\u4e00\u4e2a\u6570\u5b57\u7684\u4f4d\u8868\u793a","text":"<ul> <li>\u65e0\u7b26\u53f7\u6570:\uff0c\u5728\u8868\u5934\u6dfb\u52a00\uff0c\u79f0\u4e3a\u96f6\u6269\u5c55</li> <li>\u8865\u7801\u6570:\u5728\u8868\u793a\u4e2d\u6dfb\u52a0\u6700\u9ad8\u6709\u6548\u4f4d\u7684\u503c\uff0c\u79f0\u4e3a\u7b26\u53f7\u6269\u5c55\uff0ceg: 101-&gt;1101-&gt;11101 \u90fd\u8868\u793a-3</li> </ul>"},{"location":"cs/system/CSAPP/#227","title":"2.2.7 \u622a\u65ad\u6570\u5b57","text":"<ul> <li>\u65e0\u7b26\u53f7\u6570\uff1a\u622a\u65adk\u4f4d \\(x_1 = xmod2^k\\)</li> <li>\u6709\u7b26\u53f7\u6570\uff1a\u622a\u65adk\u4f4d \\(x_1 = xmod2^k\\) if \\(-2^{k-1}&lt;=x&lt;2^{k-1}\\)</li> </ul>"},{"location":"cs/system/CSAPP/#_2","title":"\u539f\u7801\uff0c\u53cd\u7801\uff0c\u8865\u7801","text":"<p>\u793a\u4f8b\u7528\u516b\u4f4d\u4e8c\u8fdb\u5236\u7684\u539f\u7801\u8868\u793a</p> <p>\u539f\u7801: \u6700\u9ad8\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c0\u8868\u793a\u6b63\u6570\uff0c1\u8868\u793a\u8d1f\u6570 * +1 = 0000 0001 * -1 = 1000 0001  \u53cd\u7801: \u6b63\u6570\u7684\u53cd\u7801\u662f\u5176\u539f\u7801\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u4f4d\u53d6\u53cd * +1 = 0000 0001 * -1 = 1111 1110 \u8865\u7801: \u6b63\u6570\u7684\u8865\u7801\u662f\u5176\u539f\u7801\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u4f4d\u53d6\u53cd\u540e\u52a01 * +1 = 0000 0001 * -1 = 1111 1111</p> <p>\u8865\u7801-&gt;\u539f\u7801 * If is a negative number,then invert the bits of value part,and add 1 to the result.</p> <p>\u8ba1\u7b97\u673a\u5b9e\u9645\u53ea\u5b58\u50a8\u8865\u7801\uff0c-128\u7684\u8865\u7801\u662f[1000 0000],\u6240\u4ee5\u516b\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u5b58\u50a8\u8303\u56f4\u662f[-128,127]</p> <p>The machine code before and after the conversion is unchanged,but reinterpreted.</p> <ul> <li>Logical operators in C alwats return 0 or 1 (&amp;&amp; || !) </li> <li><code>!0x41 -&gt; 0x00</code> </li> <li><code>!0x00 -&gt; 0x01</code></li> <li>In C,int is cast to unsigned!</li> <li>Sign Extension:</li> <li>Make k copies of sign bit</li> <li>$ X' = x_{w-1},x_{w-1}.......x_{w-1},x_{w-2}....,x_{0} $ </li> </ul>"},{"location":"cs/system/CSAPP/#23-interger-arithmetic","title":"2.3 Interger Arithmetic(\u6574\u6570\u8fd0\u7b97)","text":""},{"location":"cs/system/CSAPP/#231-unsigned-addition","title":"2.3.1 Unsigned Addition","text":"<p>\u6b64\u5904\u8fc7\u4e8e\u7e41\u7410,\u672a\u6765\u5220\u51cf</p> <ul> <li>if $ x + y_{u} &gt; 2^{w+1} $ , $ x + y_{u} = x+y - 2^w $  </li> <li>Detecting overflow: $ s = x+y_{u} $ if $ s &lt; x $ or $ s &lt; y $, then the computation of s overflowed </li> <li>Unsigned negation:$ -x_w = 2^w-x $ if $ x &gt; 0 $ </li> </ul>"},{"location":"cs/system/CSAPP/#232-twos-complement-addition","title":"2.3.2 Two's-Complement Addition","text":"<p>\u6b64\u5904\u8fc7\u4e8e\u7e41\u7410,\u672a\u6765\u5220\u51cf</p> \\[ x + y_{t} = \\begin{cases}   x+y-2^{w}, 2^{w-1} &lt;= x+y \\\\    x+y \\\\   x+y+2^{w},x+y&lt;-2{w}-1 \\end{cases} \\] <ul> <li>Detecting positive overflow: x&gt;0,y&gt;0 but s&lt;0</li> <li>Detecting negative overflow: x&lt;0,y&lt;0 but s&gt;0</li> <li>Two's-Complement Negateion:</li> </ul> \\[ -x_{t} = \\begin{cases}   TMin_{w},x = TMinw \\\\   -x, x&gt;TMin_{w} \\end{cases} \\]"},{"location":"cs/system/CSAPP/#236-multiplying-by-constants","title":"2.3.6 Multiplying by Constants","text":"<ul> <li>Mutiply\u975e\u5e38\u8017\u8d39\u65f6\u95f4,\u6240\u4ee5\u901a\u5e38\u8f6c\u5316\u4e3a\u4e0e2\u76f8\u4e58\u7136\u540e\u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c.\u4f8b\u5982$ 14 = 2^{3} + 2^{2} + 2 \\(,\u6240\u4ee5\\) x * 14 = x2^{3} + x * 2^{2} + x2 $ or ${x * 14 = x2^{4} - x2}  $</li> <li>\u4e58\u4ee5$ 2_{w} $ \u76f8\u5f53\u4e8e\u5de6\u79fbw\u4f4d</li> </ul>"},{"location":"cs/system/CSAPP/#237-dividing-by-power-of-2","title":"2.3.7 Dividing by Power of 2","text":"<ul> <li>Division is slower than Multiplication</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570\uff0c\u6211\u4eec\u65e0\u6cd5\u5c06\u5176\u7b80\u5355\u5730\u8f6c\u4e3a\u9664\u4ee5\u591a\u4e2a2\u7684\u5e42\u6b21\u76f8\u52a0\u7684\u60c5\u51b5,\u56e0\u4e3a\u9664\u6cd5\u6709\u820d\u5165\u7684\u95ee\u9898(\u5c0f\u6570\u70b9\u820d\u53bb),\u5982\u679c\u5c06\u5176\u7b80\u5355\u7684\u5206\u89e3\u4e3a\u591a\u4e2a\u6570\u76f8\u9664\uff0c\u90a3\u4e48\u5c0f\u6570\u7684\u90e8\u5206\u5c06\u4f1a\u5168\u90e8\u88ab\u820d\u53bb\uff0c\u8fd9\u5c06\u4f1a\u5bfc\u81f4\u6700\u7ec8\u7684\u7ed3\u679c\u4e0e\u6211\u4eec\u6240\u9884\u671f\u7684\u76f8\u5dee\u8fc7\u5927,</li> <li>\u9664\u4ee5$ 2^{w} $\u76f8\u5f53\u4e8e\u53f3\u79fbw\u4f4d:</li> <li>Unsigned:$ [x_{w-1},x_{w-2},.....,x_{0}] -&gt; [0,0,0,x_{w-1},...x_{0}]$ </li> <li>Signed: $ [x_{w-1},....,x_{0}] -&gt; [x{w-1},x_{w-1},x_{w-1},x_{w-1},...,x_{0}]$</li> </ul>"},{"location":"cs/system/CSAPP/#24-floating-point","title":"2.4 Floating Point","text":""},{"location":"cs/system/CSAPP/#241-fractional-binary-numbers","title":"2.4.1 Fractional Binary Numbers","text":"<ul> <li>Fractional binary numbers notation can only representation numbers that can be written $x*2^{y} $.For example $\\frac{1}{5} $ canot be represented exactly in binary,so it is an approximation.</li> </ul>"},{"location":"cs/system/CSAPP/#242-ieee-floating-point-representation","title":"2.4.2 IEEE Floating-Point Representation","text":"<p>$V = (-1)^{s}M2^{E} $  * single precision: 32 bits   * 1 bit for sign S   * 8 bits for exponent E   * 23 bits for fraction M * double precision: 64 bits   * 1 bit for sign S   * 11 bits for exponent E    * 52 bits for fraction M</p>"},{"location":"cs/system/CSAPP/#_3","title":"\u89c4\u683c\u5316\u7684\u503c:","text":"<p>exp\u7684\u4f4d\u6a21\u5f0f\u4e0d\u5168\u4e3a0,\u4e5f\u4e0d\u5168\u4e3a1\u65f6.\u4ee5\u504f\u7f6e(bias)\u5f62\u5f0f\u8868\u793a,\u9636\u7801\u7684\u503c$E=exp-bias $ ,\u5176\u4e2d$bias $ \u662f$2^{k-1}-1 \\(,k\u662fE\u7684\u4f4d\u6570.\u5c3e\u6570\\)M=1+f $ </p>"},{"location":"cs/system/CSAPP/#_4","title":"\u975e\u89c4\u683c\u5316:","text":"<ul> <li>\u9636\u7801\u5168\u4e3a0,\u5c3e\u6570\u4e0d\u4e3a0,\u8868\u793a\u7684\u662f\u4e00\u4e2a\u975e\u5e38\u63a5\u8fd10\u7684\u6570,\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c3e\u6570$M=f $</li> </ul>"},{"location":"cs/system/CSAPP/#_5","title":"\u7279\u6b8a\u503c:","text":"<p>\u9636\u7801\u5168\u4e3a1,\u5c3e\u6570\u5168\u4e3a0,\u8868\u793a\u7684\u662f\u65e0\u7a77\u5927. \u9636\u7801\u5168\u4e3a1,\u5c3e\u6570\u4e0d\u4e3a0,\u8868\u793a\u7684\u662fNaN(Not a Number)</p>"},{"location":"cs/system/CSAPP/#244-rounding","title":"2.4.4 Rounding(\u820d\u5165)","text":"<p>\u5411\u5076\u6570\u820d\u5165(round to even): \u4fdd\u8bc1\u4e86\u820d\u5165\u540e\u7684\u7ed3\u679c\u662f\u6700\u63a5\u8fd1\u539f\u59cb\u503c\u7684.The least significant digit of the result is evev.Thus it rounds $1.50 and $2.50 to $2 \u5411\u96f6\u820d\u5165(round toward zero): \u820d\u5165\u7ed3\u679c\u603b\u662f\u54110\u9760\u62e2</p>"},{"location":"cs/system/CSAPP/#245-floating-point-operations","title":"2.4.5 Floating-Point Operations","text":"<p>\u8ba1\u7b97\u4e0d\u662f\u4e00\u5b9a\u7cbe\u51c6\u7684\uff01 * $(3.14 + 1e10) - 1e-10 = 0 $ ,because value 3.14 is lost due to rounding  * \\(1e10 * 1e10 * 1e-10 = \u6b63\u65e0\u7a77\\) while \\(1e10 *(1e10*1e-10) = 1e10\\) * \\(1e20 * 1e20 - 1e20 * 1e20 = NaN\\)</p>"},{"location":"cs/system/CSAPP/#246-floating-point-in-c","title":"2.4.6 Floating-Point in C","text":"<ul> <li>Conversions/Casting</li> <li>Casting between int,float,duble changes bit representation,and the underlying bit partten is not changed </li> <li> <p>double/float -&gt; int</p> <ul> <li>Truncates fractional bit</li> <li>Like rouding toward zero</li> </ul> </li> <li> <p>\\(x * x\\) can be a negative number,because the overflow</p> </li> </ul>"},{"location":"cs/system/CSAPP/#3machine-level-representation-of-programs","title":"3.Machine-Level Representation of Programs","text":"<p>\u63d0\u793a</p> <p>\u7531\u4e8e\u7b14\u8005\u5df2\u7ecf\u5b66\u8fc7\u4e86\u4e9b\u8bb8\u6c47\u7f16,\u6240\u4ee5\u672c\u90e8\u5206\u5185\u5bb9\u4f1a\u6bd4\u8f83\u7b80\u7565,\u6b64\u5904\u7684\u662fx86 assembly,\u5e76\u4e143.6~3.12\u7ae0\u8282\u8fd8\u672a\u9605\u8bfb</p>"},{"location":"cs/system/CSAPP/#32-program-encodings","title":"3.2 Program Encodings","text":"<p><code>linux&gt; gcc -Og -o p p1.c p2.c</code> <code>-Og</code>\u8868\u793a\u4f18\u5316\u7b49\u7ea7\uff0c<code>-o</code>\u8868\u793a\u8f93\u51fa\u6587\u4ef6\u540d</p> <p>The gcc command invokes an entire sequence of programs to turn the source code into executable code. 1. C Preprocessor(\u9884\u5904\u7406) expands the source code to include any files spcified with #include commands and to expand any macros(\u5b8f) 2. The compiler generates assembly code versions of the two source files having names p1.s and p2.s 3. assembler(\u6c47\u7f16\u5668) converts the assembly code into binary object-code files(\u76ee\u6807\u4ee3\u7801\u6587\u4ef6) p1.o and p2.o</p> <p>The object code is one form of machine code-it contains binary representations of all the instructions,but the addresses of global values are not yet filled in.</p> <ol> <li>The linker(\u94fe\u63a5\u5668) merges these two object-code files along with code implementing library functions(eg:printf) to produce the executable file p</li> </ol> <p>Executable code is the second form of machine code.It is the exact form of code that is executed by the processor</p>"},{"location":"cs/system/CSAPP/#321-machine-level-code","title":"3.2.1 Machine-Level Code","text":"<p>Assembly code makes no difference between signed and unsigned numbers,between different type of pointers,between pointer and integer.</p> <p>At any given time,only limited subrange of virtual memory are considered valid.Now,the upper 16 bits must be set to zero,so an address is potentially specified a byte over \\(2^{48}\\) </p> <p>The operating system manages this virtual address space,translating virtual addresses into physical addresses of values in the actual processor memory.</p>"},{"location":"cs/system/CSAPP/#322-code-examples","title":"3.2.2 Code Examples","text":"<ul> <li>To see the assembly code generated by the compiler,<code>gcc -Og -S xxx.c</code></li> <li>To see the object code generated by the compiler,<code>gcc -Og -c xxx.c</code></li> <li><code>pushq</code> indicates that the contents of register %rbx should be pushed onto the program stack</li> </ul> <p>In linux,<code>objdump -d xxx.o</code> can be used to see the assembly code of the object code file(machine-code)</p>"},{"location":"cs/system/CSAPP/#34-accessing-information","title":"3.4 Accessing Information(\u8bbf\u95ee\u4fe1\u606f)","text":"<p>general-purpose registers(\u901a\u7528\u5bc4\u5b58\u5668): used to store integer data as well as pointers.</p>"},{"location":"cs/system/CSAPP/#341-operand-specifiers","title":"3.4.1 Operand Specifiers(\u64cd\u4f5c\u6570\u6307\u793a\u7b26)","text":"<p>Three types of operand specifiers: * immediate(\u7acb\u5373\u6570):for constant values,written wiht a <code>$</code> followed by an integer using standard C notation.eg:<code>$-577</code> or <code>$0x1F</code>(In ATT-format) * Register:  * Memory:</p>"},{"location":"cs/system/CSAPP/#342-data-movement-instructions","title":"3.4.2 Data Movement Instructions","text":"<p>When <code>movl</code> has a register as the destination,it will also set the high-order 4 bytes of the register to 0.(l means double word,a word is bytes in x86-64),but ohter <code>mov</code> instructions will not do this.</p>"},{"location":"cs/system/CSAPP/#35-arithmetic-and-logical-operations","title":"3.5 Arithmetic and Logical Operations","text":""},{"location":"cs/system/CSAPP/#351-load-effective-address","title":"3.5.1 Load Effective Address","text":"<p>ld is actually a variant of the mov instruction that reads from memory to a register</p> <p>And we just need to know that in x86,there are Unary and Binary Operations(\u4e00\u5143\u548c\u4e8c\u5143\u64cd\u4f5c). For exmaple , <code>incq(%rsp)</code> causes the value in the stack pointer to be incremented by 1,just like <code>a++</code> in C. And <code>subq,%rax,%rdx</code> causes the value in register %rax to be subtracted from the value in register %rdx,with the result being stored in %rdx.<code>(rdx -= rax)</code></p>"},{"location":"cs/system/CSAPP/#355-special-arithmetic-operations","title":"3.5.5 Special Arithmetic Operations","text":"<p>x86-64\u6307\u4ee4\u96c6\u4e2d\u6709\u5bf9128\u4f4d\u6570\u7684\u64cd\u4f5c,\u4f8b\u5982<code>imulq,idivq</code>(\u7b26\u53f7\u6570)\u548c<code>mulq,divq</code>(\u65e0\u7b26\u53f7\u6570)</p>"},{"location":"cs/system/CSAPP/#4processor-architecture","title":"4.Processor Architecture","text":""},{"location":"cs/system/CSAPP/#41-the-y86-64-instruction-set-architecture","title":"4.1 The Y86-64 Instruction Set Architecture","text":"<p>\u63d0\u793a</p> <p>\u7531\u4e8e\u6211\u4eec\u5b66\u7684\u662fRISC-V\u6307\u4ee4\u96c6,\u6240\u4ee5\u8fd9\u90e8\u5206\u5185\u5bb9\u6211\u4e5f\u53ea\u662f\u5927\u81f4\u770b\u4e86\u4e00\u4e0b,\u5e76\u628a\u4e2a\u4eba\u8ba4\u4e3a\u6709\u7528\u7684\u5185\u5bb9\u8bb0\u5f55\u4e86\u4e00\u4e0b,\u5e76\u4e0d\u5168\u9762,\u5982\u679c\u5bf9Y86-64\u6307\u4ee4\u96c6\u6709\u6df1\u5165\u7814\u7a76\u7684\u9700\u6c42\u518d\u53bb\u4ed4\u7ec6\u9605\u8bfb\u539f\u6587</p>"},{"location":"cs/system/CSAPP/#42-logic-design-and-the-hardware-control-language-hcl","title":"4.2 Logic Design and the Hardware Control Language HCL","text":"<p>Three major components are required to implement a digital system: * combinational logic to compute functions on the bits  * memory elements to store bits * clock signals to regulate the updating of the memory elements.</p> <p>\u5bc4\u5b58\u5668\u4e0d\u662f\u7ec4\u5408\u7535\u8def,\u56e0\u4e3a\u5b83\u6709\u5185\u90e8\u5b58\u50a8.\u4f46\u662f\u8bfb\u5bc4\u5b58\u5668\u662f\u4e0d\u9700\u8981\u65f6\u949f\u4fe1\u53f7\u7684,\u4e0d\u8fc7\u5199\u5165\u5bc4\u5b58\u5668\u662f\u7531\u65f6\u949f\u4fe1\u53f7\u63a7\u5236\u7684</p>"},{"location":"cs/system/CSAPP/#43-y86-64","title":"4.3 Y86-64 \u7684\u987a\u5e8f\u5b9e\u73b0","text":"<p>Note</p> <p>\u8fd9\u4e00\u8282\u5c31\u662f\u5b9e\u73b0\u5355\u5468\u671fCPU\u7684\u5185\u5bb9,\u7531\u4e8e\u5df2\u7ecf\u8ba1\u7b97\u673a\u7cfb\u7edf\u2160\u505a\u8fc7\u4e86,\u6240\u4ee5\u7565\u8fc7</p>"},{"location":"cs/system/CSAPP/#44-general-priciples-of-pipelining","title":"4.4 General Priciples of Pipelining","text":"<p>A key feature of pipelining is that it increases the throughput(\u541e\u5410\u91cf) of the system(i.e., the number of customers served per unit time), but it may also slightly increase the latency(\u5ef6\u8fdf) (i.e., the time required to service an individual customer)</p>"},{"location":"cs/system/CSAPP/#443-limitations-of-pipelining","title":"4.4.3 Limitations of Pipelining","text":"<ul> <li>Nonuniform Partitioning(\u4e0d\u4e00\u81f4\u7684\u5212\u5206): \u6bcf\u4e2a\u9636\u6bb5\u7684\u5ef6\u8fdf\u662f\u4e0d\u4e00\u81f4\u7684,\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u4e0d\u540c\u9636\u6bb5\u95f4\u76f8\u4e92\u7b49\u5f85,\u6700\u7ec8\u63d0\u9ad8\u4e86\u6574\u4f53\u5ef6\u8fdf</li> <li>Diminishing Returns of Deep Pipelining(\u6d41\u6c34\u7ebf\u8fc7\u6df1,\u6536\u76ca\u53cd\u800c\u4e0b\u964d): \u5c06\u7ec4\u5408\u903b\u8f91\u7535\u8def\u5206\u4e3a\u66f4\u5c0f\u5757\u65f6,\u4f1a\u7528\u5230\u66f4\u591a\u7684\u5bc4\u5b58\u5668,\u8fd9\u4e2a\u65f6\u5019\u7531\u5bc4\u5b58\u5668\u66f4\u65b0\u5f15\u8d77\u7684\u5ef6\u8fdf\u5c31\u6210\u4e86\u4e00\u4e2a\u9650\u5236\u56e0\u7d20</li> </ul>"},{"location":"cs/system/CSAPP/#444-pipelining-a-system-with-feedback","title":"4.4.4 Pipelining a System with Feedback","text":""},{"location":"cs/system/CSAPP/#45-pipelined-y86-64-implementations","title":"4.5 Pipelined Y86-64 Implementations","text":"<p>Note</p> <p>\u8bf7\u6ce8\u610f\u8fd9\u91cc\u65f6Y86-64\u67b6\u6784,\u53ef\u80fd\u4f1a\u4e0eRISC-V\u6709\u5dee\u522b</p>"},{"location":"cs/system/sys1/","title":"System1","text":""},{"location":"cs/system/sys1/#in-class","title":"In Class","text":"<p>Note</p> <p>\u8fd9\u4e9b\u662f\u8bfe\u5802\u5185\u5bb9\u4e0e\u4e66\u672c\u4e0d\u540c\u6b65\u7684\u5730\u65b9,\u5e76\u4e14\u7531\u4e8e\u540e\u534a\u5b66\u671f\u5b66\u4e1a\u538b\u529b\u8f83\u5927,\u6240\u4ee5\u540e\u534a\u90e8\u5206\u90e8\u5206\u8bfe\u7b14\u8bb0\u6ca1\u6709\u8bb0\u5f55,\u8bf7\u8c28\u614e\u53c2\u8003</p>"},{"location":"cs/system/sys1/#1-foundations-of-digital-logic","title":"1. Foundations of Digital Logic","text":""},{"location":"cs/system/sys1/#logical-operations","title":"Logical Operations","text":"<ul> <li>AND is denoted by a dot (.)</li> <li>OR is denoted by a plus(+)</li> <li>Not is denoted by an overbar(-),a single quote mark('),or (~)</li> </ul>"},{"location":"cs/system/sys1/#boolean-algebra","title":"Boolean algebra","text":"<p>\\(F(X_{1},X_{2},\\ldots)  = X1*F(1,X_{2},\\ldots) + \\neg{X1}F(0,X_{2}),\\ldots\\)</p> <ul> <li>Boolean algebra: each variable have multiple values</li> <li>Switching algebra: each variable can be either 1 or 0</li> <li>Dual: and -&gt; or,or-&gt;and,0-&gt;1,1-&gt;0</li> </ul>"},{"location":"cs/system/sys1/#logic-functions","title":"Logic functions","text":"<ul> <li> <p>complement of a function: </p> <ul> <li>interchanging(\u00b7 and +) and (0 and 1),and complementing each variable</li> <li>The complement of a function is not the same as the dual of a function</li> <li>\\(F(x,y,z) = x\\neg{y}\\neg{z} + \\neg{x}yz\\) so \\(G = F\\prime = \\neg{(x\\neg{y}\\neg{z})} \u00b7 \\neg{(\\neg{x})yz}\\) </li> </ul> </li> <li> <p>Minterm and Maxterm</p> </li> <li>Canonical Forms:<ul> <li>Canonical Sum-Of-Products (sum of minterms) $ \\sum $(minterms for 1 of the function) </li> <li>Canonical Products-Of-Sum (product of maxterms) $ \\sum $(maxterms for 0 of the function) </li> </ul> </li> </ul>"},{"location":"cs/system/sys1/#simplification-of-logic-functions","title":"Simplification of logic functions","text":"<ul> <li>\u5361\u8bfa\u56fe(Karnaugh Map)</li> <li>Bubble pushing</li> </ul>"},{"location":"cs/system/sys1/#2-combinational-logic-design","title":"2. Combinational Logic Design","text":""},{"location":"cs/system/sys1/#introduction-to-verilog-hdl","title":"Introduction to Verilog HDL","text":"<ul> <li>Sized numbers: <code>4'b1111</code>,<code>12;habc</code></li> <li>Unsized numbers: <code>233232</code>,<code>'habc</code> (Dafault base is decimal)</li> <li>Negative numbers: <code>-6'd3</code>(Two's complement is used to store the value)</li> </ul>"},{"location":"cs/system/sys1/#about-combinational-logic-circuits","title":"About combinational logic circuits","text":"<ul> <li>Combinational circuits are memory-less:The ouput value depends ONLY on the current input values</li> <li>Sequential circuits consist of combinational logic as well as memory elements(used to store certain circuit states):Outputs depend on BOTH current input values and previous input values(kept in the storage elements)</li> </ul>"},{"location":"cs/system/sys1/#some-classicbasic-designs","title":"Some classic/basic designs","text":"<ul> <li>multiplexer:\u591a\u8def\u590d\u7528\u5668,\u591a\u53d8\u5c11</li> <li>Demultiplexer:\u5206\u8def\u5668,\u5c11\u53d8\u591a</li> <li>Half adder:\u534a\u52a0\u5668,\u53ea\u80fd\u5904\u7406\u4e24\u4e2a\u8f93\u5165,\u4e0d\u8003\u8651\u8fdb\u4f4d</li> <li>Full adder:\u5168\u52a0\u5668,\u53ef\u4ee5\u5904\u7406\u4e09\u4e2a\u8f93\u5165,\u8003\u8651\u8fdb\u4f4d</li> </ul>"},{"location":"cs/system/sys1/#timing-analysis","title":"Timing analysis","text":"<ul> <li> <p>Circuit delay</p> <ul> <li>\\(T_{pd}\\) = max delay from input to output</li> <li>\\(T_{cd}\\) = min delay from input to output </li> </ul> </li> <li> <p>The critical(longest) path:</p> <ul> <li>\\(T_{pd}\\) of the circut$ = \\(\\sum T_{pd}\\) of the circuit elements along the critical path</li> </ul> </li> <li> <p>The shortest path</p> <ul> <li>\\(T_{cd}\\) of the circuit = $\\sum T_{cd} $ of the circuit elements along the shortest path</li> </ul> </li> <li> <p>Race hazard(\u7ade\u4e89\u98ce\u9669): </p> <ul> <li>Glitch:when a single input change causes multiple output changes</li> </ul> </li> </ul>"},{"location":"cs/system/sys1/#3-sequential-logic-design","title":"3. Sequential Logic Design","text":""},{"location":"cs/system/sys1/#introduction-to-sequential-circuits","title":"Introduction to sequential circuits","text":"<ul> <li>Sequentiala circuits consist of combinational logic as well as storage elements(used to store certain circuit states)</li> <li>Output depends on BOTH current input values and previous input values(kept in the storage elements)</li> </ul> Level-triggered/sensitive:Edge-triggered/sensitive: <p>output controlled by the level of the clock input</p> <p>output changes only at the point in time when the clock changes from value to the other</p> <p>Can be positive-edge triggered (0 to 1),or negative-edge triggered (1 to 0)</p> <ul> <li>latches(\u9501\u5b58\u5668) flip-flops(\u89e6\u53d1\u5668)</li> <li>Flip-flops are edge-triggered while clocked latches are level-sensitive<ul> <li>The advantage of flip-flops ove latches is that the signal on the input pin is captured the moment the flip-flop is clocked,and subsequent changes to the inputs will be ignored until the next clock event.This provides better timing control in complex circuits</li> </ul> </li> <li>Mealy machine:output depends on both the current state and the current input</li> <li>Moore machine:output depends only on the current state</li> <li>Synchronous(\u540c\u6b65) <ul> <li>Circuit output changes only at some dicrete instants of time</li> <li>Achieves synchronoization by using a timing signal called the clock(\u901a\u8fc7\u4f7f\u7528\u79f0\u4e3a\u65f6\u949f\u7684\u5b9a\u65f6\u4fe1\u53f7\u5b9e\u73b0\u540c\u6b65)</li> </ul> </li> <li>Asynchronous(\u5f02\u6b65)<ul> <li>Circuit output can change at any time(clockless)</li> </ul> </li> <li>Terminology(\u672f\u8bed):<ul> <li>Finite State Machine</li> <li>State Diagram</li> <li>State Table</li> </ul> </li> </ul>"},{"location":"cs/system/sys1/#basic-sequential-logic-elements","title":"Basic sequential logic elements","text":"<ul> <li>Bistable Circuit<ul> <li>No input to control the state</li> <li>Stores 1 bit of state in the state variable</li> </ul> </li> </ul> \\(SR\\) Latch\\(\\bar{S}\\bar{R}\\) Latchclocked \\(SR\\) latch\\(D\\) Latch <p>Aka(\u53c8\u540d) SR Latch with Control input </p> <p></p> Pulse-Triggered Flip-FlopEdge-Triggered Flip-Flop <p> But it may have some problems: 1's and 0's catching</p> <p> This photo is Negative-edge triggered D flip-flop</p> <p>Positive-edge triggered D flip-flop(standard flip-flop) is adding inverter to the clock input</p> Enabled D flip-flopResettable D flip-flopJK flip-flopT flip-flop <p>The enable input(EN) controls when new data is stored(when EN = 1) </p> <p>The reset input(R) forces the output to 0(when \\(\\overline{Reset} = 0\\))</p> <p>Two types: * Synchronous(\u540c\u6b65): reset at the clock edge only * Asynchronous(\u5f02\u6b65): reset immediately when Reset = 1  </p> <p>Same as SR flip-flop except that J=K=1 is allowed(J = S,K = R)</p> <p>For J=K=1,the flip-flop changes to opposite state </p> <p>Has a single input T,Same as JK flip-flop withe J=k=T * T=0,no change to state * T=1,changes to opposite state </p> <p></p>"},{"location":"cs/system/sys1/#sequential-logic-design","title":"Sequential logic design","text":"<p>Please see the ppt in 2024/4/1 aanad 2024/4/3</p> <p>video</p>"},{"location":"cs/system/sys1/#classic-sequential-logic-elements","title":"Classic sequential logic elements","text":"RegistersRipple CountersSynchronous Counters <p>It will cause a ripple effect:delay in the output of the flip-flop </p> <p>Use a common clock signal to all flip-flops  </p>"},{"location":"cs/system/sys1/#4-computational-operations-units","title":"4. Computational Operations &amp; Units","text":""},{"location":"cs/system/sys1/#basic-computational-units","title":"Basic computational units","text":"<p>Prefix Adder: faster than carry-lookahead adder(\u611f\u5174\u8da3\u53ef\u81ea\u884c\u4e86\u89e3,ppt\u53ea\u6709\u7b80\u5355\u4ecb\u7ecd) \u672c\u8282\u8fd8\u5305\u542b\u52a0\u6cd5\u5668,\u51cf\u6cd5\u5668\u7684\u5185\u5bb9,\u4e0d\u8fc7\u5b9e\u9a8c\u6587\u6863\u7684\u5185\u5bb9\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86</p>"},{"location":"cs/system/sys1/#fixed-number-operations","title":"Fixed number operations","text":"<p>\u5728\u4e58\u6cd5\u4e2d,\u8fd8\u6709\u4e00\u4e2aBooth Encoding\u7684\u65b9\u6cd5,\u53ef\u4ee5\u767e\u5ea6\u901f\u5b66.</p>"},{"location":"cs/system/sys1/#arithmetic-logic-unitalu","title":"Arithmetic logic unit(ALU)","text":"Datapathvarious use of Shifters"},{"location":"cs/system/sys1/#_1","title":"\u4e58\u6cd5\u5668\u4e0e\u9664\u6cd5\u5668\u7684\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f","text":""},{"location":"cs/system/sys1/#5-instruction-set-architectureisa","title":"5. Instruction Set Architecture(ISA)","text":"<ul> <li>Elements of an ISA:<ul> <li>Opcode:operation code</li> <li>Source Operand refrerence</li> <li>Result Operand reference</li> <li>Next Instruction reference</li> </ul> </li> </ul>"},{"location":"cs/system/sys1/#operands-and-addressing-modes","title":"Operands and addressing modes","text":"<p>Operands</p> Three-Operand InstructionsTwo-Operand InstructionsOne-Operand InstructionsZero-Operand Instructions <p></p> <p></p> <p></p> <p></p> <p>Addressing modes</p> Immediate AddressingDirect AddressingIndirect Addressing <p><code>ADD #5</code> Means add the number 5 to someting</p> <p>This uses immediate addressing for the value 5</p> <p>Must know value at assembly time</p> <p><code>ADD 100</code> Means add the value at memory location 100 to something</p> <p>Must know address at assembly time</p> <p><code>Add [100]</code> Means \"The data at memory location 100 is an address.Go to the address stored there andd get that data and add it to the Accumulator\"</p> <p>Downside:Requires addtional memory access</p>"},{"location":"cs/system/sys1/#types-of-operations-and-encodings","title":"Types of operations and encodings","text":"<p>Operations * Arithmetic and Logic * Shift * Data Transfer:MOV/LOAD/STORE * String * Contorl * System * Input/Output Encodings * Variable * Fixed * Hybrid</p>"},{"location":"cs/system/sys1/#risc-and-cisc","title":"RISC(\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a) and CISC(\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a)","text":"<p>\u6b64\u5904\u5185\u5bb9\u9700\u8981\u5927\u91cf\u56fe\u6765\u7406\u89e3,\u6240\u4ee5\u5efa\u8bae\u770b\u667a\u4e91\u7684PPT</p> <p>GPRs:General Purpose Registers</p>"},{"location":"cs/system/sys2/","title":"System2","text":"<p>\u63d0\u793a</p> <p>\u672c\u6587\u6863\u4e3a\u8ba1\u7b97\u673a\u7cfb\u7edf\u2161\u8bfe\u7a0b\u7b14\u8bb0,\u5185\u5bb9\u6bd4\u7cfb\u7edf\u2160\u8be6\u7ec6\u4e0d\u5c11,\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003.</p> <p></p>"},{"location":"cs/system/sys2/#1-review","title":"1 Review","text":""},{"location":"cs/system/sys2/#11-about-the-class","title":"1.1 About the Class","text":"<p>What will be covered:</p> <ol> <li> <p>Learn more complex CPU design</p> </li> <li> <p>explore the principle of Operatng System</p> </li> <li> <p>Know not only what but also why</p> </li> </ol> <p>Course Topics:</p> <ol> <li> <p>Instruction Classification and Design Principle</p> </li> <li> <p>Concept,Category,Architecture and Design of pipeline Cpu</p> </li> <li> <p>Hazard(\u5371\u5bb3) of Pipeline CPU</p> </li> <li> <p>Software/Hardware Interfaces</p> </li> <li> <p>Introduction of OS</p> </li> <li> <p>Interrupt</p> </li> <li> <p>Process and Thread</p> </li> <li> <p>Scheduling,Synchronization and Deadlock</p> </li> </ol>"},{"location":"cs/system/sys2/#12-instruction-set-principles","title":"1.2 Instruction Set Principles","text":""},{"location":"cs/system/sys2/#basic-principles","title":"Basic principles:","text":"<ul> <li>Compatibility(\u517c\u5bb9)</li> <li>Versatility(\u591a\u529f\u80fd\u6027)</li> <li>High efficiency</li> <li>Security</li> </ul>"},{"location":"cs/system/sys2/#isa-classes","title":"ISA Classes:","text":"Stack ArchitectureAccumulator ArchitectureGeneral-Purpose Register\" Architecture(GPR) <p>Operands are implicitly on the top of the stack(TOS) \u6b64\u5904\u7684<code>sub</code>,\u662f\u6307\u6b21\u6808\u9876\u5143\u7d20\u51cf\u53bb\u6808\u9876\u5143\u7d20,\u7ed3\u679c\u5b58\u5165\u6808\u9876\u5143\u7d20 <pre><code># A,B is in Memory initially\nPush A\nPush B\nAdd  \nPop C \n</code></pre></p> <p></p> <p>One implicit operand:the accumulator,one explicit operand: mem location \u6b64\u5904<code>sub B</code>,\u662f\u6307\u7d2f\u52a0\u5668\u51cf\u53bbB,\u7ed3\u679c\u5b58\u5165\u7d2f\u52a0\u5668\u7684\u5bc4\u5b58\u5668\u4e2d <pre><code>Load A\nAdd B\nStore C\n</code></pre></p> <p></p> <p>Only explicit operands:registers,memory locations</p> <p>Two Classes:</p> <ul> <li> <p>Register-memory arch:any instruction can access memory</p> </li> <li> <p>Load-store arch:only load and store instruction can access memory(RISC-V)</p> </li> </ul> <p></p>"},{"location":"cs/system/sys2/#13-more-about-isa","title":"1.3 More about ISA","text":""},{"location":"cs/system/sys2/#addresing-modes","title":"Addresing Modes(\u5bfb\u5740\u65b9\u5f0f)","text":"<ul> <li>Types:<ul> <li>constant --immediate</li> <li>register</li> <li>memory location - effective address</li> </ul> </li> </ul>"},{"location":"cs/system/sys2/#interpret-memory-address","title":"Interpret(\u89e3\u91ca) Memory Address","text":"<ul> <li>byte = 8 bits,word = 32 bits</li> <li>Byte ordering in memory:0x12345678</li> <li>Little Endian(store least significant byte in the smallest address): 78 56 34 12 (-&gt;\u5185\u5b58\u589e\u957f\u65b9\u5411)</li> <li>Big Endian: 12 34 56 78 </li> <li>RISC-V\u4f7f\u7528\u5c0f\u7aef</li> <li>Misaligned access needs more memory access</li> </ul>"},{"location":"cs/system/sys2/#control-flow-instruction","title":"Control Flow Instruction","text":"<ul> <li>Four types of control flow change:<ul> <li>Conditional branches</li> <li>Jumps</li> <li>Procedure calls</li> <li>Procedure returns</li> </ul> </li> <li>Explicity specified destination address:procedure return as target is not known at compile time</li> <li>PC-relative addressing</li> <li>Dynamic address:for returns and indirect jumps with unkown target at compile time</li> </ul>"},{"location":"cs/system/sys2/#14-risc-architecture","title":"1.4 RISC Architecture","text":"<ul> <li>\u6211\u4eec\u9700\u8981\u638c\u63e16\u4e2d\u57fa\u672c\u6307\u4ee4:R,I,S,B,U,J,\u81ea\u5df1\u53bb\u67e5\u624b\u518c\u770b</li> <li>RISC-V has 32 registers,x0 is constant 0</li> </ul>"},{"location":"cs/system/sys2/#15-risc-v-isa","title":"1.5 RISC-V ISA","text":"<ul> <li>Hardware for \\(&lt;,&gt;=\\) slower than \\(=,!=\\)</li> </ul>"},{"location":"cs/system/sys2/#16-supporting-procedures-in-computer-hardware","title":"1.6 Supporting Procedures in Computer Hardware","text":"<ul> <li>\u6808\u4e2d\u6709\u4e24\u4e2a\u6307\u9488,<code>$fp,$sp</code>,\u5206\u522b\u5bf9\u5e94\u6808\u5e95\u548c\u6808\u9876,\u6808\u662f\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u53d8\u5316\u7684,\u4f4e\u5730\u5740\u7684\u662f\u6808\u9876</li> <li>Powerful instructions \u4e0d\u4e00\u5b9a\u4f1a\u6709 higher performance</li> </ul>"},{"location":"cs/system/sys2/#2-pipelining","title":"2 Pipelining","text":""},{"location":"cs/system/sys2/#what-is-pipelining","title":"What is pipelining?","text":"<p>Overlapping excution:Higher-usage of functional units</p> Conflict in access memoryASD <p>Such as Instruction memory &amp; data memory,because IF and EX need to access memory at the same time</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\u5728Memory\u548cinstruction decode\u4e2d\u52a0\u4e00\u4e2a\u7f13\u5b58</p> <p>\u8fd9\u4e2a\u5206\u7c7b\u662f\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u4e0b\u7684\u5206\u7c7b</p> Static pipeliningDynamic pipelining <p>In the same time,each segment of the multi-function pipelining can only work according to the connection mode of the same function</p> <p>In the same time,each segment of the multi-function pipelining can be connected in different ways and perform multiple functions at the same time</p>"},{"location":"cs/system/sys3/","title":"System3","text":"<p>Note</p> <p>\u8bfe\u9898\u91cd\u70b9\u77e5\u8bc6\u70b9\u8bb0\u5f55</p>"}]}